import { inject as Lo, provide as No, shallowRef as Pa, watchEffect as ve, readonly as oa, customRef as _n, ref as B, computed as T, watch as ee, nextTick as re, getCurrentScope as Ls, onScopeDispose as zo, effectScope as Ko, unref as o, toRef as Ho, onBeforeUnmount as xn, onMounted as se, getCurrentInstance as Ze, onUpdated as Wo, Fragment as Pe, defineComponent as w, toRefs as le, renderSlot as C, onBeforeUpdate as Ns, toHandlerKey as zs, camelize as jo, onUnmounted as Te, mergeProps as k, h as rt, Comment as Ks, cloneVNode as Uo, openBlock as b, createBlock as _, withCtx as h, createVNode as G, createCommentVNode as ue, withKeys as he, Teleport as At, normalizeProps as z, guardReactiveProps as K, normalizeStyle as Ce, reactive as Go, withModifiers as ge, createElementBlock as fe, withDirectives as Ea, vShow as Sn, createElementVNode as je, toDisplayString as ke, createTextVNode as ye, mergeDefaults as qo, renderList as Da, markRaw as bo, resolveDynamicComponent as Ue, isRef as wt, toHandlers as Pn, triggerRef as Co, useSlots as En, onBeforeMount as Yo, vModelSelect as Hs, toRaw as Ws } from "vue";
import { CalendarDateTime as js, CalendarDate as Us, DateFormatter as et, today as Gs, getLocalTimeZone as Dn, isSameMonth as wa, isSameDay as Oe, isEqualDay as Se, isToday as Xo } from "@internationalized/date";
import { hasTime as Zt, toDate as Fe, isZonedDateTime as Zo, createMonths as Ut, isAfter as wo, isBefore as Le, parseStringToDateValue as Xt, getDaysInMonth as cn, areAllDaysBetweenValid as Jo, isBetween as qs, isBetweenInclusive as Ys } from "./date.js";
import { useFloating as Xs, autoUpdate as Zs, offset as Js, flip as _o, shift as Qs, limitShift as er, size as tr, arrow as ar, hide as nr } from "@floating-ui/vue";
function Q(a, t) {
  const e = typeof a == "string" && !t ? `${a}Context` : t, n = Symbol(e);
  return [(r) => {
    const i = Lo(n, r);
    if (i || i === null)
      return i;
    throw new Error(
      `Injection \`${n.toString()}\` not found. Component must be used within ${Array.isArray(a) ? `one of the following components: ${a.join(
        ", "
      )}` : `\`${a}\``}`
    );
  }, (r) => (No(n, r), r)];
}
function $a(a, t, e) {
  const n = e.originalEvent.target, l = new CustomEvent(a, {
    bubbles: !1,
    cancelable: !0,
    detail: e
  });
  t && n.addEventListener(a, t, { once: !0 }), n.dispatchEvent(l);
}
const la = typeof document < "u";
function or(a, t) {
  if (a.length !== t.length)
    return !1;
  for (let e = 0; e < a.length; e++)
    if (a[e] !== t[e])
      return !1;
  return !0;
}
function Ot(a) {
  const { defaultValue: t, defaultPlaceholder: e, granularity: n = "day" } = a;
  if (Array.isArray(t) && t.length)
    return t.at(-1).copy();
  if (t && !Array.isArray(t))
    return t.copy();
  if (e)
    return e.copy();
  const l = /* @__PURE__ */ new Date(), s = l.getFullYear(), r = l.getMonth() + 1, i = l.getDate();
  return ["hour", "minute", "second"].includes(n ?? "day") ? new js(s, r, i, 0, 0, 0) : new Us(s, r, i);
}
const lr = [
  "ach",
  "af",
  "am",
  "an",
  "ar",
  "ast",
  "az",
  "be",
  "bg",
  "bn",
  "br",
  "bs",
  "ca",
  "cak",
  "ckb",
  "cs",
  "cy",
  "da",
  "de",
  "dsb",
  "el",
  "en",
  "eo",
  "es",
  "et",
  "eu",
  "fa",
  "ff",
  "fi",
  "fr",
  "fy",
  "ga",
  "gd",
  "gl",
  "he",
  "hr",
  "hsb",
  "hu",
  "ia",
  "id",
  "it",
  "ja",
  "ka",
  "kk",
  "kn",
  "ko",
  "lb",
  "lo",
  "lt",
  "lv",
  "meh",
  "ml",
  "ms",
  "nl",
  "nn",
  "no",
  "oc",
  "pl",
  "pt",
  "rm",
  "ro",
  "ru",
  "sc",
  "scn",
  "sk",
  "sl",
  "sr",
  "sv",
  "szl",
  "tg",
  "th",
  "tr",
  "uk",
  "zh-CN",
  "zh-TW"
], sr = ["year", "month", "day"], en = {
  ach: { year: "mwaka", month: "dwe", day: "nino" },
  af: { year: "jjjj", month: "mm", day: "dd" },
  am: { year: "ዓዓዓዓ", month: "ሚሜ", day: "ቀቀ" },
  an: { year: "aaaa", month: "mm", day: "dd" },
  ar: { year: "سنة", month: "شهر", day: "يوم" },
  ast: { year: "aaaa", month: "mm", day: "dd" },
  az: { year: "iiii", month: "aa", day: "gg" },
  be: { year: "гггг", month: "мм", day: "дд" },
  bg: { year: "гггг", month: "мм", day: "дд" },
  bn: { year: "yyyy", month: "মিমি", day: "dd" },
  br: { year: "bbbb", month: "mm", day: "dd" },
  bs: { year: "gggg", month: "mm", day: "dd" },
  ca: { year: "aaaa", month: "mm", day: "dd" },
  cak: { year: "jjjj", month: "ii", day: "q'q'" },
  ckb: { year: "ساڵ", month: "مانگ", day: "ڕۆژ" },
  cs: { year: "rrrr", month: "mm", day: "dd" },
  cy: { year: "bbbb", month: "mm", day: "dd" },
  da: { year: "åååå", month: "mm", day: "dd" },
  de: { year: "jjjj", month: "mm", day: "tt" },
  dsb: { year: "llll", month: "mm", day: "źź" },
  el: { year: "εεεε", month: "μμ", day: "ηη" },
  en: { year: "yyyy", month: "mm", day: "dd" },
  eo: { year: "jjjj", month: "mm", day: "tt" },
  es: { year: "aaaa", month: "mm", day: "dd" },
  et: { year: "aaaa", month: "kk", day: "pp" },
  eu: { year: "uuuu", month: "hh", day: "ee" },
  fa: { year: "سال", month: "ماه", day: "روز" },
  ff: { year: "hhhh", month: "ll", day: "ññ" },
  fi: { year: "vvvv", month: "kk", day: "pp" },
  fr: { year: "aaaa", month: "mm", day: "jj" },
  fy: { year: "jjjj", month: "mm", day: "dd" },
  ga: { year: "bbbb", month: "mm", day: "ll" },
  gd: { year: "bbbb", month: "mm", day: "ll" },
  gl: { year: "aaaa", month: "mm", day: "dd" },
  he: { year: "שנה", month: "חודש", day: "יום" },
  hr: { year: "gggg", month: "mm", day: "dd" },
  hsb: { year: "llll", month: "mm", day: "dd" },
  hu: { year: "éééé", month: "hh", day: "nn" },
  ia: { year: "aaaa", month: "mm", day: "dd" },
  id: { year: "tttt", month: "bb", day: "hh" },
  it: { year: "aaaa", month: "mm", day: "gg" },
  ja: { year: " 年 ", month: "月", day: "日" },
  ka: { year: "წწწწ", month: "თთ", day: "რრ" },
  kk: { year: "жжжж", month: "аа", day: "кк" },
  kn: { year: "ವವವವ", month: "ಮಿಮೀ", day: "ದಿದಿ" },
  ko: { year: "연도", month: "월", day: "일" },
  lb: { year: "jjjj", month: "mm", day: "dd" },
  lo: { year: "ປປປປ", month: "ດດ", day: "ວວ" },
  lt: { year: "mmmm", month: "mm", day: "dd" },
  lv: { year: "gggg", month: "mm", day: "dd" },
  meh: { year: "aaaa", month: "mm", day: "dd" },
  ml: { year: "വർഷം", month: "മാസം", day: "തീയതി" },
  ms: { year: "tttt", month: "mm", day: "hh" },
  nl: { year: "jjjj", month: "mm", day: "dd" },
  nn: { year: "åååå", month: "mm", day: "dd" },
  no: { year: "åååå", month: "mm", day: "dd" },
  oc: { year: "aaaa", month: "mm", day: "jj" },
  pl: { year: "rrrr", month: "mm", day: "dd" },
  pt: { year: "aaaa", month: "mm", day: "dd" },
  rm: { year: "oooo", month: "mm", day: "dd" },
  ro: { year: "aaaa", month: "ll", day: "zz" },
  ru: { year: "гггг", month: "мм", day: "дд" },
  sc: { year: "aaaa", month: "mm", day: "dd" },
  scn: { year: "aaaa", month: "mm", day: "jj" },
  sk: { year: "rrrr", month: "mm", day: "dd" },
  sl: { year: "llll", month: "mm", day: "dd" },
  sr: { year: "гггг", month: "мм", day: "дд" },
  sv: { year: "åååå", month: "mm", day: "dd" },
  szl: { year: "rrrr", month: "mm", day: "dd" },
  tg: { year: "сссс", month: "мм", day: "рр" },
  th: { year: "ปปปป", month: "ดด", day: "วว" },
  tr: { year: "yyyy", month: "aa", day: "gg" },
  uk: { year: "рррр", month: "мм", day: "дд" },
  "zh-CN": { year: "年", month: "月", day: "日" },
  "zh-TW": { year: "年", month: "月", day: "日" }
};
function rr(a) {
  if (xo(a))
    return en[a];
  {
    const t = cr(a);
    return xo(t) ? en[t] : en.en;
  }
}
function tn(a, t, e) {
  return ir(a) ? rr(e)[a] : dr(a) ? t : ur(a) ? "––" : "";
}
function xo(a) {
  return lr.includes(a);
}
function ir(a) {
  return sr.includes(a);
}
function ur(a) {
  return a === "hour" || a === "minute" || a === "second";
}
function dr(a) {
  return a === "era" || a === "dayPeriod";
}
function cr(a) {
  return Intl.Locale ? new Intl.Locale(a).language : a.split("-")[0];
}
const $n = ["day", "month", "year"], Qo = ["hour", "minute", "second", "dayPeriod"], el = [...$n, ...Qo];
function fr(a) {
  return $n.includes(a);
}
function tl(a) {
  return el.includes(a);
}
function pr(a, t) {
  const e = {
    year: "numeric",
    month: "2-digit",
    day: "2-digit",
    hour: "2-digit",
    minute: "2-digit",
    second: "2-digit",
    timeZoneName: "short",
    hourCycle: t === 24 ? "h24" : void 0,
    hour12: t === 24 ? !1 : void 0
  };
  return a === "day" && (delete e.second, delete e.hour, delete e.minute, delete e.timeZoneName), a === "hour" && (delete e.minute, delete e.second), a === "minute" && delete e.second, e;
}
function al(a) {
  const t = a.querySelector("[data-selected]");
  if (t)
    return t.focus();
  const e = a.querySelector("[data-today]");
  if (e)
    return e.focus();
  const n = a.querySelector("[data-radix-vue-calendar-day]");
  if (n)
    return n.focus();
}
function vr(a, t) {
  var e;
  const n = Pa();
  return ve(() => {
    n.value = a();
  }, {
    ...t,
    flush: (e = t == null ? void 0 : t.flush) != null ? e : "sync"
  }), oa(n);
}
function mr(a, t) {
  let e, n, l;
  const s = B(!0), r = () => {
    s.value = !0, l();
  };
  ee(a, r, { flush: "sync" });
  const i = typeof t == "function" ? t : t.get, u = typeof t == "function" ? void 0 : t.set, d = _n((c, f) => (n = c, l = f, {
    get() {
      return s.value && (e = i(), s.value = !1), n(), e;
    },
    set(p) {
      u == null || u(p);
    }
  }));
  return Object.isExtensible(d) && (d.trigger = r), d;
}
function dt(a) {
  return Ls() ? (zo(a), !0) : !1;
}
function fn() {
  const a = /* @__PURE__ */ new Set(), t = (l) => {
    a.delete(l);
  };
  return {
    on: (l) => {
      a.add(l);
      const s = () => t(l);
      return dt(s), {
        off: s
      };
    },
    off: t,
    trigger: (...l) => Promise.all(Array.from(a).map((s) => s(...l)))
  };
}
function hr(a) {
  let t = !1, e;
  const n = Ko(!0);
  return (...l) => (t || (e = n.run(() => a(...l)), t = !0), e);
}
function yr(a) {
  let t = 0, e, n;
  const l = () => {
    t -= 1, n && t <= 0 && (n.stop(), e = void 0, n = void 0);
  };
  return (...s) => (t += 1, e || (n = Ko(!0), e = n.run(() => a(...s))), dt(l), e);
}
function Ne(a) {
  return typeof a == "function" ? a() : o(a);
}
const Je = typeof window < "u" && typeof document < "u";
typeof WorkerGlobalScope < "u" && globalThis instanceof WorkerGlobalScope;
const gr = (a) => typeof a < "u", br = (a) => a != null, Cr = Object.prototype.toString, wr = (a) => Cr.call(a) === "[object Object]", So = (a, t, e) => Math.min(e, Math.max(t, a)), Jt = () => {
}, Po = /* @__PURE__ */ _r();
function _r() {
  var a, t;
  return Je && ((a = window == null ? void 0 : window.navigator) == null ? void 0 : a.userAgent) && (/iP(ad|hone|od)/.test(window.navigator.userAgent) || ((t = window == null ? void 0 : window.navigator) == null ? void 0 : t.maxTouchPoints) > 2 && /iPad|Macintosh/.test(window == null ? void 0 : window.navigator.userAgent));
}
function xr(a, t) {
  function e(...n) {
    return new Promise((l, s) => {
      Promise.resolve(a(() => t.apply(this, n), { fn: t, thisArg: this, args: n })).then(l).catch(s);
    });
  }
  return e;
}
function Sr(a, t = {}) {
  let e, n, l = Jt;
  const s = (i) => {
    clearTimeout(i), l(), l = Jt;
  };
  return (i) => {
    const u = Ne(a), d = Ne(t.maxWait);
    return e && s(e), u <= 0 || d !== void 0 && d <= 0 ? (n && (s(n), n = null), Promise.resolve(i())) : new Promise((c, f) => {
      l = t.rejectOnCancel ? f : c, d && !n && (n = setTimeout(() => {
        e && s(e), n = null, c(i());
      }, d)), e = setTimeout(() => {
        n && s(n), n = null, c(i());
      }, u);
    });
  };
}
function nl(a) {
  return a || Ze();
}
function Pr(...a) {
  if (a.length !== 1)
    return Ho(...a);
  const t = a[0];
  return typeof t == "function" ? oa(_n(() => ({ get: t, set: Jt }))) : B(t);
}
function kt(a, t = 1e4) {
  return _n((e, n) => {
    let l = Ne(a), s;
    const r = () => setTimeout(() => {
      l = Ne(a), n();
    }, Ne(t));
    return dt(() => {
      clearTimeout(s);
    }), {
      get() {
        return e(), l;
      },
      set(i) {
        l = i, n(), clearTimeout(s), s = r();
      }
    };
  });
}
function Bn(a, t = 200, e = {}) {
  return xr(
    Sr(t, e),
    a
  );
}
function Er(a, t) {
  nl(t) && xn(a, t);
}
function Dr(a, t = !0, e) {
  nl() ? se(a, e) : t ? a() : re(a);
}
function Tn(a, t, e = {}) {
  const {
    immediate: n = !0
  } = e, l = B(!1);
  let s = null;
  function r() {
    s && (clearTimeout(s), s = null);
  }
  function i() {
    l.value = !1, r();
  }
  function u(...d) {
    r(), l.value = !0, s = setTimeout(() => {
      l.value = !1, s = null, a(...d);
    }, Ne(t));
  }
  return n && (l.value = !0, Je && u()), dt(i), {
    isPending: oa(l),
    start: u,
    stop: i
  };
}
function $r(a = 1e3, t = {}) {
  const {
    controls: e = !1,
    callback: n
  } = t, l = Tn(
    n ?? Jt,
    a,
    t
  ), s = T(() => !l.isPending.value);
  return e ? {
    ready: s,
    ...l
  } : s;
}
function Br(a, t, e) {
  const n = ee(a, (...l) => (re(() => n()), t(...l)), e);
  return n;
}
function Be(a) {
  var t;
  const e = Ne(a);
  return (t = e == null ? void 0 : e.$el) != null ? t : e;
}
const Mt = Je ? window : void 0;
function it(...a) {
  let t, e, n, l;
  if (typeof a[0] == "string" || Array.isArray(a[0]) ? ([e, n, l] = a, t = Mt) : [t, e, n, l] = a, !t)
    return Jt;
  Array.isArray(e) || (e = [e]), Array.isArray(n) || (n = [n]);
  const s = [], r = () => {
    s.forEach((c) => c()), s.length = 0;
  }, i = (c, f, p, v) => (c.addEventListener(f, p, v), () => c.removeEventListener(f, p, v)), u = ee(
    () => [Be(t), Ne(l)],
    ([c, f]) => {
      if (r(), !c)
        return;
      const p = wr(f) ? { ...f } : f;
      s.push(
        ...e.flatMap((v) => n.map((y) => i(c, v, y, p)))
      );
    },
    { immediate: !0, flush: "post" }
  ), d = () => {
    u(), r();
  };
  return dt(d), d;
}
function Tr(a) {
  return typeof a == "function" ? a : typeof a == "string" ? (t) => t.key === a : Array.isArray(a) ? (t) => a.includes(t.key) : () => !0;
}
function In(...a) {
  let t, e, n = {};
  a.length === 3 ? (t = a[0], e = a[1], n = a[2]) : a.length === 2 ? typeof a[1] == "object" ? (t = !0, e = a[0], n = a[1]) : (t = a[0], e = a[1]) : (t = !0, e = a[0]);
  const {
    target: l = Mt,
    eventName: s = "keydown",
    passive: r = !1,
    dedupe: i = !1
  } = n, u = Tr(t);
  return it(l, s, (c) => {
    c.repeat && Ne(i) || u(c) && e(c);
  }, r);
}
function Ir(a = {}) {
  var t;
  const {
    window: e = Mt,
    deep: n = !0
  } = a, l = (t = a.document) != null ? t : e == null ? void 0 : e.document, s = () => {
    var u;
    let d = l == null ? void 0 : l.activeElement;
    if (n)
      for (; d != null && d.shadowRoot; )
        d = (u = d == null ? void 0 : d.shadowRoot) == null ? void 0 : u.activeElement;
    return d;
  }, r = B(), i = () => {
    r.value = s();
  };
  return e && (it(e, "blur", (u) => {
    u.relatedTarget === null && i();
  }, !0), it(e, "focus", i, !0)), i(), r;
}
function Ba() {
  const a = B(!1), t = Ze();
  return t && se(() => {
    a.value = !0;
  }, t), a;
}
function ol(a) {
  const t = Ba();
  return T(() => (t.value, !!a()));
}
function ll(a, t = {}) {
  const {
    immediate: e = !0,
    fpsLimit: n = void 0,
    window: l = Mt
  } = t, s = B(!1), r = n ? 1e3 / n : null;
  let i = 0, u = null;
  function d(p) {
    if (!s.value || !l)
      return;
    i || (i = p);
    const v = p - i;
    if (r && v < r) {
      u = l.requestAnimationFrame(d);
      return;
    }
    i = p, a({ delta: v, timestamp: p }), u = l.requestAnimationFrame(d);
  }
  function c() {
    !s.value && l && (s.value = !0, i = 0, u = l.requestAnimationFrame(d));
  }
  function f() {
    s.value = !1, u != null && l && (l.cancelAnimationFrame(u), u = null);
  }
  return e && c(), dt(f), {
    isActive: oa(s),
    pause: f,
    resume: c
  };
}
function Rr(a) {
  return JSON.parse(JSON.stringify(a));
}
function Ar(a, t, e = {}) {
  const { window: n = Mt, ...l } = e;
  let s;
  const r = ol(() => n && "MutationObserver" in n), i = () => {
    s && (s.disconnect(), s = void 0);
  }, u = T(() => {
    const p = Ne(a), v = (Array.isArray(p) ? p : [p]).map(Be).filter(br);
    return new Set(v);
  }), d = ee(
    () => u.value,
    (p) => {
      i(), r.value && n && p.size && (s = new MutationObserver(t), p.forEach((v) => s.observe(v, l)));
    },
    { immediate: !0, flush: "post" }
  ), c = () => s == null ? void 0 : s.takeRecords(), f = () => {
    i(), d();
  };
  return dt(f), {
    isSupported: r,
    stop: f,
    takeRecords: c
  };
}
function Or(a) {
  const t = Ze(), e = mr(
    () => null,
    () => a ? Be(a) : t.proxy.$el
  );
  return Wo(e.trigger), se(e.trigger), e;
}
function Ge(a, t, e = {}) {
  const { window: n = Mt, ...l } = e;
  let s;
  const r = ol(() => n && "ResizeObserver" in n), i = () => {
    s && (s.disconnect(), s = void 0);
  }, u = T(() => Array.isArray(a) ? a.map((f) => Be(f)) : [Be(a)]), d = ee(
    u,
    (f) => {
      if (i(), r.value && n) {
        s = new ResizeObserver(t);
        for (const p of f)
          p && s.observe(p, l);
      }
    },
    { immediate: !0, flush: "post" }
  ), c = () => {
    i(), d();
  };
  return dt(c), {
    isSupported: r,
    stop: c
  };
}
function kr(a, t = {}) {
  const e = Ir(t), n = T(() => Be(a));
  return { focused: T(() => n.value && e.value ? n.value.contains(e.value) : !1) };
}
function Mr(a = Or()) {
  const t = Pa(), e = () => {
    const n = Be(a);
    n && (t.value = n.parentElement);
  };
  return Dr(e), ee(() => Ne(a), e), t;
}
function Vr(a, t) {
  const e = Pa(t);
  return ee(
    Pr(a),
    (n, l) => {
      e.value = l;
    },
    { flush: "sync" }
  ), oa(e);
}
function ne(a, t, e, n = {}) {
  var l, s, r;
  const {
    clone: i = !1,
    passive: u = !1,
    eventName: d,
    deep: c = !1,
    defaultValue: f,
    shouldEmit: p
  } = n, v = Ze(), y = e || (v == null ? void 0 : v.emit) || ((l = v == null ? void 0 : v.$emit) == null ? void 0 : l.bind(v)) || ((r = (s = v == null ? void 0 : v.proxy) == null ? void 0 : s.$emit) == null ? void 0 : r.bind(v == null ? void 0 : v.proxy));
  let m = d;
  t || (t = "modelValue"), m = m || `update:${t.toString()}`;
  const S = (g) => i ? typeof i == "function" ? i(g) : Rr(g) : g, P = () => gr(a[t]) ? S(a[t]) : f, D = (g) => {
    p ? p(g) && y(m, g) : y(m, g);
  };
  if (u) {
    const g = P(), x = B(g);
    let E = !1;
    return ee(
      () => a[t],
      ($) => {
        E || (E = !0, x.value = S($), re(() => E = !1));
      }
    ), ee(
      x,
      ($) => {
        !E && ($ !== a[t] || c) && D($);
      },
      { deep: c }
    ), x;
  } else
    return T({
      get() {
        return P();
      },
      set(g) {
        D(g);
      }
    });
}
function Ta(a) {
  return a ? a.flatMap((t) => t.type === Pe ? Ta(t.children) : [t]) : [];
}
const Fr = ["INPUT", "TEXTAREA"];
function Vt(a, t, e, n = {}) {
  if (!t || n.enableIgnoredElement && Fr.includes(t.nodeName))
    return null;
  const {
    arrowKeyOptions: l = "both",
    attributeName: s = "[data-radix-vue-collection-item]",
    itemsArray: r = [],
    loop: i = !0,
    dir: u = "ltr",
    preventScroll: d = !0,
    focus: c = !1
  } = n, [f, p, v, y, m, S] = [
    a.key === "ArrowRight",
    a.key === "ArrowLeft",
    a.key === "ArrowUp",
    a.key === "ArrowDown",
    a.key === "Home",
    a.key === "End"
  ], P = v || y, D = f || p;
  if (!m && !S && (!P && !D || l === "vertical" && D || l === "horizontal" && P))
    return null;
  const g = e ? Array.from(e.querySelectorAll(s)) : r;
  if (!g.length)
    return null;
  d && a.preventDefault();
  let x = null;
  return D || P ? x = sl(g, t, {
    goForward: P ? y : u === "ltr" ? f : p,
    loop: i
  }) : m ? x = g.at(0) || null : S && (x = g.at(-1) || null), c && (x == null || x.focus()), x;
}
function sl(a, t, { goForward: e, loop: n }, l = a.length) {
  if (--l === 0)
    return null;
  const s = a.indexOf(t), r = e ? s + 1 : s - 1;
  if (!n && (r < 0 || r >= a.length))
    return null;
  const i = (r + a.length) % a.length, u = a[i];
  return u ? u.hasAttribute("disabled") && u.getAttribute("disabled") !== "false" ? sl(
    a,
    u,
    { goForward: e, loop: n },
    l
  ) : u : null;
}
function an(a) {
  if (a === null || typeof a != "object")
    return !1;
  const t = Object.getPrototypeOf(a);
  return t !== null && t !== Object.prototype && Object.getPrototypeOf(t) !== null || Symbol.iterator in a ? !1 : Symbol.toStringTag in a ? Object.prototype.toString.call(a) === "[object Module]" : !0;
}
function pn(a, t, e = ".", n) {
  if (!an(t))
    return pn(a, {}, e, n);
  const l = Object.assign({}, t);
  for (const s in a) {
    if (s === "__proto__" || s === "constructor")
      continue;
    const r = a[s];
    r != null && (n && n(l, s, r, e) || (Array.isArray(r) && Array.isArray(l[s]) ? l[s] = [...r, ...l[s]] : an(r) && an(l[s]) ? l[s] = pn(
      r,
      l[s],
      (e ? `${e}.` : "") + s.toString(),
      n
    ) : l[s] = r));
  }
  return l;
}
function Lr(a) {
  return (...t) => (
    // eslint-disable-next-line unicorn/no-array-reduce
    t.reduce((e, n) => pn(e, n, "", a), {})
  );
}
const Nr = Lr(), [Rn, zr] = Q("ConfigProvider"), hp = /* @__PURE__ */ w({
  __name: "ConfigProvider",
  props: {
    dir: { default: "ltr" },
    scrollBody: { type: [Boolean, Object], default: !0 },
    useId: { type: Function, default: void 0 }
  },
  setup(a) {
    const t = a, { dir: e, scrollBody: n } = le(t);
    return zr({
      dir: e,
      scrollBody: n,
      useId: t.useId
    }), (l, s) => C(l.$slots, "default");
  }
});
let Kr = "useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict", Hr = (a = 21) => {
  let t = "", e = a;
  for (; e--; )
    t += Kr[Math.random() * 64 | 0];
  return t;
};
const Wr = yr(() => {
  const a = B(/* @__PURE__ */ new Map()), t = B(), e = T(() => {
    for (const r of a.value.values())
      if (r)
        return !0;
    return !1;
  }), n = Rn({
    scrollBody: B(!0)
  });
  let l = null;
  const s = () => {
    document.body.style.paddingRight = "", document.body.style.marginRight = "", document.body.style.pointerEvents = "", document.body.style.removeProperty("--scrollbar-width"), document.body.style.overflow = t.value ?? "", Po && (l == null || l()), t.value = void 0;
  };
  return ee(e, (r, i) => {
    var f;
    if (!Je)
      return;
    if (!r) {
      i && s();
      return;
    }
    t.value === void 0 && (t.value = document.body.style.overflow);
    const u = window.innerWidth - document.documentElement.clientWidth, d = { padding: u, margin: 0 }, c = (f = n.scrollBody) != null && f.value ? typeof n.scrollBody.value == "object" ? Nr({
      padding: n.scrollBody.value.padding === !0 ? u : n.scrollBody.value.padding,
      margin: n.scrollBody.value.margin === !0 ? u : n.scrollBody.value.margin
    }, d) : d : { padding: 0, margin: 0 };
    u > 0 && (document.body.style.paddingRight = `${c.padding}px`, document.body.style.marginRight = `${c.margin}px`, document.body.style.setProperty("--scrollbar-width", `${u}px`), document.body.style.overflow = "hidden"), Po && (l = it(
      document,
      "touchmove",
      (p) => {
        var v;
        p.target === document.documentElement && (p.touches.length > 1 || (v = p.preventDefault) == null || v.call(p));
      },
      { passive: !1 }
    )), re(() => {
      document.body.style.pointerEvents = "none", document.body.style.overflow = "hidden";
    });
  }, { immediate: !0, flush: "sync" }), a;
});
function sa(a) {
  const t = Hr(6), e = Wr();
  e.value.set(t, a ?? !1);
  const n = T({
    get: () => e.value.get(t) ?? !1,
    set: (l) => e.value.set(t, l)
  });
  return Er(() => {
    e.value.delete(t);
  }), n;
}
const jr = "data-radix-vue-collection-item";
function Re(a, t = jr) {
  const e = a ?? Symbol();
  return { createCollection: (s) => {
    const r = B([]);
    function i() {
      const u = Be(s);
      return u ? r.value = Array.from(
        u.querySelectorAll(`[${t}]:not([data-disabled])`)
      ) : r.value = [];
    }
    return Ns(() => {
      r.value = [];
    }), se(i), Wo(i), ee(() => s == null ? void 0 : s.value, i, { immediate: !0 }), No(e, r), r;
  }, injectCollection: () => Lo(e, B([])) };
}
function An(a) {
  const t = B(a);
  function e() {
    return t.value;
  }
  function n(m) {
    t.value = m;
  }
  function l(m, S) {
    return new et(t.value, S).format(m);
  }
  function s(m, S = !0) {
    return Zt(m) && S ? l(Fe(m), {
      dateStyle: "long",
      timeStyle: "long"
    }) : l(Fe(m), {
      dateStyle: "long"
    });
  }
  function r(m) {
    return new et(t.value, { month: "long", year: "numeric" }).format(m);
  }
  function i(m) {
    return new et(t.value, { month: "long" }).format(m);
  }
  function u() {
    const m = Gs(Dn());
    return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12].map((P) => ({ label: i(Fe(m.set({ month: P }))), value: P }));
  }
  function d(m) {
    return new et(t.value, { year: "numeric" }).format(m);
  }
  function c(m, S) {
    return Zo(m) ? new et(t.value, {
      ...S,
      timeZone: m.timeZone
    }).formatToParts(Fe(m)) : new et(t.value, S).formatToParts(Fe(m));
  }
  function f(m, S = "narrow") {
    return new et(t.value, { weekday: S }).format(m);
  }
  function p(m) {
    var D;
    return ((D = new et(t.value, {
      hour: "numeric",
      minute: "numeric"
    }).formatToParts(m).find((g) => g.type === "dayPeriod")) == null ? void 0 : D.value) === "PM" ? "PM" : "AM";
  }
  const v = {
    year: "numeric",
    month: "numeric",
    day: "numeric",
    hour: "numeric",
    minute: "numeric",
    second: "numeric"
  };
  function y(m, S, P = {}) {
    const D = { ...v, ...P }, x = c(m, D).find((E) => E.type === S);
    return x ? x.value : "";
  }
  return {
    setLocale: n,
    getLocale: e,
    fullMonth: i,
    fullYear: d,
    fullMonthAndYear: r,
    toParts: c,
    custom: l,
    part: y,
    dayPeriod: p,
    selectedDate: s,
    dayOfWeek: f,
    getMonths: u
  };
}
function be(a) {
  const t = Rn({
    dir: B("ltr")
  });
  return T(() => {
    var e;
    return (a == null ? void 0 : a.value) || ((e = t.dir) == null ? void 0 : e.value) || "ltr";
  });
}
function Ie(a) {
  const t = Ze(), e = t == null ? void 0 : t.type.emits, n = {};
  return e != null && e.length || console.warn(
    `No emitted event found. Please check component: ${t == null ? void 0 : t.type.__name}`
  ), e == null || e.forEach((l) => {
    n[zs(jo(l))] = (...s) => a(l, ...s);
  }), n;
}
let nn = 0;
function On() {
  ve((a) => {
    if (!Je)
      return;
    const t = document.querySelectorAll("[data-radix-focus-guard]");
    document.body.insertAdjacentElement(
      "afterbegin",
      t[0] ?? Eo()
    ), document.body.insertAdjacentElement(
      "beforeend",
      t[1] ?? Eo()
    ), nn++, a(() => {
      nn === 1 && document.querySelectorAll("[data-radix-focus-guard]").forEach((e) => e.remove()), nn--;
    });
  });
}
function Eo() {
  const a = document.createElement("span");
  return a.setAttribute("data-radix-focus-guard", ""), a.tabIndex = 0, a.style.cssText = "outline: none; opacity: 0; position: fixed; pointer-events: none", a;
}
function ct(a) {
  return T(() => {
    var t;
    return Ne(a) ? !!((t = Be(a)) != null && t.closest("form")) : !0;
  });
}
function _t(a) {
  const t = Ze(), e = Object.keys((t == null ? void 0 : t.type.props) ?? {}).reduce((l, s) => {
    const r = (t == null ? void 0 : t.type.props[s]).default;
    return r !== void 0 && (l[s] = r), l;
  }, {}), n = Ho(a);
  return T(() => {
    const l = {}, s = (t == null ? void 0 : t.vnode.props) ?? {};
    return Object.keys(s).forEach((r) => {
      l[jo(r)] = s[r];
    }), Object.keys({ ...e, ...l }).reduce((r, i) => (n.value[i] !== void 0 && (r[i] = n.value[i]), r), {});
  });
}
function _e(a, t) {
  const e = _t(a), n = t ? Ie(t) : {};
  return T(() => ({
    ...e.value,
    ...n
  }));
}
function I() {
  const a = Ze(), t = B(), e = T(() => {
    var r, i;
    return ["#text", "#comment"].includes((r = t.value) == null ? void 0 : r.$el.nodeName) ? (i = t.value) == null ? void 0 : i.$el.nextElementSibling : Be(t);
  }), n = Object.assign({}, a.exposed), l = {};
  for (const r in a.props)
    Object.defineProperty(l, r, {
      enumerable: !0,
      configurable: !0,
      get: () => a.props[r]
    });
  if (Object.keys(n).length > 0)
    for (const r in n)
      Object.defineProperty(l, r, {
        enumerable: !0,
        configurable: !0,
        get: () => n[r]
      });
  Object.defineProperty(l, "$el", {
    enumerable: !0,
    configurable: !0,
    get: () => a.vnode.el
  }), a.exposed = l;
  function s(r) {
    t.value = r, !(r instanceof Element || !r) && (Object.defineProperty(l, "$el", {
      enumerable: !0,
      configurable: !0,
      get: () => r.$el
    }), a.exposed = l);
  }
  return { forwardRef: s, currentRef: t, currentElement: e };
}
function rl(a, t) {
  const e = kt(!1, 300), n = B(null), l = fn();
  function s() {
    n.value = null, e.value = !1;
  }
  function r(i, u) {
    const d = i.currentTarget, c = { x: i.clientX, y: i.clientY }, f = Ur(c, d.getBoundingClientRect()), p = Gr(c, f), v = qr(u.getBoundingClientRect()), y = Xr([...p, ...v]);
    n.value = y, e.value = !0;
  }
  return ve((i) => {
    if (a.value && t.value) {
      const u = (c) => r(c, t.value), d = (c) => r(c, a.value);
      a.value.addEventListener("pointerleave", u), t.value.addEventListener("pointerleave", d), i(() => {
        var c, f;
        (c = a.value) == null || c.removeEventListener("pointerleave", u), (f = t.value) == null || f.removeEventListener("pointerleave", d);
      });
    }
  }), ve((i) => {
    if (n.value) {
      const u = (d) => {
        var y, m;
        if (!n.value)
          return;
        const c = d.target, f = { x: d.clientX, y: d.clientY }, p = ((y = a.value) == null ? void 0 : y.contains(c)) || ((m = t.value) == null ? void 0 : m.contains(c)), v = !Yr(f, n.value);
        p ? s() : v && (s(), l.trigger());
      };
      document.addEventListener("pointermove", u), i(() => document.removeEventListener("pointermove", u));
    }
  }), {
    isPointerInTransit: e,
    onPointerExit: l.on
  };
}
function Ur(a, t) {
  const e = Math.abs(t.top - a.y), n = Math.abs(t.bottom - a.y), l = Math.abs(t.right - a.x), s = Math.abs(t.left - a.x);
  switch (Math.min(e, n, l, s)) {
    case s:
      return "left";
    case l:
      return "right";
    case e:
      return "top";
    case n:
      return "bottom";
    default:
      throw new Error("unreachable");
  }
}
function Gr(a, t, e = 5) {
  const n = [];
  switch (t) {
    case "top":
      n.push(
        { x: a.x - e, y: a.y + e },
        { x: a.x + e, y: a.y + e }
      );
      break;
    case "bottom":
      n.push(
        { x: a.x - e, y: a.y - e },
        { x: a.x + e, y: a.y - e }
      );
      break;
    case "left":
      n.push(
        { x: a.x + e, y: a.y - e },
        { x: a.x + e, y: a.y + e }
      );
      break;
    case "right":
      n.push(
        { x: a.x - e, y: a.y - e },
        { x: a.x - e, y: a.y + e }
      );
      break;
  }
  return n;
}
function qr(a) {
  const { top: t, right: e, bottom: n, left: l } = a;
  return [
    { x: l, y: t },
    { x: e, y: t },
    { x: e, y: n },
    { x: l, y: n }
  ];
}
function Yr(a, t) {
  const { x: e, y: n } = a;
  let l = !1;
  for (let s = 0, r = t.length - 1; s < t.length; r = s++) {
    const i = t[s].x, u = t[s].y, d = t[r].x, c = t[r].y;
    u > n != c > n && e < (d - i) * (n - u) / (c - u) + i && (l = !l);
  }
  return l;
}
function Xr(a) {
  const t = a.slice();
  return t.sort((e, n) => e.x < n.x ? -1 : e.x > n.x ? 1 : e.y < n.y ? -1 : e.y > n.y ? 1 : 0), Zr(t);
}
function Zr(a) {
  if (a.length <= 1)
    return a.slice();
  const t = [];
  for (let n = 0; n < a.length; n++) {
    const l = a[n];
    for (; t.length >= 2; ) {
      const s = t[t.length - 1], r = t[t.length - 2];
      if ((s.x - r.x) * (l.y - r.y) >= (s.y - r.y) * (l.x - r.x))
        t.pop();
      else
        break;
    }
    t.push(l);
  }
  t.pop();
  const e = [];
  for (let n = a.length - 1; n >= 0; n--) {
    const l = a[n];
    for (; e.length >= 2; ) {
      const s = e[e.length - 1], r = e[e.length - 2];
      if ((s.x - r.x) * (l.y - r.y) >= (s.y - r.y) * (l.x - r.x))
        e.pop();
      else
        break;
    }
    e.push(l);
  }
  return e.pop(), t.length === 1 && e.length === 1 && t[0].x === e[0].x && t[0].y === e[0].y ? t : t.concat(e);
}
var Jr = function(a) {
  if (typeof document > "u")
    return null;
  var t = Array.isArray(a) ? a[0] : a;
  return t.ownerDocument.body;
}, $t = /* @__PURE__ */ new WeakMap(), da = /* @__PURE__ */ new WeakMap(), ca = {}, on = 0, il = function(a) {
  return a && (a.host || il(a.parentNode));
}, Qr = function(a, t) {
  return t.map(function(e) {
    if (a.contains(e))
      return e;
    var n = il(e);
    return n && a.contains(n) ? n : (console.error("aria-hidden", e, "in not contained inside", a, ". Doing nothing"), null);
  }).filter(function(e) {
    return !!e;
  });
}, ei = function(a, t, e, n) {
  var l = Qr(t, Array.isArray(a) ? a : [a]);
  ca[e] || (ca[e] = /* @__PURE__ */ new WeakMap());
  var s = ca[e], r = [], i = /* @__PURE__ */ new Set(), u = new Set(l), d = function(f) {
    !f || i.has(f) || (i.add(f), d(f.parentNode));
  };
  l.forEach(d);
  var c = function(f) {
    !f || u.has(f) || Array.prototype.forEach.call(f.children, function(p) {
      if (i.has(p))
        c(p);
      else {
        var v = p.getAttribute(n), y = v !== null && v !== "false", m = ($t.get(p) || 0) + 1, S = (s.get(p) || 0) + 1;
        $t.set(p, m), s.set(p, S), r.push(p), m === 1 && y && da.set(p, !0), S === 1 && p.setAttribute(e, "true"), y || p.setAttribute(n, "true");
      }
    });
  };
  return c(t), i.clear(), on++, function() {
    r.forEach(function(f) {
      var p = $t.get(f) - 1, v = s.get(f) - 1;
      $t.set(f, p), s.set(f, v), p || (da.has(f) || f.removeAttribute(n), da.delete(f)), v || f.removeAttribute(e);
    }), on--, on || ($t = /* @__PURE__ */ new WeakMap(), $t = /* @__PURE__ */ new WeakMap(), da = /* @__PURE__ */ new WeakMap(), ca = {});
  };
}, ti = function(a, t, e) {
  e === void 0 && (e = "data-aria-hidden");
  var n = Array.from(Array.isArray(a) ? a : [a]), l = t || Jr(a);
  return l ? (n.push.apply(n, Array.from(l.querySelectorAll("[aria-live]"))), ei(n, l, e, "aria-hidden")) : function() {
    return null;
  };
};
function ra(a) {
  let t;
  ee(() => Be(a), (e) => {
    e ? t = ti(e) : t && t();
  }), Te(() => {
    t && t();
  });
}
let ai = 0;
function me(a, t = "radix") {
  if (a)
    return a;
  const { useId: e } = Rn({ useId: void 0 });
  return e && typeof e == "function" ? `${t}-${e()}` : `${t}-${++ai}`;
}
function ul(a) {
  const t = B(), e = T(() => {
    var l;
    return ((l = t.value) == null ? void 0 : l.width) ?? 0;
  }), n = T(() => {
    var l;
    return ((l = t.value) == null ? void 0 : l.height) ?? 0;
  });
  return se(() => {
    const l = Be(a);
    if (l) {
      t.value = { width: l.offsetWidth, height: l.offsetHeight };
      const s = new ResizeObserver((r) => {
        if (!Array.isArray(r) || !r.length)
          return;
        const i = r[0];
        let u, d;
        if ("borderBoxSize" in i) {
          const c = i.borderBoxSize, f = Array.isArray(c) ? c[0] : c;
          u = f.inlineSize, d = f.blockSize;
        } else
          u = l.offsetWidth, d = l.offsetHeight;
        t.value = { width: u, height: d };
      });
      return s.observe(l, { box: "border-box" }), () => s.unobserve(l);
    } else
      t.value = void 0;
  }), {
    width: e,
    height: n
  };
}
function dl(a, t) {
  const e = B(a);
  function n(s) {
    return t[e.value][s] ?? e.value;
  }
  return {
    state: e,
    dispatch: (s) => {
      e.value = n(s);
    }
  };
}
function Ia(a) {
  const t = kt("", 1e3);
  return {
    search: t,
    handleTypeaheadSearch: (l, s) => {
      var p, v;
      if (!(a != null && a.value) && !s)
        return;
      t.value = t.value + l;
      const r = (a == null ? void 0 : a.value) ?? s, i = document.activeElement, u = ((v = (p = r.find((y) => y === i)) == null ? void 0 : p.textContent) == null ? void 0 : v.trim()) ?? "", d = r.map((y) => {
        var m;
        return ((m = y.textContent) == null ? void 0 : m.trim()) ?? "";
      }), c = cl(d, t.value, u), f = r.find(
        (y) => {
          var m;
          return ((m = y.textContent) == null ? void 0 : m.trim()) === c;
        }
      );
      return f && f.focus(), f;
    },
    resetTypeahead: () => {
      t.value = "";
    }
  };
}
function kn(a, t) {
  return a.map((e, n) => a[(t + n) % a.length]);
}
function cl(a, t, e) {
  const l = t.length > 1 && Array.from(t).every((d) => d === t[0]) ? t[0] : t, s = e ? a.indexOf(e) : -1;
  let r = kn(a, Math.max(s, 0));
  l.length === 1 && (r = r.filter((d) => d !== e));
  const u = r.find(
    (d) => d.toLowerCase().startsWith(l.toLowerCase())
  );
  return u !== e ? u : void 0;
}
function yp(a, t) {
  return {
    inheritAttrs: !1,
    name: `${a.__name ?? ""}Wrapper`,
    setup(e, n) {
      return () => {
        const l = typeof (t == null ? void 0 : t.props) == "function" ? t == null ? void 0 : t.props(n.attrs) : t == null ? void 0 : t.props, { forwardRef: s } = I(), r = k(l, n.attrs);
        return rt(a, { ...r, ref: s }, n.slots);
      };
    }
  };
}
function ft() {
  return {
    ALT: "Alt",
    ARROW_DOWN: "ArrowDown",
    ARROW_LEFT: "ArrowLeft",
    ARROW_RIGHT: "ArrowRight",
    ARROW_UP: "ArrowUp",
    BACKSPACE: "Backspace",
    CAPS_LOCK: "CapsLock",
    CONTROL: "Control",
    DELETE: "Delete",
    END: "End",
    ENTER: "Enter",
    ESCAPE: "Escape",
    F1: "F1",
    F10: "F10",
    F11: "F11",
    F12: "F12",
    F2: "F2",
    F3: "F3",
    F4: "F4",
    F5: "F5",
    F6: "F6",
    F7: "F7",
    F8: "F8",
    F9: "F9",
    HOME: "Home",
    META: "Meta",
    PAGE_DOWN: "PageDown",
    PAGE_UP: "PageUp",
    SHIFT: "Shift",
    SPACE: " ",
    TAB: "Tab",
    CTRL: "Control",
    ASTERISK: "*",
    SPACE_CODE: "Space"
  };
}
const Mn = w({
  name: "PrimitiveSlot",
  inheritAttrs: !1,
  setup(a, { attrs: t, slots: e }) {
    return () => {
      var u, d;
      if (!e.default)
        return null;
      const n = Ta(e.default()), l = n.findIndex((c) => c.type !== Ks);
      if (l === -1)
        return n;
      const s = n[l];
      (u = s.props) == null || delete u.ref;
      const r = s.props ? k(t, s.props) : t;
      t.class && ((d = s.props) != null && d.class) && delete s.props.class;
      const i = Uo(s, r);
      for (const c in r)
        c.startsWith("on") && (i.props || (i.props = {}), i.props[c] = r[c]);
      return n.length === 1 ? i : (n[l] = i, n);
    };
  }
}), A = w({
  name: "Primitive",
  inheritAttrs: !1,
  props: {
    asChild: {
      type: Boolean,
      default: !1
    },
    as: {
      type: [String, Object],
      default: "div"
    }
  },
  setup(a, { attrs: t, slots: e }) {
    const n = a.asChild ? "template" : a.as;
    return typeof n == "string" && ["area", "img", "input"].includes(n) ? () => rt(n, t) : n !== "template" ? () => rt(a.as, t, { default: e.default }) : () => rt(Mn, t, { default: e.default });
  }
});
function qe() {
  const a = B(), t = T(() => {
    var e, n;
    return ["#text", "#comment"].includes((e = a.value) == null ? void 0 : e.$el.nodeName) ? (n = a.value) == null ? void 0 : n.$el.nextElementSibling : Be(a);
  });
  return {
    primitiveElement: a,
    currentElement: t
  };
}
const [fl, ni] = Q("CollapsibleRoot"), oi = /* @__PURE__ */ w({
  __name: "CollapsibleRoot",
  props: {
    defaultOpen: { type: Boolean, default: !1 },
    open: { type: Boolean, default: void 0 },
    disabled: { type: Boolean },
    asChild: { type: Boolean },
    as: {}
  },
  emits: ["update:open"],
  setup(a, { expose: t, emit: e }) {
    const n = a, s = ne(n, "open", e, {
      defaultValue: n.defaultOpen,
      passive: n.open === void 0
    }), r = ne(n, "disabled");
    return ni({
      contentId: "",
      disabled: r,
      open: s,
      onOpenToggle: () => {
        s.value = !s.value;
      }
    }), t({ open: s }), I(), (i, u) => (b(), _(o(A), {
      as: i.as,
      "as-child": n.asChild,
      "data-state": n.open ? "open" : "closed",
      "data-disabled": n.disabled ? "" : void 0
    }, {
      default: h(() => [
        C(i.$slots, "default", { open: o(s) })
      ]),
      _: 3
    }, 8, ["as", "as-child", "data-state", "data-disabled"]));
  }
}), li = /* @__PURE__ */ w({
  __name: "CollapsibleTrigger",
  props: {
    asChild: { type: Boolean },
    as: { default: "button" }
  },
  setup(a) {
    const t = a;
    I();
    const e = fl();
    return (n, l) => {
      var s, r;
      return b(), _(o(A), {
        type: n.as === "button" ? "button" : void 0,
        as: n.as,
        "as-child": t.asChild,
        "aria-controls": o(e).contentId,
        "aria-expanded": o(e).open.value,
        "data-state": o(e).open.value ? "open" : "closed",
        "data-disabled": (s = o(e).disabled) != null && s.value ? "" : void 0,
        disabled: (r = o(e).disabled) == null ? void 0 : r.value,
        onClick: o(e).onOpenToggle
      }, {
        default: h(() => [
          C(n.$slots, "default")
        ]),
        _: 3
      }, 8, ["type", "as", "as-child", "aria-controls", "aria-expanded", "data-state", "data-disabled", "disabled", "onClick"]);
    };
  }
});
function si(a, t) {
  const e = B({}), n = B("none"), l = a.value ? "mounted" : "unmounted", { state: s, dispatch: r } = dl(l, {
    mounted: {
      UNMOUNT: "unmounted",
      ANIMATION_OUT: "unmountSuspended"
    },
    unmountSuspended: {
      MOUNT: "mounted",
      ANIMATION_END: "unmounted"
    },
    unmounted: {
      MOUNT: "mounted"
    }
  });
  ee(
    a,
    async (p, v) => {
      var m;
      const y = v !== p;
      if (await re(), y) {
        const S = n.value, P = fa(t.value);
        p ? r("MOUNT") : P === "none" || ((m = e.value) == null ? void 0 : m.display) === "none" ? r("UNMOUNT") : r(v && S !== P ? "ANIMATION_OUT" : "UNMOUNT");
      }
    },
    { immediate: !0 }
  );
  const i = (p) => {
    const v = fa(t.value), y = v.includes(
      p.animationName
    );
    p.target === t.value && y && r("ANIMATION_END"), p.target === t.value && v === "none" && r("ANIMATION_END");
  }, u = (p) => {
    p.target === t.value && (n.value = fa(t.value));
  }, d = ee(
    t,
    (p, v) => {
      p ? (e.value = getComputedStyle(p), p.addEventListener("animationstart", u), p.addEventListener("animationcancel", i), p.addEventListener("animationend", i)) : (r("ANIMATION_END"), v == null || v.removeEventListener("animationstart", u), v == null || v.removeEventListener("animationcancel", i), v == null || v.removeEventListener("animationend", i));
    },
    { immediate: !0 }
  ), c = ee(s, () => {
    const p = fa(t.value);
    n.value = s.value === "mounted" ? p : "none";
  });
  return Te(() => {
    d(), c();
  }), {
    isPresent: T(
      () => ["mounted", "unmountSuspended"].includes(s.value)
    )
  };
}
function fa(a) {
  return a && getComputedStyle(a).animationName || "none";
}
const Ee = w({
  name: "Presence",
  props: {
    present: {
      type: Boolean,
      required: !0
    },
    forceMount: {
      type: Boolean
    }
  },
  slots: {},
  setup(a, { slots: t, expose: e }) {
    var d;
    const { present: n, forceMount: l } = le(a), s = B(), { isPresent: r } = si(n, s);
    e({ present: r });
    let i = t.default({ present: r });
    i = Ta(i || []);
    const u = Ze();
    if (i && (i == null ? void 0 : i.length) > 1) {
      const c = (d = u == null ? void 0 : u.parent) != null && d.type.name ? `<${u.parent.type.name} />` : "component";
      throw new Error(
        [
          `Detected an invalid children for \`${c}\` for  \`Presence\` component.`,
          "",
          "Note: Presence works similarly to `v-if` directly, but it waits for animation/transition to finished before unmounting. So it expect only one direct child of valid VNode type.",
          "You can apply a few solutions:",
          [
            "Provide a single child element so that `presence` directive attach correctly.",
            "Ensure the first child is an actual element instead of a raw text node or comment node."
          ].map((f) => `  - ${f}`).join(`
`)
        ].join(`
`)
      );
    }
    return () => l.value || n.value || r.value ? rt(t.default({ present: r })[0], {
      ref: (c) => {
        const f = Be(c);
        return typeof (f == null ? void 0 : f.hasAttribute) > "u" || (f != null && f.hasAttribute("data-radix-popper-content-wrapper") ? s.value = f.firstElementChild : s.value = f), f;
      }
    }) : null;
  }
}), ri = /* @__PURE__ */ w({
  inheritAttrs: !1,
  __name: "CollapsibleContent",
  props: {
    forceMount: { type: Boolean },
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a, e = fl();
    e.contentId || (e.contentId = me(void 0, "radix-vue-collapsible-content"));
    const n = B(), { forwardRef: l, currentElement: s } = I(), r = B(0), i = B(0), u = T(() => e.open.value), d = B(u.value), c = B();
    return ee(
      () => {
        var f;
        return [u.value, (f = n.value) == null ? void 0 : f.present];
      },
      async () => {
        await re();
        const f = s.value;
        if (!f)
          return;
        c.value = c.value || {
          transitionDuration: f.style.transitionDuration,
          animationName: f.style.animationName
        }, f.style.transitionDuration = "0s", f.style.animationName = "none";
        const p = f.getBoundingClientRect();
        i.value = p.height, r.value = p.width, d.value || (f.style.transitionDuration = c.value.transitionDuration, f.style.animationName = c.value.animationName);
      },
      {
        immediate: !0
      }
    ), se(() => {
      requestAnimationFrame(() => {
        d.value = !1;
      });
    }), (f, p) => (b(), _(o(Ee), {
      ref_key: "presentRef",
      ref: n,
      present: f.forceMount || o(e).open.value,
      "force-mount": !0
    }, {
      default: h(() => {
        var v, y;
        return [
          G(o(A), k(f.$attrs, {
            id: o(e).contentId,
            ref: o(l),
            "as-child": t.asChild,
            as: f.as,
            "data-state": o(e).open.value ? "open" : "closed",
            "data-disabled": (v = o(e).disabled) != null && v.value ? "" : void 0,
            hidden: !((y = n.value) != null && y.present),
            style: {
              "--radix-collapsible-content-height": `${i.value}px`,
              "--radix-collapsible-content-width": `${r.value}px`
            }
          }), {
            default: h(() => {
              var m;
              return [
                (m = n.value) != null && m.present ? C(f.$slots, "default", { key: 0 }) : ue("", !0)
              ];
            }),
            _: 3
          }, 16, ["id", "as-child", "as", "data-state", "data-disabled", "hidden", "style"])
        ];
      }),
      _: 3
    }, 8, ["present"]));
  }
});
function pl({ type: a, defaultValue: t, modelValue: e }) {
  const n = e || t;
  if (!a && !e && !t)
    throw new Error("Either the `type` or the `value` or `default-value` prop must be defined.");
  if (e !== void 0 && t !== void 0 && typeof e != typeof t)
    throw new Error(
      `Invalid prop \`value\` of value \`${e}\` supplied, should be the same type as the \`defaultValue\` prop, which is \`${t}\`. The \`value\` prop must be:
  ${a === "single" ? "- a string" : a === "multiple" ? "- an array of strings" : `- a string
- an array of strings`}
  - \`undefined\``
    );
  const l = e !== void 0 || t !== void 0;
  if (a && l) {
    const s = Array.isArray(e) || Array.isArray(t), r = e !== void 0 ? "modelValue" : "defaultValue", i = r === "modelValue" ? typeof e : typeof t;
    if (a === "single" && s)
      return console.error(`Invalid prop \`${r}\` of type ${i} supplied with type \`single\`. The \`modelValue\` prop must be a string or \`undefined\`.
You can remove the \`type\` prop to let the component infer the type from the ${r} prop.`), "multiple";
    if (a === "multiple" && !s)
      return console.error(`Invalid prop \`${r}\` of type ${i} supplied with type \`multiple\`. The \`modelValue\` prop must be an array of strings or \`undefined\`.
    You can remove the \`type\` prop to let the component infer the type from the ${r} prop.`), "single";
  }
  return l ? Array.isArray(n) ? "multiple" : "single" : a;
}
function ii({ type: a, defaultValue: t, modelValue: e }) {
  return a || pl({ type: a, defaultValue: t, modelValue: e });
}
function ui({ type: a, defaultValue: t }) {
  return t !== void 0 ? t : a === "single" ? void 0 : [];
}
function vl(a, t) {
  const e = B(ii(a)), n = ne(a, "modelValue", t, {
    defaultValue: ui(a),
    passive: a.modelValue === void 0
  });
  ee(
    () => [a.type, a.modelValue, a.defaultValue],
    () => {
      const r = pl(a);
      e.value !== r && (e.value = r);
    },
    { immediate: !0 }
  );
  function l(r) {
    if (e.value === "single")
      n.value = r === n.value ? void 0 : r;
    else {
      const i = n.value || [];
      if (i.includes(r)) {
        const u = i.findIndex((d) => d === r);
        i.splice(u, 1);
      } else
        i.push(r);
      n.value = i, t("update:modelValue", n.value);
    }
  }
  const s = T(() => e.value === "single");
  return {
    modelValue: n,
    type: e,
    changeModelValue: l,
    isSingle: s
  };
}
const [Ra, di] = Q("AccordionRoot"), gp = /* @__PURE__ */ w({
  __name: "AccordionRoot",
  props: {
    collapsible: { type: Boolean, default: !1 },
    disabled: { type: Boolean, default: !1 },
    dir: {},
    orientation: { default: "vertical" },
    asChild: { type: Boolean },
    as: {},
    type: {},
    modelValue: {},
    defaultValue: {}
  },
  emits: ["update:modelValue"],
  setup(a, { emit: t }) {
    const e = a, n = t, { dir: l, disabled: s } = le(e), r = be(l), { modelValue: i, changeModelValue: u, isSingle: d } = vl(e, n), { forwardRef: c, currentElement: f } = I();
    return di({
      disabled: s,
      direction: r,
      orientation: e.orientation,
      parentElement: f,
      isSingle: d,
      collapsible: e.collapsible,
      modelValue: i,
      changeModelValue: u
    }), (p, v) => (b(), _(o(A), {
      ref: o(c),
      "as-child": p.asChild,
      as: p.as
    }, {
      default: h(() => [
        C(p.$slots, "default", { modelValue: o(i) })
      ]),
      _: 3
    }, 8, ["as-child", "as"]));
  }
}), [Vn, ci] = Q("AccordionItem"), bp = /* @__PURE__ */ w({
  __name: "AccordionItem",
  props: {
    disabled: { type: Boolean },
    value: {},
    asChild: { type: Boolean },
    as: {}
  },
  setup(a, { expose: t }) {
    const e = a, n = Ra(), l = T(
      () => n.isSingle.value ? e.value === n.modelValue.value : Array.isArray(n.modelValue.value) && n.modelValue.value.includes(e.value)
    ), s = T(() => n.disabled.value || e.disabled || n.isSingle.value && l.value && !n.collapsible), r = T(() => s.value ? "" : void 0), i = T(
      () => l.value ? "open" : "closed"
      /* Closed */
    );
    t({ open: l, dataDisabled: r });
    const { currentRef: u, currentElement: d } = I();
    ci({
      open: l,
      dataState: i,
      disabled: s,
      dataDisabled: r,
      triggerId: "",
      currentRef: u,
      currentElement: d,
      value: T(() => e.value)
    });
    function c(f) {
      Vt(
        f,
        d.value,
        n.parentElement.value,
        {
          arrowKeyOptions: n.orientation,
          dir: n.direction.value,
          focus: !0
        }
      );
    }
    return (f, p) => (b(), _(o(oi), {
      "data-orientation": o(n).orientation,
      "data-disabled": r.value,
      "data-state": i.value,
      disabled: s.value,
      open: l.value,
      "as-child": e.asChild,
      onKeydown: he(c, ["up", "down", "left", "right", "home", "end"])
    }, {
      default: h(() => [
        C(f.$slots, "default", { open: l.value })
      ]),
      _: 3
    }, 8, ["data-orientation", "data-disabled", "data-state", "disabled", "open", "as-child"]));
  }
}), Cp = /* @__PURE__ */ w({
  __name: "AccordionContent",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a, e = Ra(), n = Vn();
    return I(), (l, s) => (b(), _(o(ri), {
      role: "region",
      open: o(n).open.value,
      hidden: !o(n).open.value,
      "as-child": t.asChild,
      "aria-labelledby": o(n).triggerId,
      "data-state": o(n).dataState.value,
      "data-disabled": o(n).dataDisabled.value,
      "data-orientation": o(e).orientation,
      style: { "--radix-accordion-content-width": "var(--radix-collapsible-content-width)", "--radix-accordion-content-height": "var(--radix-collapsible-content-height)" }
    }, {
      default: h(() => [
        C(l.$slots, "default")
      ]),
      _: 3
    }, 8, ["open", "hidden", "as-child", "aria-labelledby", "data-state", "data-disabled", "data-orientation"]));
  }
}), wp = /* @__PURE__ */ w({
  __name: "AccordionHeader",
  props: {
    asChild: { type: Boolean },
    as: { default: "h3" }
  },
  setup(a) {
    const t = a, e = Ra(), n = Vn();
    return I(), (l, s) => (b(), _(o(A), {
      as: t.as,
      "as-child": t.asChild,
      "data-orientation": o(e).orientation,
      "data-state": o(n).dataState.value,
      "data-disabled": o(n).dataDisabled.value
    }, {
      default: h(() => [
        C(l.$slots, "default")
      ]),
      _: 3
    }, 8, ["as", "as-child", "data-orientation", "data-state", "data-disabled"]));
  }
}), _p = /* @__PURE__ */ w({
  __name: "AccordionTrigger",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a, e = Ra(), n = Vn();
    n.triggerId || (n.triggerId = me(void 0, "radix-vue-accordion-trigger"));
    function l() {
      n.disabled.value || e.changeModelValue(n.value.value);
    }
    return (s, r) => (b(), _(o(li), {
      id: o(n).triggerId,
      ref: o(n).currentRef,
      "data-radix-vue-collection-item": "",
      as: t.as,
      "as-child": t.asChild,
      "aria-disabled": o(n).disabled.value || void 0,
      "aria-expanded": o(n).open.value || !1,
      "data-disabled": o(n).dataDisabled.value,
      "data-orientation": o(e).orientation,
      "data-state": o(n).dataState.value,
      disabled: o(n).disabled.value,
      onClick: l
    }, {
      default: h(() => [
        C(s.$slots, "default")
      ]),
      _: 3
    }, 8, ["id", "as", "as-child", "aria-disabled", "aria-expanded", "data-disabled", "data-orientation", "data-state", "disabled"]));
  }
}), [He, fi] = Q("DialogRoot"), pi = /* @__PURE__ */ w({
  __name: "DialogRoot",
  props: {
    open: { type: Boolean, default: void 0 },
    defaultOpen: { type: Boolean, default: !1 },
    modal: { type: Boolean, default: !0 }
  },
  emits: ["update:open"],
  setup(a, { emit: t }) {
    const e = a, l = ne(e, "open", t, {
      defaultValue: e.defaultOpen,
      passive: e.open === void 0
    }), s = B(), r = B(), { modal: i } = le(e);
    return fi({
      open: l,
      modal: i,
      openModal: () => {
        l.value = !0;
      },
      onOpenChange: (u) => {
        l.value = u;
      },
      onOpenToggle: () => {
        l.value = !l.value;
      },
      contentId: "",
      titleId: "",
      descriptionId: "",
      triggerElement: s,
      contentElement: r
    }), (u, d) => C(u.$slots, "default");
  }
}), vi = /* @__PURE__ */ w({
  __name: "DialogTrigger",
  props: {
    asChild: { type: Boolean },
    as: { default: "button" }
  },
  setup(a) {
    const t = a, e = He(), { forwardRef: n, currentElement: l } = I();
    return e.contentId || (e.contentId = me(void 0, "radix-vue-dialog-content")), se(() => {
      e.triggerElement = l;
    }), (s, r) => (b(), _(o(A), k(t, {
      ref: o(n),
      type: s.as === "button" ? "button" : void 0,
      "aria-haspopup": "dialog",
      "aria-expanded": o(e).open.value || !1,
      "aria-controls": o(e).open.value ? o(e).contentId : void 0,
      "data-state": o(e).open.value ? "open" : "closed",
      onClick: o(e).onOpenToggle
    }), {
      default: h(() => [
        C(s.$slots, "default")
      ]),
      _: 3
    }, 16, ["type", "aria-expanded", "aria-controls", "data-state", "onClick"]));
  }
}), pt = /* @__PURE__ */ w({
  __name: "Teleport",
  props: {
    to: { default: "body" },
    disabled: { type: Boolean },
    forceMount: { type: Boolean }
  },
  setup(a) {
    const t = Ba();
    return (e, n) => o(t) || e.forceMount ? (b(), _(At, {
      key: 0,
      to: e.to,
      disabled: e.disabled
    }, [
      C(e.$slots, "default")
    ], 8, ["to", "disabled"])) : ue("", !0);
  }
}), xp = /* @__PURE__ */ w({
  __name: "DialogPortal",
  props: {
    to: {},
    disabled: { type: Boolean },
    forceMount: { type: Boolean }
  },
  setup(a) {
    const t = a;
    return (e, n) => (b(), _(o(pt), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), mi = "dismissableLayer.pointerDownOutside", hi = "dismissableLayer.focusOutside";
function ml(a, t) {
  const e = t.closest(
    "[data-dismissable-layer]"
  ), n = a.querySelector(
    "[data-dismissable-layer]"
  ), l = Array.from(
    a.ownerDocument.querySelectorAll("[data-dismissable-layer]")
  );
  return !!(e && n === e || l.indexOf(n) < l.indexOf(e));
}
function yi(a, t) {
  var s;
  const e = ((s = t == null ? void 0 : t.value) == null ? void 0 : s.ownerDocument) ?? (globalThis == null ? void 0 : globalThis.document), n = B(!1), l = B(() => {
  });
  return ve((r) => {
    if (!Je)
      return;
    const i = async (d) => {
      const c = d.target;
      if (t != null && t.value) {
        if (ml(t.value, c)) {
          n.value = !1;
          return;
        }
        if (d.target && !n.value) {
          let f = function() {
            $a(
              mi,
              a,
              p
            );
          };
          const p = { originalEvent: d };
          d.pointerType === "touch" ? (e.removeEventListener("click", l.value), l.value = f, e.addEventListener("click", l.value, {
            once: !0
          })) : f();
        } else
          e.removeEventListener("click", l.value);
        n.value = !1;
      }
    }, u = window.setTimeout(() => {
      e.addEventListener("pointerdown", i);
    }, 0);
    r(() => {
      window.clearTimeout(u), e.removeEventListener("pointerdown", i), e.removeEventListener("click", l.value);
    });
  }), {
    onPointerDownCapture: () => n.value = !0
  };
}
function gi(a, t) {
  var l;
  const e = ((l = t == null ? void 0 : t.value) == null ? void 0 : l.ownerDocument) ?? (globalThis == null ? void 0 : globalThis.document), n = B(!1);
  return ve((s) => {
    if (!Je)
      return;
    const r = async (i) => {
      t != null && t.value && (await re(), !(!t.value || ml(t.value, i.target)) && i.target && !n.value && $a(
        hi,
        a,
        { originalEvent: i }
      ));
    };
    e.addEventListener("focusin", r), s(() => e.removeEventListener("focusin", r));
  }), {
    onFocusCapture: () => n.value = !0,
    onBlurCapture: () => n.value = !1
  };
}
const Ke = Go({
  layersRoot: /* @__PURE__ */ new Set(),
  layersWithOutsidePointerEventsDisabled: /* @__PURE__ */ new Set(),
  branches: /* @__PURE__ */ new Set()
}), vt = /* @__PURE__ */ w({
  __name: "DismissableLayer",
  props: {
    disableOutsidePointerEvents: { type: Boolean, default: !1 },
    asChild: { type: Boolean },
    as: {}
  },
  emits: ["escapeKeyDown", "pointerDownOutside", "focusOutside", "interactOutside", "dismiss"],
  setup(a, { emit: t }) {
    const e = a, n = t, { forwardRef: l, currentElement: s } = I(), r = T(
      () => {
        var y;
        return ((y = s.value) == null ? void 0 : y.ownerDocument) ?? globalThis.document;
      }
    ), i = T(() => Ke.layersRoot), u = T(() => s.value ? Array.from(i.value).indexOf(s.value) : -1), d = T(() => Ke.layersWithOutsidePointerEventsDisabled.size > 0), c = T(() => {
      const y = Array.from(i.value), [m] = [...Ke.layersWithOutsidePointerEventsDisabled].slice(-1), S = y.indexOf(m);
      return u.value >= S;
    }), f = yi(async (y) => {
      const m = [...Ke.branches].some(
        (S) => S.contains(y.target)
      );
      !c.value || m || (n("pointerDownOutside", y), n("interactOutside", y), await re(), y.defaultPrevented || n("dismiss"));
    }, s), p = gi((y) => {
      [...Ke.branches].some(
        (S) => S.contains(y.target)
      ) || (n("focusOutside", y), n("interactOutside", y), y.defaultPrevented || n("dismiss"));
    }, s);
    In("Escape", (y) => {
      u.value === i.value.size - 1 && (n("escapeKeyDown", y), y.defaultPrevented || n("dismiss"));
    });
    let v;
    return ve((y) => {
      s.value && (e.disableOutsidePointerEvents && (Ke.layersWithOutsidePointerEventsDisabled.size === 0 && (v = r.value.body.style.pointerEvents, r.value.body.style.pointerEvents = "none"), Ke.layersWithOutsidePointerEventsDisabled.add(s.value)), i.value.add(s.value), y(() => {
        e.disableOutsidePointerEvents && Ke.layersWithOutsidePointerEventsDisabled.size === 1 && (r.value.body.style.pointerEvents = v);
      }));
    }), ve((y) => {
      y(() => {
        s.value && (i.value.delete(s.value), Ke.layersWithOutsidePointerEventsDisabled.delete(s.value));
      });
    }), (y, m) => (b(), _(o(A), {
      ref: o(l),
      "as-child": y.asChild,
      as: y.as,
      "data-dismissable-layer": "",
      style: Ce({
        pointerEvents: d.value ? c.value ? "auto" : "none" : void 0
      }),
      onFocusCapture: o(p).onFocusCapture,
      onBlurCapture: o(p).onBlurCapture,
      onPointerdownCapture: o(f).onPointerDownCapture
    }, {
      default: h(() => [
        C(y.$slots, "default")
      ]),
      _: 3
    }, 8, ["as-child", "as", "style", "onFocusCapture", "onBlurCapture", "onPointerdownCapture"]));
  }
}), bi = /* @__PURE__ */ w({
  __name: "DismissableLayerBranch",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a, { forwardRef: e, currentElement: n } = I();
    return se(() => {
      Ke.branches.add(n.value);
    }), Te(() => {
      Ke.branches.delete(n.value);
    }), (l, s) => (b(), _(o(A), k({ ref: o(e) }, t), {
      default: h(() => [
        C(l.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), ln = "focusScope.autoFocusOnMount", sn = "focusScope.autoFocusOnUnmount", Do = { bubbles: !1, cancelable: !0 };
function ga(a, { select: t = !1 } = {}) {
  const e = document.activeElement;
  for (const n of a)
    if (lt(n, { select: t }), document.activeElement !== e)
      return !0;
}
function Ci(a) {
  const t = Fn(a), e = $o(t, a), n = $o(t.reverse(), a);
  return [e, n];
}
function Fn(a) {
  const t = [], e = document.createTreeWalker(a, NodeFilter.SHOW_ELEMENT, {
    acceptNode: (n) => {
      const l = n.tagName === "INPUT" && n.type === "hidden";
      return n.disabled || n.hidden || l ? NodeFilter.FILTER_SKIP : n.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;
    }
  });
  for (; e.nextNode(); )
    t.push(e.currentNode);
  return t;
}
function $o(a, t) {
  for (const e of a)
    if (!wi(e, { upTo: t }))
      return e;
}
function wi(a, { upTo: t }) {
  if (getComputedStyle(a).visibility === "hidden")
    return !0;
  for (; a; ) {
    if (t !== void 0 && a === t)
      return !1;
    if (getComputedStyle(a).display === "none")
      return !0;
    a = a.parentElement;
  }
  return !1;
}
function _i(a) {
  return a instanceof HTMLInputElement && "select" in a;
}
function lt(a, { select: t = !1 } = {}) {
  if (a && a.focus) {
    const e = document.activeElement;
    a.focus({ preventScroll: !0 }), a !== e && _i(a) && t && a.select();
  }
}
const xi = hr(() => B([]));
function Si() {
  const a = xi();
  return {
    add(t) {
      const e = a.value[0];
      t !== e && (e == null || e.pause()), a.value = Bo(a.value, t), a.value.unshift(t);
    },
    remove(t) {
      var e;
      a.value = Bo(a.value, t), (e = a.value[0]) == null || e.resume();
    }
  };
}
function Bo(a, t) {
  const e = [...a], n = e.indexOf(t);
  return n !== -1 && e.splice(n, 1), e;
}
function Pi(a) {
  return a.filter((t) => t.tagName !== "A");
}
const Aa = /* @__PURE__ */ w({
  __name: "FocusScope",
  props: {
    loop: { type: Boolean, default: !1 },
    trapped: { type: Boolean, default: !1 },
    asChild: { type: Boolean },
    as: {}
  },
  emits: ["mountAutoFocus", "unmountAutoFocus"],
  setup(a, { emit: t }) {
    const e = a, n = t, { currentRef: l, currentElement: s } = I(), r = B(null), i = Si(), u = Go({
      paused: !1,
      pause() {
        this.paused = !0;
      },
      resume() {
        this.paused = !1;
      }
    });
    ve((c) => {
      if (!Je)
        return;
      const f = s.value;
      if (!e.trapped)
        return;
      function p(S) {
        if (u.paused || !f)
          return;
        const P = S.target;
        f.contains(P) ? r.value = P : lt(r.value, { select: !0 });
      }
      function v(S) {
        if (u.paused || !f)
          return;
        const P = S.relatedTarget;
        P !== null && (f.contains(P) || lt(r.value, { select: !0 }));
      }
      function y(S) {
        f.contains(r.value) || lt(f);
      }
      document.addEventListener("focusin", p), document.addEventListener("focusout", v);
      const m = new MutationObserver(y);
      f && m.observe(f, { childList: !0, subtree: !0 }), c(() => {
        document.removeEventListener("focusin", p), document.removeEventListener("focusout", v), m.disconnect();
      });
    }), ve(async (c) => {
      const f = s.value;
      if (await re(), !f)
        return;
      i.add(u);
      const p = document.activeElement;
      if (!f.contains(p)) {
        const y = new CustomEvent(ln, Do);
        f.addEventListener(
          ln,
          (m) => n("mountAutoFocus", m)
        ), f.dispatchEvent(y), y.defaultPrevented || (ga(Pi(Fn(f)), {
          select: !0
        }), document.activeElement === p && lt(f));
      }
      c(() => {
        f.removeEventListener(
          ln,
          (S) => n("mountAutoFocus", S)
        );
        const y = new CustomEvent(sn, Do), m = (S) => {
          n("unmountAutoFocus", S);
        };
        f.addEventListener(sn, m), f.dispatchEvent(y), setTimeout(() => {
          y.defaultPrevented || lt(p ?? document.body, { select: !0 }), f.removeEventListener(sn, m), i.remove(u);
        }, 0);
      });
    });
    function d(c) {
      if (!e.loop && !e.trapped || u.paused)
        return;
      const f = c.key === "Tab" && !c.altKey && !c.ctrlKey && !c.metaKey, p = document.activeElement;
      if (f && p) {
        const v = c.currentTarget, [y, m] = Ci(v);
        y && m ? !c.shiftKey && p === m ? (c.preventDefault(), e.loop && lt(y, { select: !0 })) : c.shiftKey && p === y && (c.preventDefault(), e.loop && lt(m, { select: !0 })) : p === v && c.preventDefault();
      }
    }
    return (c, f) => (b(), _(o(A), {
      ref_key: "currentRef",
      ref: l,
      tabindex: "-1",
      "as-child": c.asChild,
      as: c.as,
      onKeydown: d
    }, {
      default: h(() => [
        C(c.$slots, "default")
      ]),
      _: 3
    }, 8, ["as-child", "as"]));
  }
}), Ei = "menu.itemSelect", vn = ["Enter", " "], Di = ["ArrowDown", "PageUp", "Home"], hl = ["ArrowUp", "PageDown", "End"], $i = [...Di, ...hl], Bi = {
  ltr: [...vn, "ArrowRight"],
  rtl: [...vn, "ArrowLeft"]
}, Ti = {
  ltr: ["ArrowLeft"],
  rtl: ["ArrowRight"]
};
function Ln(a) {
  return a ? "open" : "closed";
}
function _a(a) {
  return a === "indeterminate";
}
function Nn(a) {
  return _a(a) ? "indeterminate" : a ? "checked" : "unchecked";
}
function mn(a) {
  const t = document.activeElement;
  for (const e of a)
    if (e === t || (e.focus(), document.activeElement !== t))
      return;
}
function Ii(a, t) {
  const { x: e, y: n } = a;
  let l = !1;
  for (let s = 0, r = t.length - 1; s < t.length; r = s++) {
    const i = t[s].x, u = t[s].y, d = t[r].x, c = t[r].y;
    u > n != c > n && e < (d - i) * (n - u) / (c - u) + i && (l = !l);
  }
  return l;
}
function Ri(a, t) {
  if (!t)
    return !1;
  const e = { x: a.clientX, y: a.clientY };
  return Ii(e, t);
}
function Qt(a) {
  return a.pointerType === "mouse";
}
function Ai() {
  const a = "DialogContent", t = "DialogTitle", e = He(), n = `Warning: \`${a}\` requires a \`${t}\` for the component to be accessible for screen reader users.

If you want to hide the \`${t}\`, you can wrap it with our VisuallyHidden component.

For more information, see https://www.radix-vue.com/components/dialog.html#title;`, l = `Warning: Missing \`Description\` or \`aria-describedby="undefined"\` for ${a}.`;
  se(() => {
    var i;
    document.getElementById(e.titleId) || console.warn(n);
    const r = (i = e.contentElement.value) == null ? void 0 : i.getAttribute("aria-describedby");
    e.descriptionId && r && (document.getElementById(e.descriptionId) || console.warn(l));
  });
}
const yl = /* @__PURE__ */ w({
  __name: "DialogContentImpl",
  props: {
    forceMount: { type: Boolean },
    trapFocus: { type: Boolean },
    disableOutsidePointerEvents: { type: Boolean },
    asChild: { type: Boolean },
    as: {}
  },
  emits: ["escapeKeyDown", "pointerDownOutside", "focusOutside", "interactOutside", "openAutoFocus", "closeAutoFocus"],
  setup(a, { emit: t }) {
    const e = a, n = t, l = He(), { forwardRef: s, currentElement: r } = I();
    return l.titleId || (l.titleId = me(void 0, "radix-vue-dialog-title")), l.descriptionId || (l.descriptionId = me(void 0, "radix-vue-dialog-description")), se(() => {
      l.contentElement = r;
    }), process.env.NODE_ENV !== "production" && Ai(), (i, u) => (b(), _(o(Aa), {
      "as-child": "",
      loop: "",
      trapped: e.trapFocus,
      onMountAutoFocus: u[5] || (u[5] = (d) => n("openAutoFocus", d)),
      onUnmountAutoFocus: u[6] || (u[6] = (d) => n("closeAutoFocus", d))
    }, {
      default: h(() => [
        G(o(vt), k({
          id: o(l).contentId,
          ref: o(s),
          as: i.as,
          "as-child": i.asChild,
          "disable-outside-pointer-events": i.disableOutsidePointerEvents,
          role: "dialog",
          "aria-describedby": o(l).descriptionId,
          "aria-labelledby": o(l).titleId,
          "data-state": o(Ln)(o(l).open.value)
        }, i.$attrs, {
          onDismiss: u[0] || (u[0] = (d) => o(l).onOpenChange(!1)),
          onEscapeKeyDown: u[1] || (u[1] = (d) => n("escapeKeyDown", d)),
          onFocusOutside: u[2] || (u[2] = (d) => n("focusOutside", d)),
          onInteractOutside: u[3] || (u[3] = (d) => n("interactOutside", d)),
          onPointerDownOutside: u[4] || (u[4] = (d) => n("pointerDownOutside", d))
        }), {
          default: h(() => [
            C(i.$slots, "default")
          ]),
          _: 3
        }, 16, ["id", "as", "as-child", "disable-outside-pointer-events", "aria-describedby", "aria-labelledby", "data-state"])
      ]),
      _: 3
    }, 8, ["trapped"]));
  }
}), Oi = /* @__PURE__ */ w({
  __name: "DialogContentModal",
  props: {
    forceMount: { type: Boolean },
    trapFocus: { type: Boolean },
    disableOutsidePointerEvents: { type: Boolean },
    asChild: { type: Boolean },
    as: {}
  },
  emits: ["escapeKeyDown", "pointerDownOutside", "focusOutside", "interactOutside", "openAutoFocus", "closeAutoFocus"],
  setup(a, { emit: t }) {
    const e = a, n = t, l = He(), s = Ie(n), { forwardRef: r, currentElement: i } = I();
    return ra(i), (u, d) => (b(), _(yl, k({ ...e, ...o(s) }, {
      ref: o(r),
      "trap-focus": o(l).open.value,
      "disable-outside-pointer-events": !0,
      onCloseAutoFocus: d[0] || (d[0] = (c) => {
        var f;
        n("closeAutoFocus", c), c.defaultPrevented || (c.preventDefault(), (f = o(l).triggerElement.value) == null || f.focus());
      }),
      onPointerDownOutside: d[1] || (d[1] = (c) => {
        const f = c.detail.originalEvent, p = f.button === 0 && f.ctrlKey === !0;
        (f.button === 2 || p) && c.preventDefault();
      }),
      onFocusOutside: d[2] || (d[2] = (c) => {
        c.preventDefault();
      }),
      onOpenAutoFocus: d[3] || (d[3] = (c) => n("openAutoFocus", c))
    }), {
      default: h(() => [
        C(u.$slots, "default")
      ]),
      _: 3
    }, 16, ["trap-focus"]));
  }
}), ki = /* @__PURE__ */ w({
  __name: "DialogContentNonModal",
  props: {
    forceMount: { type: Boolean },
    trapFocus: { type: Boolean },
    disableOutsidePointerEvents: { type: Boolean },
    asChild: { type: Boolean },
    as: {}
  },
  emits: ["escapeKeyDown", "pointerDownOutside", "focusOutside", "interactOutside", "openAutoFocus", "closeAutoFocus"],
  setup(a, { emit: t }) {
    const e = a, n = t, l = Ie(n);
    I();
    const s = He(), r = B(!1), i = B(!1);
    return (u, d) => (b(), _(yl, k({ ...e, ...o(l) }, {
      "trap-focus": !1,
      "disable-outside-pointer-events": !1,
      onCloseAutoFocus: d[0] || (d[0] = (c) => {
        var f;
        n("closeAutoFocus", c), c.defaultPrevented || (r.value || (f = o(s).triggerElement.value) == null || f.focus(), c.preventDefault()), r.value = !1, i.value = !1;
      }),
      onInteractOutside: d[1] || (d[1] = (c) => {
        var v;
        c.defaultPrevented || (r.value = !0, c.detail.originalEvent.type === "pointerdown" && (i.value = !0));
        const f = c.target;
        ((v = o(s).triggerElement.value) == null ? void 0 : v.contains(f)) && c.preventDefault(), c.detail.originalEvent.type === "focusin" && i.value && c.preventDefault();
      })
    }), {
      default: h(() => [
        C(u.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), Mi = /* @__PURE__ */ w({
  __name: "DialogContent",
  props: {
    forceMount: { type: Boolean },
    trapFocus: { type: Boolean },
    disableOutsidePointerEvents: { type: Boolean },
    asChild: { type: Boolean },
    as: {}
  },
  emits: ["escapeKeyDown", "pointerDownOutside", "focusOutside", "interactOutside", "openAutoFocus", "closeAutoFocus"],
  setup(a, { emit: t }) {
    const e = a, n = t, l = He(), s = Ie(n), { forwardRef: r } = I();
    return (i, u) => (b(), _(o(Ee), {
      present: i.forceMount || o(l).open.value
    }, {
      default: h(() => [
        o(l).modal.value ? (b(), _(Oi, k({
          key: 0,
          ref: o(r)
        }, { ...e, ...o(s), ...i.$attrs }, {
          onOpenAutoFocus: u[0] || (u[0] = (d) => n("openAutoFocus", d))
        }), {
          default: h(() => [
            C(i.$slots, "default")
          ]),
          _: 3
        }, 16)) : (b(), _(ki, k({
          key: 1,
          ref: o(r)
        }, { ...e, ...o(s), ...i.$attrs }), {
          default: h(() => [
            C(i.$slots, "default")
          ]),
          _: 3
        }, 16))
      ]),
      _: 3
    }, 8, ["present"]));
  }
}), Vi = /* @__PURE__ */ w({
  __name: "DialogOverlayImpl",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = He();
    return sa(!0), I(), (e, n) => (b(), _(o(A), {
      as: e.as,
      "as-child": e.asChild,
      "data-state": o(t).open.value ? "open" : "closed",
      style: { "pointer-events": "auto" }
    }, {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 8, ["as", "as-child", "data-state"]));
  }
}), Fi = /* @__PURE__ */ w({
  __name: "DialogOverlay",
  props: {
    forceMount: { type: Boolean },
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = He(), { forwardRef: e } = I();
    return (n, l) => {
      var s;
      return (s = o(t)) != null && s.modal.value ? (b(), _(o(Ee), {
        key: 0,
        present: n.forceMount || o(t).open.value
      }, {
        default: h(() => [
          G(Vi, k(n.$attrs, {
            ref: o(e),
            as: n.as,
            "as-child": n.asChild
          }), {
            default: h(() => [
              C(n.$slots, "default")
            ]),
            _: 3
          }, 16, ["as", "as-child"])
        ]),
        _: 3
      }, 8, ["present"])) : ue("", !0);
    };
  }
}), gl = /* @__PURE__ */ w({
  __name: "DialogClose",
  props: {
    asChild: { type: Boolean },
    as: { default: "button" }
  },
  setup(a) {
    const t = a;
    I();
    const e = He();
    return (n, l) => (b(), _(o(A), k(t, {
      type: n.as === "button" ? "button" : void 0,
      onClick: l[0] || (l[0] = (s) => o(e).onOpenChange(!1))
    }), {
      default: h(() => [
        C(n.$slots, "default")
      ]),
      _: 3
    }, 16, ["type"]));
  }
}), Li = /* @__PURE__ */ w({
  __name: "DialogTitle",
  props: {
    asChild: { type: Boolean },
    as: { default: "h2" }
  },
  setup(a) {
    const t = a, e = He();
    return I(), (n, l) => (b(), _(o(A), k(t, {
      id: o(e).titleId
    }), {
      default: h(() => [
        C(n.$slots, "default")
      ]),
      _: 3
    }, 16, ["id"]));
  }
}), Ni = /* @__PURE__ */ w({
  __name: "DialogDescription",
  props: {
    asChild: { type: Boolean },
    as: { default: "p" }
  },
  setup(a) {
    const t = a;
    I();
    const e = He();
    return (n, l) => (b(), _(o(A), k(t, {
      id: o(e).descriptionId
    }), {
      default: h(() => [
        C(n.$slots, "default")
      ]),
      _: 3
    }, 16, ["id"]));
  }
}), Sp = /* @__PURE__ */ w({
  __name: "AlertDialogRoot",
  props: {
    open: { type: Boolean },
    defaultOpen: { type: Boolean }
  },
  emits: ["update:open"],
  setup(a, { emit: t }) {
    const l = _e(a, t);
    return I(), (s, r) => (b(), _(o(pi), k(o(l), { modal: !0 }), {
      default: h(() => [
        C(s.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), Pp = /* @__PURE__ */ w({
  __name: "AlertDialogTrigger",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    return I(), (e, n) => (b(), _(o(vi), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), Ep = /* @__PURE__ */ w({
  __name: "AlertDialogPortal",
  props: {
    to: {},
    disabled: { type: Boolean },
    forceMount: { type: Boolean }
  },
  setup(a) {
    const t = a;
    return (e, n) => (b(), _(o(pt), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), [zi, Ki] = Q("AlertDialogContent"), Dp = /* @__PURE__ */ w({
  __name: "AlertDialogContent",
  props: {
    forceMount: { type: Boolean },
    trapFocus: { type: Boolean },
    disableOutsidePointerEvents: { type: Boolean },
    asChild: { type: Boolean },
    as: {}
  },
  emits: ["escapeKeyDown", "pointerDownOutside", "focusOutside", "interactOutside", "openAutoFocus", "closeAutoFocus"],
  setup(a, { emit: t }) {
    const e = a, l = Ie(t);
    I();
    const s = B();
    return Ki({
      onCancelElementChange: (r) => {
        s.value = r;
      }
    }), (r, i) => (b(), _(o(Mi), k({ ...e, ...o(l) }, {
      role: "alertdialog",
      onPointerDownOutside: i[0] || (i[0] = ge(() => {
      }, ["prevent"])),
      onInteractOutside: i[1] || (i[1] = ge(() => {
      }, ["prevent"])),
      onOpenAutoFocus: i[2] || (i[2] = () => {
        re(() => {
          var u;
          (u = s.value) == null || u.focus({
            preventScroll: !0
          });
        });
      })
    }), {
      default: h(() => [
        C(r.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), $p = /* @__PURE__ */ w({
  __name: "AlertDialogOverlay",
  props: {
    forceMount: { type: Boolean },
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    return I(), (e, n) => (b(), _(o(Fi), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), Bp = /* @__PURE__ */ w({
  __name: "AlertDialogCancel",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a, e = zi(), { forwardRef: n, currentElement: l } = I();
    return se(() => {
      e.onCancelElementChange(l.value);
    }), (s, r) => (b(), _(o(gl), k(t, { ref: o(n) }), {
      default: h(() => [
        C(s.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), Tp = /* @__PURE__ */ w({
  __name: "AlertDialogTitle",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    return I(), (e, n) => (b(), _(o(Li), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), Ip = /* @__PURE__ */ w({
  __name: "AlertDialogDescription",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    return I(), (e, n) => (b(), _(o(Ni), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), Rp = /* @__PURE__ */ w({
  __name: "AlertDialogAction",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    return I(), (e, n) => (b(), _(o(gl), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), Ap = /* @__PURE__ */ w({
  inheritAttrs: !1,
  __name: "AspectRatio",
  props: {
    ratio: { default: 1 },
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a, { forwardRef: e } = I(), n = T(() => 1 / t.ratio * 100);
    return (l, s) => (b(), fe("div", {
      style: Ce(`position: relative; width: 100%; padding-bottom: ${n.value}%`),
      "data-radix-aspect-ratio-wrapper": ""
    }, [
      G(o(A), k({
        ref: o(e),
        "as-child": l.asChild,
        as: l.as,
        style: { position: "absolute", inset: "0px" }
      }, l.$attrs), {
        default: h(() => [
          C(l.$slots, "default", { aspect: n.value })
        ]),
        _: 3
      }, 16, ["as-child", "as"])
    ], 4));
  }
}), [bl, Hi] = Q("AvatarRoot"), Op = /* @__PURE__ */ w({
  __name: "AvatarRoot",
  props: {
    asChild: { type: Boolean },
    as: { default: "span" }
  },
  setup(a) {
    return I(), Hi({
      imageLoadingStatus: B("loading")
    }), (t, e) => (b(), _(o(A), {
      "as-child": t.asChild,
      as: t.as
    }, {
      default: h(() => [
        C(t.$slots, "default")
      ]),
      _: 3
    }, 8, ["as-child", "as"]));
  }
});
function Wi(a) {
  const t = B("idle"), e = B(!1), n = (l) => () => {
    e.value && (t.value = l);
  };
  return se(() => {
    e.value = !0, ee(a, (l) => {
      if (!l)
        t.value = "error";
      else {
        const s = new window.Image();
        t.value = "loading", s.onload = n("loaded"), s.onerror = n("error"), s.src = l;
      }
    }, { immediate: !0 });
  }), Te(() => {
    e.value = !1;
  }), t;
}
const kp = /* @__PURE__ */ w({
  __name: "AvatarImage",
  props: {
    src: {},
    asChild: { type: Boolean },
    as: { default: "img" }
  },
  emits: ["loadingStatusChange"],
  setup(a, { emit: t }) {
    const e = a, n = t, { src: l } = le(e);
    I();
    const s = bl(), r = Wi(l);
    return ee(
      r,
      (i) => {
        n("loadingStatusChange", i), i !== "idle" && (s.imageLoadingStatus.value = i);
      },
      { immediate: !0 }
    ), (i, u) => Ea((b(), _(o(A), {
      role: "img",
      "as-child": i.asChild,
      as: i.as,
      src: o(l)
    }, {
      default: h(() => [
        C(i.$slots, "default")
      ]),
      _: 3
    }, 8, ["as-child", "as", "src"])), [
      [Sn, o(r) === "loaded"]
    ]);
  }
}), Mp = /* @__PURE__ */ w({
  __name: "AvatarFallback",
  props: {
    delayMs: { default: 0 },
    asChild: { type: Boolean },
    as: { default: "span" }
  },
  setup(a) {
    const t = a, e = bl();
    I();
    const n = B(!1);
    let l;
    return ee(e.imageLoadingStatus, (s) => {
      s === "loading" && (n.value = !1, t.delayMs ? l = setTimeout(() => {
        n.value = !0, clearTimeout(l);
      }, t.delayMs) : n.value = !0);
    }, { immediate: !0 }), (s, r) => n.value && o(e).imageLoadingStatus.value !== "loaded" ? (b(), _(o(A), {
      key: 0,
      "as-child": s.asChild,
      as: s.as
    }, {
      default: h(() => [
        C(s.$slots, "default")
      ]),
      _: 3
    }, 8, ["as-child", "as"])) : ue("", !0);
  }
});
function ji(a) {
  function t(n) {
    return Array.isArray(a.date.value) ? a.date.value.some((l) => Oe(l, n)) : a.date.value ? Oe(a.date.value, n) : !1;
  }
  const e = T(
    () => {
      var n, l, s, r;
      if (Array.isArray(a.date.value)) {
        if (!a.date.value.length)
          return !1;
        for (const i of a.date.value)
          if ((n = a.isDateDisabled) != null && n.call(a, i) || (l = a.isDateUnavailable) != null && l.call(a, i))
            return !0;
      } else {
        if (!a.date.value)
          return !1;
        if ((s = a.isDateDisabled) != null && s.call(a, a.date.value) || (r = a.isDateUnavailable) != null && r.call(a, a.date.value))
          return !0;
      }
      return !1;
    }
  );
  return {
    isDateSelected: t,
    isInvalid: e
  };
}
function Cl(a) {
  const t = An(a.locale.value), e = B(Ut({
    dateObj: a.placeholder.value,
    weekStartsOn: a.weekStartsOn.value,
    locale: a.locale.value,
    fixedWeeks: a.fixedWeeks.value,
    numberOfMonths: a.numberOfMonths.value
  })), n = T(() => e.value.map((y) => y.value));
  function l(y) {
    return !n.value.some((m) => wa(y, m));
  }
  const s = T(() => {
    if (!a.maxValue.value || !e.value.length)
      return !1;
    if (a.disabled.value)
      return !0;
    const m = e.value[e.value.length - 1].value.add({ months: 1 }).set({ day: 1 });
    return wo(m, a.maxValue.value);
  }), r = T(() => {
    if (!a.minValue.value || !e.value.length)
      return !1;
    if (a.disabled.value)
      return !0;
    const m = e.value[0].value.subtract({ months: 1 }).set({ day: 35 });
    return Le(m, a.minValue.value);
  });
  function i(y) {
    var m;
    return !!((m = a.isDateDisabled) != null && m.call(a, y) || a.disabled.value || a.maxValue.value && wo(y, a.maxValue.value) || a.minValue.value && Le(y, a.minValue.value));
  }
  const u = (y) => {
    var m;
    return !!((m = a.isDateUnavailable) != null && m.call(a, y));
  }, d = T(() => e.value.length ? e.value[0].rows[0].map((y) => t.dayOfWeek(Fe(y), a.weekdayFormat.value)) : []), c = () => {
    const y = e.value[0].value, m = Ut({
      dateObj: y.add({ months: a.pagedNavigation.value ? a.numberOfMonths.value : 1 }),
      weekStartsOn: a.weekStartsOn.value,
      locale: a.locale.value,
      fixedWeeks: a.fixedWeeks.value,
      numberOfMonths: a.numberOfMonths.value
    });
    e.value = m, a.placeholder.value = m[0].value.set({ day: 1 });
  }, f = () => {
    const y = e.value[0].value, m = Ut({
      dateObj: y.subtract({ months: a.pagedNavigation.value ? a.numberOfMonths.value : 1 }),
      weekStartsOn: a.weekStartsOn.value,
      locale: a.locale.value,
      fixedWeeks: a.fixedWeeks.value,
      numberOfMonths: a.numberOfMonths.value
    });
    e.value = m, a.placeholder.value = m[0].value.set({ day: 1 });
  };
  ee(a.placeholder, (y) => {
    n.value.some((m) => wa(m, y)) || (e.value = Ut({
      dateObj: y,
      weekStartsOn: a.weekStartsOn.value,
      locale: a.locale.value,
      fixedWeeks: a.fixedWeeks.value,
      numberOfMonths: a.numberOfMonths.value
    }));
  }), ee([a.locale, a.weekStartsOn, a.fixedWeeks, a.numberOfMonths], () => {
    e.value = Ut({
      dateObj: a.placeholder.value,
      weekStartsOn: a.weekStartsOn.value,
      locale: a.locale.value,
      fixedWeeks: a.fixedWeeks.value,
      numberOfMonths: a.numberOfMonths.value
    });
  });
  const p = T(() => {
    if (!e.value.length)
      return "";
    if (a.locale.value !== t.getLocale() && t.setLocale(a.locale.value), e.value.length === 1) {
      const E = e.value[0].value;
      return `${t.fullMonthAndYear(Fe(E))}`;
    }
    const y = Fe(e.value[0].value), m = Fe(e.value[e.value.length - 1].value), S = t.fullMonth(y), P = t.fullMonth(m), D = t.fullYear(y), g = t.fullYear(m);
    return D === g ? `${S} - ${P} ${g}` : `${S} ${D} - ${P} ${g}`;
  }), v = T(() => `${a.calendarLabel.value ?? "Event Date"}, ${p.value}`);
  return {
    isDateDisabled: i,
    isDateUnavailable: u,
    isNextButtonDisabled: s,
    isPrevButtonDisabled: r,
    grid: e,
    weekdays: d,
    visibleView: n,
    isOutsideVisibleView: l,
    formatter: t,
    nextPage: c,
    prevPage: f,
    headingValue: p,
    fullCalendarLabel: v
  };
}
const Ui = { style: { border: "0px", clip: "rect(0px, 0px, 0px, 0px)", "clip-path": "inset(50%)", height: "1px", margin: "-1px", overflow: "hidden", padding: "0px", position: "absolute", "white-space": "nowrap", width: "1px" } }, Gi = {
  role: "heading",
  "aria-level": "2"
}, [Ft, qi] = Q("CalendarRoot"), Yi = /* @__PURE__ */ w({
  __name: "CalendarRoot",
  props: {
    modelValue: {},
    multiple: { type: Boolean, default: !1 },
    defaultValue: { default: void 0 },
    defaultPlaceholder: {},
    placeholder: { default: void 0 },
    pagedNavigation: { type: Boolean, default: !1 },
    preventDeselect: { type: Boolean, default: !1 },
    weekStartsOn: { default: 0 },
    weekdayFormat: { default: "narrow" },
    calendarLabel: {},
    fixedWeeks: { type: Boolean, default: !1 },
    maxValue: {},
    minValue: {},
    locale: { default: "en" },
    numberOfMonths: { default: 1 },
    disabled: { type: Boolean, default: !1 },
    readonly: { type: Boolean, default: !1 },
    initialFocus: { type: Boolean, default: !1 },
    isDateDisabled: { type: Function, default: void 0 },
    isDateUnavailable: { type: Function, default: void 0 },
    dir: {},
    asChild: { type: Boolean },
    as: { default: "div" }
  },
  emits: ["update:modelValue", "update:placeholder"],
  setup(a, { emit: t }) {
    const e = a, n = t, {
      locale: l,
      disabled: s,
      readonly: r,
      initialFocus: i,
      pagedNavigation: u,
      weekStartsOn: d,
      weekdayFormat: c,
      fixedWeeks: f,
      multiple: p,
      minValue: v,
      maxValue: y,
      numberOfMonths: m,
      preventDeselect: S,
      isDateDisabled: P,
      isDateUnavailable: D,
      calendarLabel: g,
      defaultValue: x,
      dir: E
    } = le(e), { primitiveElement: $, currentElement: R } = qe(), M = be(E), V = ne(e, "modelValue", n, {
      defaultValue: x.value,
      passive: e.modelValue === void 0
    }), O = Ot({
      defaultPlaceholder: e.placeholder,
      defaultValue: V.value
    }), L = ne(e, "placeholder", n, {
      defaultValue: e.defaultPlaceholder ?? O.copy(),
      passive: e.placeholder === void 0
    });
    function j(ae) {
      L.value = ae.copy();
    }
    const {
      fullCalendarLabel: J,
      headingValue: W,
      isDateDisabled: X,
      isDateUnavailable: N,
      isNextButtonDisabled: q,
      isPrevButtonDisabled: F,
      weekdays: Z,
      isOutsideVisibleView: U,
      nextPage: Y,
      prevPage: te,
      formatter: de,
      grid: H
    } = Cl({
      locale: l,
      placeholder: L,
      weekStartsOn: d,
      fixedWeeks: f,
      numberOfMonths: m,
      minValue: v,
      maxValue: y,
      disabled: s,
      weekdayFormat: c,
      pagedNavigation: u,
      isDateDisabled: P.value,
      isDateUnavailable: D.value,
      calendarLabel: g
    }), {
      isInvalid: oe,
      isDateSelected: ce
    } = ji({
      date: V,
      isDateDisabled: X,
      isDateUnavailable: N
    });
    ee(V, (ae) => {
      if (Array.isArray(ae) && ae.length) {
        const we = ae[ae.length - 1];
        we && !Se(L.value, we) && j(we);
      } else
        !Array.isArray(ae) && ae && !Se(L.value, ae) && j(ae);
    });
    function xe(ae) {
      if (p.value) {
        if (Array.isArray(V.value)) {
          if (!V.value) {
            V.value = [ae.copy()];
            return;
          }
          if (V.value.findIndex((De) => Oe(De, ae)) === -1)
            V.value = [...V.value, ae];
          else if (!S.value) {
            const De = V.value.filter(($e) => !Oe($e, ae));
            if (!De.length) {
              L.value = ae.copy(), V.value = void 0;
              return;
            }
            V.value = De.map(($e) => $e.copy());
          }
        }
      } else {
        if (!V.value) {
          V.value = ae.copy();
          return;
        }
        !S.value && Se(V.value, ae) ? (L.value = ae.copy(), V.value = void 0) : V.value = ae.copy();
      }
    }
    return se(() => {
      i.value && al(R.value);
    }), qi({
      isDateUnavailable: N,
      dir: M,
      isDateDisabled: X,
      locale: l,
      formatter: de,
      modelValue: V,
      placeholder: L,
      disabled: s,
      initialFocus: i,
      pagedNavigation: u,
      weekStartsOn: d,
      weekdayFormat: c,
      fixedWeeks: f,
      multiple: p,
      numberOfMonths: m,
      readonly: r,
      preventDeselect: S,
      fullCalendarLabel: J,
      headingValue: W,
      isInvalid: oe,
      isDateSelected: ce,
      isNextButtonDisabled: q,
      isPrevButtonDisabled: F,
      isOutsideVisibleView: U,
      nextPage: Y,
      prevPage: te,
      parentElement: R,
      onPlaceholderChange: j,
      onDateChange: xe
    }), (ae, we) => (b(), _(o(A), {
      ref_key: "primitiveElement",
      ref: $,
      as: ae.as,
      "as-child": ae.asChild,
      role: "application",
      "aria-label": o(J),
      "data-readonly": o(r) ? "" : void 0,
      "data-disabled": o(s) ? "" : void 0,
      "data-invalid": o(oe) ? "" : void 0,
      dir: o(M)
    }, {
      default: h(() => [
        C(ae.$slots, "default", {
          date: o(L),
          grid: o(H),
          weekDays: o(Z),
          weekStartsOn: o(d),
          locale: o(l),
          fixedWeeks: o(f)
        }),
        je("div", Ui, [
          je("div", Gi, ke(o(J)), 1)
        ])
      ]),
      _: 3
    }, 8, ["as", "as-child", "aria-label", "data-readonly", "data-disabled", "data-invalid", "dir"]));
  }
}), Xi = /* @__PURE__ */ w({
  __name: "CalendarHeader",
  props: {
    asChild: { type: Boolean },
    as: { default: "div" }
  },
  setup(a) {
    const t = a;
    return (e, n) => (b(), _(o(A), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), Zi = /* @__PURE__ */ w({
  __name: "CalendarHeading",
  props: {
    asChild: { type: Boolean },
    as: { default: "div" }
  },
  setup(a) {
    const t = a, e = Ft();
    return (n, l) => (b(), _(o(A), k(t, {
      "data-disabled": o(e).disabled.value ? "" : void 0
    }), {
      default: h(() => [
        C(n.$slots, "default", {
          headingValue: o(e).headingValue.value
        }, () => [
          ye(ke(o(e).headingValue.value), 1)
        ])
      ]),
      _: 3
    }, 16, ["data-disabled"]));
  }
}), Ji = /* @__PURE__ */ w({
  __name: "CalendarGrid",
  props: {
    asChild: { type: Boolean },
    as: { default: "table" }
  },
  setup(a) {
    const t = a, e = Ft();
    return (n, l) => (b(), _(o(A), k(t, {
      tabindex: "-1",
      role: "grid",
      "aria-readonly": o(e).readonly ? !0 : void 0,
      "aria-disabled": o(e).disabled ? !0 : void 0,
      "data-readonly": o(e).readonly ? "" : void 0,
      "data-disabled": o(e).disabled ? "" : void 0
    }), {
      default: h(() => [
        C(n.$slots, "default")
      ]),
      _: 3
    }, 16, ["aria-readonly", "aria-disabled", "data-readonly", "data-disabled"]));
  }
}), Qi = /* @__PURE__ */ w({
  __name: "CalendarCell",
  props: {
    date: {},
    asChild: { type: Boolean },
    as: { default: "td" }
  },
  setup(a) {
    const t = Ft();
    return (e, n) => {
      var l, s;
      return b(), _(o(A), {
        as: e.as,
        "as-child": e.asChild,
        role: "gridcell",
        "aria-selected": o(t).isDateSelected(e.date) ? !0 : void 0,
        "aria-disabled": o(t).isDateDisabled(e.date) || ((s = (l = o(t)).isDateUnavailable) == null ? void 0 : s.call(l, e.date)),
        "data-disabled": o(t).isDateDisabled(e.date) ? "" : void 0
      }, {
        default: h(() => [
          C(e.$slots, "default")
        ]),
        _: 3
      }, 8, ["as", "as-child", "aria-selected", "aria-disabled", "data-disabled"]);
    };
  }
}), eu = /* @__PURE__ */ w({
  __name: "CalendarHeadCell",
  props: {
    asChild: { type: Boolean },
    as: { default: "th" }
  },
  setup(a) {
    const t = a;
    return (e, n) => (b(), _(o(A), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), tu = /* @__PURE__ */ w({
  __name: "CalendarNext",
  props: {
    asChild: { type: Boolean },
    as: { default: "button" }
  },
  setup(a) {
    const t = a, e = Ft();
    return (n, l) => (b(), _(o(A), k(t, {
      "aria-label": "Next page",
      type: n.as === "button" ? "button" : void 0,
      "aria-disabled": o(e).isNextButtonDisabled.value || void 0,
      "data-disabled": o(e).isNextButtonDisabled.value || void 0,
      disabled: o(e).isNextButtonDisabled.value,
      onClick: o(e).nextPage
    }), {
      default: h(() => [
        C(n.$slots, "default", {}, () => [
          ye("Next page")
        ])
      ]),
      _: 3
    }, 16, ["type", "aria-disabled", "data-disabled", "disabled", "onClick"]));
  }
}), au = /* @__PURE__ */ w({
  __name: "CalendarPrev",
  props: {
    asChild: { type: Boolean },
    as: { default: "button" }
  },
  setup(a) {
    const t = a, e = Ft();
    return (n, l) => (b(), _(o(A), k({ "aria-label": "Previous page" }, t, {
      type: n.as === "button" ? "button" : void 0,
      "aria-disabled": o(e).isPrevButtonDisabled.value || void 0,
      "data-disabled": o(e).isPrevButtonDisabled.value || void 0,
      disabled: o(e).isPrevButtonDisabled.value,
      onClick: o(e).prevPage
    }), {
      default: h(() => [
        C(n.$slots, "default", {}, () => [
          ye("Prev page")
        ])
      ]),
      _: 3
    }, 16, ["type", "aria-disabled", "data-disabled", "disabled", "onClick"]));
  }
}), nu = /* @__PURE__ */ w({
  __name: "CalendarGridHead",
  props: {
    asChild: { type: Boolean },
    as: { default: "thead" }
  },
  setup(a) {
    const t = a;
    return (e, n) => (b(), _(o(A), k(t, { "aria-hidden": "true" }), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), ou = /* @__PURE__ */ w({
  __name: "CalendarGridBody",
  props: {
    asChild: { type: Boolean },
    as: { default: "tbody" }
  },
  setup(a) {
    const t = a;
    return (e, n) => (b(), _(o(A), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), lu = /* @__PURE__ */ w({
  __name: "CalendarGridRow",
  props: {
    asChild: { type: Boolean },
    as: { default: "tr" }
  },
  setup(a) {
    const t = a;
    return (e, n) => (b(), _(o(A), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), su = /* @__PURE__ */ w({
  __name: "CalendarCellTrigger",
  props: {
    day: {},
    month: {},
    asChild: { type: Boolean },
    as: { default: "div" }
  },
  setup(a) {
    const t = a, e = ft(), n = Ft(), { primitiveElement: l, currentElement: s } = qe(), r = T(() => n.formatter.custom(Fe(t.day), {
      weekday: "long",
      month: "long",
      day: "numeric",
      year: "numeric"
    })), i = T(() => n.isDateDisabled(t.day)), u = T(
      () => {
        var D;
        return (D = n.isDateUnavailable) == null ? void 0 : D.call(n, t.day);
      }
    ), d = T(() => Xo(t.day, Dn())), c = T(() => !wa(t.day, t.month)), f = T(
      () => n.isOutsideVisibleView(t.day)
    ), p = T(() => Oe(t.day, n.placeholder.value)), v = T(() => n.isDateSelected(t.day)), y = "[data-radix-vue-calendar-cell-trigger]:not([data-disabled]):not([data-outside-month]):not([data-outside-visible-months])";
    function m(D) {
      var g;
      n.readonly.value || n.isDateDisabled(D) || (g = n.isDateUnavailable) != null && g.call(n, D) || n.onDateChange(D);
    }
    function S(D) {
      m(
        Xt(
          D.target.getAttribute("data-value"),
          n.placeholder.value
        )
      );
    }
    function P(D) {
      const g = D.target;
      D.preventDefault(), D.stopPropagation();
      const x = n.parentElement.value, E = x ? Array.from(x.querySelectorAll(y)) : [];
      let R = E.indexOf(s.value);
      const M = 7, V = n.dir.value === "rtl" ? -1 : 1;
      switch (D.code) {
        case e.ARROW_RIGHT:
          R += V;
          break;
        case e.ARROW_LEFT:
          R -= V;
          break;
        case e.ARROW_UP:
          R -= M;
          break;
        case e.ARROW_DOWN:
          R += M;
          break;
        case e.ENTER:
        case e.SPACE_CODE:
          m(
            Xt(
              g.getAttribute("data-value"),
              n.placeholder.value
            )
          );
          return;
        default:
          return;
      }
      if (R >= 0 && R < E.length) {
        E[R].focus();
        return;
      }
      if (R < 0) {
        if (n.isPrevButtonDisabled.value)
          return;
        n.prevPage(), re(() => {
          const O = x ? Array.from(x.querySelectorAll(y)) : [];
          O[O.length - Math.abs(R)].focus();
        });
        return;
      }
      if (R >= E.length) {
        if (n.isNextButtonDisabled.value)
          return;
        n.nextPage(), re(() => {
          (x ? Array.from(x.querySelectorAll(y)) : [])[R - E.length].focus();
        });
      }
    }
    return (D, g) => (b(), _(o(A), k({
      ref_key: "primitiveElement",
      ref: l
    }, t, {
      role: "button",
      "aria-label": r.value,
      "data-radix-vue-calendar-cell-trigger": "",
      "aria-disabled": c.value || i.value || u.value ? !0 : void 0,
      "data-selected": v.value ? !0 : void 0,
      "data-value": D.day.toString(),
      "data-disabled": i.value || c.value ? "" : void 0,
      "data-unavailable": u.value ? "" : void 0,
      "data-today": d.value ? "" : void 0,
      "data-outside-view": c.value ? "" : void 0,
      "data-outside-visible-view": f.value ? "" : void 0,
      "data-focused": p.value ? "" : void 0,
      tabindex: p.value ? 0 : c.value || i.value ? void 0 : -1,
      onClick: S,
      onKeydown: [
        he(P, ["up", "down", "left", "right", "space", "enter"]),
        g[0] || (g[0] = he(ge(() => {
        }, ["prevent"]), ["enter"]))
      ]
    }), {
      default: h(() => [
        C(D.$slots, "default", {}, () => [
          ye(ke(D.day.day.toLocaleString(o(n).locale.value)), 1)
        ])
      ]),
      _: 3
    }, 16, ["aria-label", "aria-disabled", "data-selected", "data-value", "data-disabled", "data-unavailable", "data-today", "data-outside-view", "data-outside-visible-view", "data-focused", "tabindex"]));
  }
});
function xa(a) {
  return a === "indeterminate";
}
function wl(a) {
  return xa(a) ? "indeterminate" : a ? "checked" : "unchecked";
}
const ru = ["value", "checked", "name", "disabled", "required"], [iu, uu] = Q("CheckboxRoot"), Vp = /* @__PURE__ */ w({
  inheritAttrs: !1,
  __name: "CheckboxRoot",
  props: {
    defaultChecked: { type: Boolean },
    checked: { type: [Boolean, String], default: void 0 },
    disabled: { type: Boolean },
    required: { type: Boolean },
    name: {},
    value: { default: "on" },
    id: {},
    asChild: { type: Boolean },
    as: { default: "button" }
  },
  emits: ["update:checked"],
  setup(a, { emit: t }) {
    const e = a, n = t, { disabled: l } = le(e), s = ne(e, "checked", n, {
      defaultValue: e.defaultChecked,
      passive: e.checked === void 0
    }), { forwardRef: r, currentElement: i } = I(), u = ct(i), d = T(() => {
      var c;
      return e.id && i.value ? (c = document.querySelector(`[for="${e.id}"]`)) == null ? void 0 : c.innerText : void 0;
    });
    return uu({
      disabled: l,
      state: s
    }), (c, f) => (b(), fe(Pe, null, [
      G(o(A), k(c.$attrs, {
        id: c.id,
        ref: o(r),
        role: "checkbox",
        "as-child": e.asChild,
        as: c.as,
        type: c.as === "button" ? "button" : void 0,
        "aria-checked": o(xa)(o(s)) ? "mixed" : o(s),
        "aria-required": !1,
        "aria-label": c.$attrs["aria-label"] || d.value,
        "data-state": o(wl)(o(s)),
        "data-disabled": o(l) ? "" : void 0,
        disabled: o(l),
        onKeydown: he(ge(() => {
        }, ["prevent"]), ["enter"]),
        onClick: f[0] || (f[0] = (p) => s.value = o(xa)(o(s)) ? !0 : !o(s))
      }), {
        default: h(() => [
          C(c.$slots, "default")
        ]),
        _: 3
      }, 16, ["id", "as-child", "as", "type", "aria-checked", "aria-label", "data-state", "data-disabled", "disabled", "onKeydown"]),
      o(u) ? (b(), fe("input", {
        key: 0,
        type: "checkbox",
        tabindex: "-1",
        "aria-hidden": "",
        value: c.value,
        checked: !!o(s),
        name: e.name,
        disabled: e.disabled,
        required: e.required,
        style: Ce({
          transform: "translateX(-100%)",
          position: "absolute",
          pointerEvents: "none",
          opacity: 0,
          margin: 0
        })
      }, null, 12, ru)) : ue("", !0)
    ], 64));
  }
}), Fp = /* @__PURE__ */ w({
  __name: "CheckboxIndicator",
  props: {
    forceMount: { type: Boolean },
    asChild: { type: Boolean },
    as: { default: "span" }
  },
  setup(a) {
    const { forwardRef: t } = I(), e = iu();
    return (n, l) => (b(), _(o(Ee), {
      present: n.forceMount || o(xa)(o(e).state.value) || o(e).state.value === !0
    }, {
      default: h(() => [
        G(o(A), k({
          ref: o(t),
          "data-state": o(wl)(o(e).state.value),
          "data-disabled": o(e).disabled.value ? "" : void 0,
          style: { pointerEvents: "none" },
          "as-child": n.asChild,
          as: n.as
        }, n.$attrs), {
          default: h(() => [
            C(n.$slots, "default")
          ]),
          _: 3
        }, 16, ["data-state", "data-disabled", "as-child", "as"])
      ]),
      _: 3
    }, 8, ["present"]));
  }
}), [_l, du] = Q("PopperRoot"), xt = /* @__PURE__ */ w({
  __name: "PopperRoot",
  setup(a) {
    const t = B();
    return du({
      anchor: t,
      onAnchorChange: (e) => t.value = e
    }), (e, n) => C(e.$slots, "default");
  }
}), St = /* @__PURE__ */ w({
  __name: "PopperAnchor",
  props: {
    element: {},
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a, { forwardRef: e, currentElement: n } = I(), l = _l();
    return ee(n, () => {
      l.onAnchorChange(t.element ?? n.value);
    }), (s, r) => (b(), _(o(A), {
      ref: o(e),
      as: s.as,
      "as-child": s.asChild
    }, {
      default: h(() => [
        C(s.$slots, "default")
      ]),
      _: 3
    }, 8, ["as", "as-child"]));
  }
});
function cu(a) {
  return a !== null;
}
function fu(a) {
  return {
    name: "transformOrigin",
    options: a,
    fn(t) {
      var S, P, D;
      const { placement: e, rects: n, middlewareData: l } = t, r = ((S = l.arrow) == null ? void 0 : S.centerOffset) !== 0, i = r ? 0 : a.arrowWidth, u = r ? 0 : a.arrowHeight, [d, c] = hn(e), f = { start: "0%", center: "50%", end: "100%" }[c], p = (((P = l.arrow) == null ? void 0 : P.x) ?? 0) + i / 2, v = (((D = l.arrow) == null ? void 0 : D.y) ?? 0) + u / 2;
      let y = "", m = "";
      return d === "bottom" ? (y = r ? f : `${p}px`, m = `${-u}px`) : d === "top" ? (y = r ? f : `${p}px`, m = `${n.floating.height + u}px`) : d === "right" ? (y = `${-u}px`, m = r ? f : `${v}px`) : d === "left" && (y = `${n.floating.width + u}px`, m = r ? f : `${v}px`), { data: { x: y, y: m } };
    }
  };
}
function hn(a) {
  const [t, e = "center"] = a.split("-");
  return [t, e];
}
const xl = {
  side: "bottom",
  sideOffset: 0,
  align: "center",
  alignOffset: 0,
  arrowPadding: 0,
  avoidCollisions: !0,
  collisionBoundary: () => [],
  collisionPadding: 0,
  sticky: "partial",
  hideWhenDetached: !1,
  updatePositionStrategy: "optimized",
  prioritizePosition: !1
}, [pu, vu] = Q("PopperContent"), Ct = /* @__PURE__ */ w({
  inheritAttrs: !1,
  __name: "PopperContent",
  props: /* @__PURE__ */ qo({
    side: {},
    sideOffset: {},
    align: {},
    alignOffset: {},
    avoidCollisions: { type: Boolean },
    collisionBoundary: {},
    collisionPadding: {},
    arrowPadding: {},
    sticky: {},
    hideWhenDetached: { type: Boolean },
    updatePositionStrategy: {},
    prioritizePosition: { type: Boolean },
    asChild: { type: Boolean },
    as: {}
  }, {
    ...xl
  }),
  emits: ["placed"],
  setup(a, { emit: t }) {
    const e = a, n = t, l = _l(), { forwardRef: s, currentElement: r } = I(), i = B(), u = B(), { width: d, height: c } = ul(u), f = T(
      () => e.side + (e.align !== "center" ? `-${e.align}` : "")
    ), p = T(() => typeof e.collisionPadding == "number" ? e.collisionPadding : { top: 0, right: 0, bottom: 0, left: 0, ...e.collisionPadding }), v = T(() => Array.isArray(e.collisionBoundary) ? e.collisionBoundary : [e.collisionBoundary]), y = T(() => ({
      padding: p.value,
      boundary: v.value.filter(cu),
      // with `strategy: 'fixed'`, this is the only way to get it to respect boundaries
      altBoundary: v.value.length > 0
    })), m = vr(() => [
      Js({
        mainAxis: e.sideOffset + c.value,
        alignmentAxis: e.alignOffset
      }),
      e.prioritizePosition && e.avoidCollisions && _o({
        ...y.value
      }),
      e.avoidCollisions && Qs({
        mainAxis: !0,
        crossAxis: !!e.prioritizePosition,
        limiter: e.sticky === "partial" ? er() : void 0,
        ...y.value
      }),
      !e.prioritizePosition && e.avoidCollisions && _o({
        ...y.value
      }),
      tr({
        ...y.value,
        apply: ({ elements: O, rects: L, availableWidth: j, availableHeight: J }) => {
          const { width: W, height: X } = L.reference, N = O.floating.style;
          Object.assign(O.floating.style, {
            maxWidth: `${j}px`,
            maxHeight: `${J}px`
          }), N.setProperty(
            "--radix-popper-available-width",
            `${j}px`
          ), N.setProperty(
            "--radix-popper-available-height",
            `${J}px`
          ), N.setProperty(
            "--radix-popper-anchor-width",
            `${W}px`
          ), N.setProperty(
            "--radix-popper-anchor-height",
            `${X}px`
          );
        }
      }),
      u.value && ar({ element: u.value, padding: e.arrowPadding }),
      fu({
        arrowWidth: d.value,
        arrowHeight: c.value
      }),
      e.hideWhenDetached && nr({ strategy: "referenceHidden", ...y.value })
    ]), { floatingStyles: S, placement: P, isPositioned: D, middlewareData: g } = Xs(
      l.anchor,
      i,
      {
        strategy: "fixed",
        placement: f,
        whileElementsMounted: (...O) => Zs(...O, {
          animationFrame: e.updatePositionStrategy === "always"
        }),
        middleware: m
      }
    ), x = T(
      () => hn(P.value)[0]
    ), E = T(
      () => hn(P.value)[1]
    );
    ve(() => {
      D.value && n("placed");
    });
    const $ = T(
      () => {
        var O;
        return ((O = g.value.arrow) == null ? void 0 : O.centerOffset) !== 0;
      }
    ), R = B("");
    ve(() => {
      r.value && (R.value = window.getComputedStyle(r.value).zIndex);
    });
    const M = T(() => {
      var O;
      return ((O = g.value.arrow) == null ? void 0 : O.x) ?? 0;
    }), V = T(() => {
      var O;
      return ((O = g.value.arrow) == null ? void 0 : O.y) ?? 0;
    });
    return vu({
      placedSide: x,
      onArrowChange: (O) => u.value = O,
      arrowX: M,
      arrowY: V,
      shouldHideArrow: $
    }), (O, L) => {
      var j, J, W;
      return b(), fe("div", {
        ref_key: "floatingRef",
        ref: i,
        "data-radix-popper-content-wrapper": "",
        style: Ce({
          ...o(S),
          transform: o(D) ? o(S).transform : "translate(0, -200%)",
          // keep off the page when measuring
          minWidth: "max-content",
          zIndex: R.value,
          "--radix-popper-transform-origin": [
            (j = o(g).transformOrigin) == null ? void 0 : j.x,
            (J = o(g).transformOrigin) == null ? void 0 : J.y
          ].join(" "),
          // hide the content if using the hide middleware and should be hidden
          // set visibility to hidden and disable pointer events so the UI behaves
          // as if the PopperContent isn't there at all
          ...((W = o(g).hide) == null ? void 0 : W.referenceHidden) && {
            visibility: "hidden",
            pointerEvents: "none"
          }
        })
      }, [
        G(o(A), k({ ref: o(s) }, O.$attrs, {
          "as-child": e.asChild,
          as: O.as,
          "data-side": x.value,
          "data-align": E.value,
          style: {
            // if the PopperContent hasn't been placed yet (not all measurements done)
            // we prevent animations so that users's animation don't kick in too early referring wrong sides
            animation: o(D) ? void 0 : "none"
          }
        }), {
          default: h(() => [
            C(O.$slots, "default")
          ]),
          _: 3
        }, 16, ["as-child", "as", "data-side", "data-align", "style"])
      ], 4);
    };
  }
}), mu = /* @__PURE__ */ je("polygon", { points: "0,0 30,0 15,10" }, null, -1), hu = /* @__PURE__ */ w({
  __name: "Arrow",
  props: {
    width: { default: 10 },
    height: { default: 5 },
    asChild: { type: Boolean },
    as: { default: "svg" }
  },
  setup(a) {
    const t = a;
    return I(), (e, n) => (b(), _(o(A), k(t, {
      width: e.width,
      height: e.height,
      viewBox: e.asChild ? void 0 : "0 0 30 10",
      preserveAspectRatio: e.asChild ? void 0 : "none"
    }), {
      default: h(() => [
        C(e.$slots, "default", {}, () => [
          mu
        ])
      ]),
      _: 3
    }, 16, ["width", "height", "viewBox", "preserveAspectRatio"]));
  }
}), yu = {
  top: "bottom",
  right: "left",
  bottom: "top",
  left: "right"
}, Lt = /* @__PURE__ */ w({
  inheritAttrs: !1,
  __name: "PopperArrow",
  props: {
    width: {},
    height: {},
    asChild: { type: Boolean },
    as: { default: "svg" }
  },
  setup(a) {
    const { forwardRef: t } = I(), e = pu(), n = T(() => yu[e.placedSide.value]);
    return (l, s) => {
      var r, i, u, d;
      return b(), fe("span", {
        ref: (c) => {
          o(e).onArrowChange(c);
        },
        style: Ce({
          position: "absolute",
          left: (r = o(e).arrowX) != null && r.value ? `${(i = o(e).arrowX) == null ? void 0 : i.value}px` : void 0,
          top: (u = o(e).arrowY) != null && u.value ? `${(d = o(e).arrowY) == null ? void 0 : d.value}px` : void 0,
          [n.value]: 0,
          transformOrigin: {
            top: "",
            right: "0 0",
            bottom: "center 0",
            left: "100% 0"
          }[o(e).placedSide.value],
          transform: {
            top: "translateY(100%)",
            right: "translateY(50%) rotate(90deg) translateX(-50%)",
            bottom: "rotate(180deg)",
            left: "translateY(50%) rotate(-90deg) translateX(50%)"
          }[o(e).placedSide.value],
          visibility: o(e).shouldHideArrow.value ? "hidden" : void 0
        })
      }, [
        G(hu, k(l.$attrs, {
          ref: o(t),
          style: {
            display: "block"
          },
          as: l.as,
          "as-child": l.asChild,
          width: l.width,
          height: l.height
        }), {
          default: h(() => [
            C(l.$slots, "default")
          ]),
          _: 3
        }, 16, ["as", "as-child", "width", "height"])
      ], 4);
    };
  }
}), Nt = /* @__PURE__ */ w({
  __name: "VisuallyHidden",
  props: {
    asChild: { type: Boolean },
    as: { default: "span" }
  },
  setup(a) {
    return I(), (t, e) => (b(), _(o(A), {
      as: t.as,
      "as-child": t.asChild,
      style: Ce({
        // See: https://github.com/twbs/bootstrap/blob/master/scss/mixins/_screen-reader.scss
        position: "absolute",
        border: 0,
        width: "1px",
        display: "inline-block",
        height: "1px",
        padding: 0,
        margin: "-1px",
        overflow: "hidden",
        clip: "rect(0, 0, 0, 0)",
        whiteSpace: "nowrap",
        wordWrap: "normal"
      })
    }, {
      default: h(() => [
        C(t.$slots, "default")
      ]),
      _: 3
    }, 8, ["as", "as-child", "style"]));
  }
}), zn = /* @__PURE__ */ w({
  __name: "VisuallyHiddenInput",
  props: {
    name: {},
    value: {},
    required: { type: Boolean },
    disabled: { type: Boolean }
  },
  setup(a) {
    const t = a, e = T(() => typeof t.value == "string" || typeof t.value == "number" || typeof t.value == "boolean" ? [{ name: t.name, value: t.value }] : typeof t.value == "object" && Array.isArray(t.value) ? t.value.flatMap((n, l) => typeof n == "object" ? Object.entries(n).map(([s, r]) => ({ name: `[${l}][${t.name}][${s}]`, value: r })) : { name: `[${t.name}][${l}]`, value: n }) : typeof t.value == "object" && !Array.isArray(t.value) ? Object.entries(t.value).map(([n, l]) => ({ name: `[${t.name}][${n}]`, value: l })) : []);
    return (n, l) => (b(!0), fe(Pe, null, Da(e.value, (s) => (b(), _(Nt, {
      key: s.name,
      as: "input",
      type: "hidden",
      hidden: "",
      readonly: "",
      name: s.name,
      value: s.value,
      required: n.required,
      disabled: n.disabled
    }, null, 8, ["name", "value", "required", "disabled"]))), 128));
  }
});
function gu(a) {
  return a && a.__esModule && Object.prototype.hasOwnProperty.call(a, "default") ? a.default : a;
}
var bu = function a(t, e) {
  if (t === e)
    return !0;
  if (t && e && typeof t == "object" && typeof e == "object") {
    if (t.constructor !== e.constructor)
      return !1;
    var n, l, s;
    if (Array.isArray(t)) {
      if (n = t.length, n != e.length)
        return !1;
      for (l = n; l-- !== 0; )
        if (!a(t[l], e[l]))
          return !1;
      return !0;
    }
    if (t.constructor === RegExp)
      return t.source === e.source && t.flags === e.flags;
    if (t.valueOf !== Object.prototype.valueOf)
      return t.valueOf() === e.valueOf();
    if (t.toString !== Object.prototype.toString)
      return t.toString() === e.toString();
    if (s = Object.keys(t), n = s.length, n !== Object.keys(e).length)
      return !1;
    for (l = n; l-- !== 0; )
      if (!Object.prototype.hasOwnProperty.call(e, s[l]))
        return !1;
    for (l = n; l-- !== 0; ) {
      var r = s[l];
      if (!a(t[r], e[r]))
        return !1;
    }
    return !0;
  }
  return t !== t && e !== e;
};
const Xe = /* @__PURE__ */ gu(bu), Cu = "data-radix-vue-collection-item", [Kn, wu] = Q("CollectionProvider");
function Oa(a = Cu) {
  const t = B(/* @__PURE__ */ new Map()), e = B(), n = wu({
    collectionRef: e,
    itemMap: t,
    attrName: a
  }), { getItems: l } = Hn(n), s = T(() => Array.from(n.itemMap.value.values())), r = T(() => n.itemMap.value.size);
  return { getItems: l, reactiveItems: s, itemMapSize: r };
}
const ka = w({
  name: "CollectionSlot",
  setup(a, { slots: t }) {
    const e = Kn(), { primitiveElement: n, currentElement: l } = qe();
    return ee(l, () => {
      e.collectionRef.value = l.value;
    }), () => rt(Mn, { ref: n }, t);
  }
}), Ma = w({
  name: "CollectionItem",
  setup(a, { slots: t, attrs: e }) {
    const n = Kn(), { primitiveElement: l, currentElement: s } = qe(), r = Ze();
    return ve((i) => {
      var u;
      if (s.value) {
        const d = bo(s.value);
        n.itemMap.value.set(d, { ref: s.value, ...bo(((u = r == null ? void 0 : r.parent) == null ? void 0 : u.props) ?? {}) }), i(() => n.itemMap.value.delete(d));
      }
    }), () => rt(Mn, { ...e, [n.attrName]: "", ref: l }, t);
  }
});
function Hn(a) {
  const t = a ?? Kn();
  return { getItems: () => {
    const n = t.collectionRef.value;
    if (!n)
      return [];
    const l = Array.from(n.querySelectorAll(`[${t.attrName}]`));
    return Array.from(t.itemMap.value.values()).sort(
      (i, u) => l.indexOf(i.ref) - l.indexOf(u.ref)
    );
  } };
}
const [Qe, _u] = Q("ComboboxRoot"), Lp = /* @__PURE__ */ w({
  __name: "ComboboxRoot",
  props: {
    modelValue: {},
    defaultValue: {},
    open: { type: Boolean, default: void 0 },
    defaultOpen: { type: Boolean },
    searchTerm: {},
    multiple: { type: Boolean },
    disabled: { type: Boolean },
    name: {},
    dir: {},
    filterFunction: {},
    displayValue: {},
    asChild: { type: Boolean },
    as: {}
  },
  emits: ["update:modelValue", "update:open", "update:searchTerm"],
  setup(a, { emit: t }) {
    const e = a, n = t, { multiple: l, disabled: s, dir: r } = le(e), i = be(r), u = ne(e, "searchTerm", n, {
      // @ts-expect-error ignore the type error here
      defaultValue: "",
      passive: e.searchTerm === void 0
    }), d = ne(e, "modelValue", n, {
      // @ts-expect-error ignore the type error here
      defaultValue: e.defaultValue ?? l.value ? [] : void 0,
      passive: e.modelValue === void 0,
      deep: !0
    }), c = ne(e, "open", n, {
      defaultValue: e.defaultOpen,
      passive: e.open === void 0
    }), f = B();
    async function p(W) {
      var X, N;
      c.value = W, await re(), W ? (d.value && (Array.isArray(d.value) && l.value ? f.value = (X = g().find((q) => {
        var F, Z;
        return ((Z = (F = q.ref) == null ? void 0 : F.dataset) == null ? void 0 : Z.state) === "checked";
      })) == null ? void 0 : X.value : f.value = d.value), (N = m.value) == null || N.focus(), J()) : (y.value = !1, M());
    }
    function v(W) {
      if (Array.isArray(d.value) && l.value) {
        const X = d.value.findIndex((N) => Xe(N, W));
        X === -1 ? d.value.push(W) : d.value.splice(X, 1);
      } else
        d.value = W, p(!1);
    }
    const y = B(!1), m = B(), S = B(), { forwardRef: P, currentElement: D } = I(), { getItems: g, reactiveItems: x, itemMapSize: E } = Oa("data-radix-vue-combobox-item"), $ = B([]);
    ee(() => E.value, () => {
      $.value = g().map((W) => W.value);
    }, { immediate: !0 });
    const R = T(() => {
      if (y.value) {
        if (e.filterFunction)
          return e.filterFunction($.value, u.value);
        const W = $.value.filter((X) => typeof X == "string");
        if (W.length)
          return W.filter((X) => {
            var N;
            return X.toLowerCase().includes((N = u.value) == null ? void 0 : N.toLowerCase());
          });
      }
      return $.value;
    });
    function M() {
      !l.value && d.value && !Array.isArray(d.value) ? e.displayValue ? u.value = e.displayValue(d.value) : typeof d.value != "object" ? u.value = d.value.toString() : u.value = "" : u.value = "";
    }
    const V = T(() => R.value.findIndex((W) => Xe(W, f.value))), O = T(() => {
      var W;
      return (W = x.value.find((X) => X.value === f.value)) == null ? void 0 : W.ref;
    }), L = T(() => JSON.stringify(d.value));
    ee(L, async () => {
      await re(), await re(), M();
    }, { immediate: !0 }), ee(() => R.value.length, async (W) => {
      await re(), await re(), W && V.value === -1 && (f.value = R.value[0]);
    });
    const j = ct(D);
    function J() {
      O.value instanceof Element && O.value.scrollIntoView({ block: "nearest" });
    }
    return _u({
      searchTerm: u,
      modelValue: d,
      // @ts-expect-error igoring
      onValueChange: v,
      isUserInputted: y,
      multiple: l,
      disabled: s,
      open: c,
      onOpenChange: p,
      filteredOptions: R,
      contentId: "",
      inputElement: m,
      onInputElementChange: (W) => m.value = W,
      onInputNavigation: async (W) => {
        const X = V.value;
        X === 0 && W === "up" || X === R.value.length - 1 && W === "down" || (X === -1 && R.value.length || W === "home" ? f.value = R.value[0] : W === "end" ? f.value = R.value[R.value.length - 1] : f.value = R.value[W === "up" ? X - 1 : X + 1], J());
      },
      onInputEnter: async () => {
        var W;
        R.value.length && f.value && O.value instanceof Element && ((W = O.value) == null || W.click());
      },
      selectedValue: f,
      onSelectedValueChange: (W) => f.value = W,
      parentElement: D,
      contentElement: S,
      onContentElementChange: (W) => S.value = W
    }), (W, X) => (b(), _(o(xt), null, {
      default: h(() => [
        G(o(A), k({
          ref: o(P),
          style: {
            pointerEvents: o(c) ? "auto" : void 0
          },
          as: W.as,
          "as-child": W.asChild,
          dir: o(i)
        }, W.$attrs), {
          default: h(() => [
            C(W.$slots, "default", {
              open: o(c),
              modelValue: o(d)
            }),
            o(j) && e.name ? (b(), _(o(zn), {
              key: 0,
              name: e.name,
              value: o(d)
            }, null, 8, ["name", "value"])) : ue("", !0)
          ]),
          _: 3
        }, 16, ["style", "as", "as-child", "dir"])
      ]),
      _: 3
    }));
  }
}), Np = /* @__PURE__ */ w({
  __name: "ComboboxInput",
  props: {
    type: { default: "text" },
    disabled: { type: Boolean },
    autoFocus: { type: Boolean },
    asChild: { type: Boolean },
    as: { default: "input" }
  },
  setup(a) {
    const t = a, e = Qe(), { forwardRef: n, currentElement: l } = I();
    se(() => {
      const d = l.value.nodeName === "INPUT" ? l.value : l.value.querySelector("input");
      d && (e.onInputElementChange(d), setTimeout(() => {
        t.autoFocus && (d == null || d.focus());
      }, 1));
    });
    const s = T(() => t.disabled || e.disabled.value || !1);
    function r(d) {
      e.open.value ? e.onInputNavigation(d.key === "ArrowUp" ? "up" : "down") : e.onOpenChange(!0);
    }
    function i(d) {
      e.open.value && e.onInputNavigation(d.key === "Home" ? "home" : "end");
    }
    function u(d) {
      var c;
      e.searchTerm.value = (c = d.target) == null ? void 0 : c.value, e.open.value || e.onOpenChange(!0), e.isUserInputted.value = !0;
    }
    return (d, c) => (b(), _(o(A), {
      ref: o(n),
      as: d.as,
      "as-child": d.asChild,
      type: d.type,
      disabled: s.value,
      value: o(e).searchTerm.value,
      "aria-expanded": o(e).open.value,
      "aria-controls": o(e).contentId,
      "aria-disabled": s.value ?? void 0,
      "aria-autocomplete": "list",
      role: "combobox",
      autocomplete: "false",
      onInput: u,
      onKeydown: [
        he(ge(r, ["prevent"]), ["down", "up"]),
        he(o(e).onInputEnter, ["enter"]),
        he(ge(i, ["prevent"]), ["home", "end"])
      ]
    }, {
      default: h(() => [
        C(d.$slots, "default")
      ]),
      _: 3
    }, 8, ["as", "as-child", "type", "disabled", "value", "aria-expanded", "aria-controls", "aria-disabled", "onKeydown"]));
  }
}), zp = /* @__PURE__ */ w({
  __name: "ComboboxAnchor",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const { forwardRef: t } = I();
    return (e, n) => (b(), _(o(St), { "as-child": "" }, {
      default: h(() => [
        G(o(A), k({
          ref: o(t),
          "as-child": e.asChild,
          as: e.as
        }, e.$attrs), {
          default: h(() => [
            C(e.$slots, "default")
          ]),
          _: 3
        }, 16, ["as-child", "as"])
      ]),
      _: 3
    }));
  }
}), Kp = /* @__PURE__ */ w({
  __name: "ComboboxTrigger",
  props: {
    disabled: { type: Boolean },
    asChild: { type: Boolean },
    as: { default: "button" }
  },
  setup(a) {
    const t = a;
    I();
    const e = Qe(), n = T(() => t.disabled || e.disabled.value || !1);
    return (l, s) => (b(), _(o(A), k(t, {
      type: l.as === "button" ? "button" : void 0,
      tabindex: "-1",
      "aria-label": "Show popup",
      "aria-haspopup": "listbox",
      "aria-expanded": o(e).open.value,
      "aria-controls": o(e).contentId,
      "data-state": o(e).open.value ? "open" : "closed",
      disabled: n.value,
      "data-disabled": n.value ? "" : void 0,
      "aria-disabled": n.value ?? void 0,
      onClick: s[0] || (s[0] = (r) => o(e).onOpenChange(!o(e).open.value))
    }), {
      default: h(() => [
        C(l.$slots, "default")
      ]),
      _: 3
    }, 16, ["type", "aria-expanded", "aria-controls", "data-state", "disabled", "data-disabled", "aria-disabled"]));
  }
}), Hp = /* @__PURE__ */ w({
  __name: "ComboboxCancel",
  props: {
    asChild: { type: Boolean },
    as: { default: "button" }
  },
  setup(a) {
    const t = a;
    I();
    const e = Qe();
    function n() {
      var l;
      e.searchTerm.value = "", (l = e.inputElement.value) == null || l.focus();
    }
    return (l, s) => (b(), _(o(A), k({
      type: l.as === "button" ? "button" : void 0
    }, t, {
      tabindex: "-1",
      onClick: n
    }), {
      default: h(() => [
        C(l.$slots, "default")
      ]),
      _: 3
    }, 16, ["type"]));
  }
}), [Sl, xu] = Q("ComboboxGroup"), Wp = /* @__PURE__ */ w({
  __name: "ComboboxGroup",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a, { currentRef: e, currentElement: n } = I(), l = me(void 0, "radix-vue-combobox-group"), s = Qe(), r = B(!1);
    function i() {
      if (!n.value)
        return;
      const u = n.value.querySelectorAll("[data-radix-vue-combobox-item]:not([data-hidden])");
      r.value = !!u.length;
    }
    return Ar(n, () => {
      i();
    }, { childList: !0 }), ee(() => s.searchTerm.value, () => {
      re(() => {
        i();
      });
    }, { immediate: !0 }), xu({
      id: l
    }), (u, d) => Ea((b(), _(o(A), k(t, {
      ref_key: "currentRef",
      ref: e,
      role: "group",
      "aria-labelledby": o(l)
    }), {
      default: h(() => [
        C(u.$slots, "default")
      ]),
      _: 3
    }, 16, ["aria-labelledby"])), [
      [Sn, r.value]
    ]);
  }
}), jp = /* @__PURE__ */ w({
  __name: "ComboboxLabel",
  props: {
    for: {},
    asChild: { type: Boolean },
    as: { default: "div" }
  },
  setup(a) {
    const t = a;
    I();
    const e = Sl({ id: "" });
    return (n, l) => (b(), _(o(A), k(t, {
      id: o(e).id
    }), {
      default: h(() => [
        C(n.$slots, "default")
      ]),
      _: 3
    }, 16, ["id"]));
  }
}), [Su, Pu] = Q("ComboboxContent"), Eu = /* @__PURE__ */ w({
  __name: "ComboboxContentImpl",
  props: {
    position: { default: "inline" },
    bodyLock: { type: Boolean },
    dismissable: { type: Boolean, default: !0 },
    side: {},
    sideOffset: {},
    align: {},
    alignOffset: {},
    avoidCollisions: { type: Boolean },
    collisionBoundary: {},
    collisionPadding: {},
    arrowPadding: {},
    sticky: {},
    hideWhenDetached: { type: Boolean },
    updatePositionStrategy: {},
    prioritizePosition: { type: Boolean },
    asChild: { type: Boolean },
    as: {},
    disableOutsidePointerEvents: { type: Boolean }
  },
  emits: ["escapeKeyDown", "pointerDownOutside", "focusOutside", "interactOutside"],
  setup(a, { emit: t }) {
    const e = a, n = t, { position: l } = le(e), s = Qe();
    sa(e.bodyLock);
    const { forwardRef: r, currentElement: i } = I();
    ra(i);
    const u = T(() => e.position === "popper" ? e : {}), d = _t(u.value);
    function c(p) {
      s.onSelectedValueChange("");
    }
    se(() => {
      s.onContentElementChange(i.value);
    });
    const f = {
      // Ensure border-box for floating-ui calculations
      boxSizing: "border-box",
      "--radix-combobox-content-transform-origin": "var(--radix-popper-transform-origin)",
      "--radix-combobox-content-available-width": "var(--radix-popper-available-width)",
      "--radix-combobox-content-available-height": "var(--radix-popper-available-height)",
      "--radix-combobox-trigger-width": "var(--radix-popper-anchor-width)",
      "--radix-combobox-trigger-height": "var(--radix-popper-anchor-height)"
    };
    return Pu({ position: l }), (p, v) => (b(), _(o(ka), null, {
      default: h(() => [
        p.dismissable ? (b(), _(o(vt), {
          key: 0,
          "as-child": "",
          "disable-outside-pointer-events": p.disableOutsidePointerEvents,
          onDismiss: v[0] || (v[0] = (y) => o(s).onOpenChange(!1)),
          onFocusOutside: v[1] || (v[1] = (y) => {
            var m;
            (m = o(s).parentElement.value) != null && m.contains(y.target) && y.preventDefault(), n("focusOutside", y);
          }),
          onInteractOutside: v[2] || (v[2] = (y) => n("interactOutside", y)),
          onEscapeKeyDown: v[3] || (v[3] = (y) => n("escapeKeyDown", y)),
          onPointerDownOutside: v[4] || (v[4] = (y) => {
            var m;
            (m = o(s).parentElement.value) != null && m.contains(y.target) && y.preventDefault(), n("pointerDownOutside", y);
          })
        }, {
          default: h(() => [
            (b(), _(Ue(o(l) === "popper" ? o(Ct) : o(A)), k({ ...p.$attrs, ...o(d) }, {
              id: o(s).contentId,
              ref: o(r),
              role: "listbox",
              "data-state": o(s).open.value ? "open" : "closed",
              style: {
                // flex layout so we can place the scroll buttons properly
                display: "flex",
                flexDirection: "column",
                // reset the outline by default as the content MAY get focused
                outline: "none",
                ...o(l) === "popper" ? f : {}
              },
              onPointerleave: c
            }), {
              default: h(() => [
                C(p.$slots, "default")
              ]),
              _: 3
            }, 16, ["id", "data-state", "style"]))
          ]),
          _: 3
        }, 8, ["disable-outside-pointer-events"])) : (b(), _(Ue(o(l) === "popper" ? o(Ct) : o(A)), k({ key: 1 }, { ...p.$attrs, ...u.value }, {
          id: o(s).contentId,
          ref: o(r),
          role: "listbox",
          "data-state": o(s).open.value ? "open" : "closed",
          style: {
            // flex layout so we can place the scroll buttons properly
            display: "flex",
            flexDirection: "column",
            // reset the outline by default as the content MAY get focused
            outline: "none",
            ...o(l) === "popper" ? f : {}
          },
          onPointerleave: c
        }), {
          default: h(() => [
            C(p.$slots, "default")
          ]),
          _: 3
        }, 16, ["id", "data-state", "style"]))
      ]),
      _: 3
    }));
  }
}), Up = /* @__PURE__ */ w({
  __name: "ComboboxContent",
  props: {
    forceMount: { type: Boolean },
    position: {},
    bodyLock: { type: Boolean },
    dismissable: { type: Boolean },
    side: {},
    sideOffset: {},
    align: {},
    alignOffset: {},
    avoidCollisions: { type: Boolean },
    collisionBoundary: {},
    collisionPadding: {},
    arrowPadding: {},
    sticky: {},
    hideWhenDetached: { type: Boolean },
    updatePositionStrategy: {},
    prioritizePosition: { type: Boolean },
    asChild: { type: Boolean },
    as: {},
    disableOutsidePointerEvents: { type: Boolean }
  },
  emits: ["escapeKeyDown", "pointerDownOutside", "focusOutside", "interactOutside"],
  setup(a, { emit: t }) {
    const l = _e(a, t), { forwardRef: s } = I(), r = Qe();
    return r.contentId || (r.contentId = me(void 0, "radix-vue-combobox-content")), (i, u) => (b(), _(o(Ee), {
      present: i.forceMount || o(r).open.value
    }, {
      default: h(() => [
        G(Eu, k({ ...o(l), ...i.$attrs }, { ref: o(s) }), {
          default: h(() => [
            C(i.$slots, "default")
          ]),
          _: 3
        }, 16)
      ]),
      _: 3
    }, 8, ["present"]));
  }
}), Gp = /* @__PURE__ */ w({
  __name: "ComboboxEmpty",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    I();
    const e = Qe(), n = T(() => e.filteredOptions.value.length === 0);
    return (l, s) => n.value ? (b(), _(o(A), z(k({ key: 0 }, t)), {
      default: h(() => [
        C(l.$slots, "default", {}, () => [
          ye("No options")
        ])
      ]),
      _: 3
    }, 16)) : ue("", !0);
  }
}), qp = /* @__PURE__ */ w({
  __name: "ComboboxViewport",
  props: {
    nonce: {},
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a, { forwardRef: e } = I();
    return (n, l) => (b(), fe(Pe, null, [
      G(o(A), k({ ...n.$attrs, ...t }, {
        ref: o(e),
        "data-radix-combobox-viewport": "",
        role: "presentation",
        style: {
          // we use position: 'relative' here on the `viewport` so that when we call
          // `selectedItem.offsetTop` in calculations, the offset is relative to the viewport
          // (independent of the scrollUpButton).
          position: "relative",
          flex: 1,
          overflow: "auto"
        }
      }), {
        default: h(() => [
          C(n.$slots, "default")
        ]),
        _: 3
      }, 16, ["style"]),
      G(o(A), {
        as: "style",
        nonce: n.nonce
      }, {
        default: h(() => [
          ye(" /* Hide scrollbars cross-browser and enable momentum scroll for touch devices */ [data-radix-combobox-viewport] { scrollbar-width:none; -ms-overflow-style: none; -webkit-overflow-scrolling: touch; } [data-radix-combobox-viewport]::-webkit-scrollbar { display: none; } ")
        ]),
        _: 1
      }, 8, ["nonce"])
    ], 64));
  }
}), [Du, $u] = Q("ComboboxItem"), Bu = "combobox.select", Yp = /* @__PURE__ */ w({
  __name: "ComboboxItem",
  props: {
    value: {},
    disabled: { type: Boolean },
    asChild: { type: Boolean },
    as: {}
  },
  emits: ["select"],
  setup(a, { emit: t }) {
    const e = a, n = t, { disabled: l } = le(e), s = Qe();
    Sl({ id: "", options: B([]) });
    const { forwardRef: r } = I(), i = T(
      () => {
        var y, m;
        return s.multiple.value && Array.isArray(s.modelValue.value) ? (y = s.modelValue.value) == null ? void 0 : y.some((S) => Xe(S, e.value)) : Xe((m = s.modelValue) == null ? void 0 : m.value, e.value);
      }
    ), u = T(() => Xe(s.selectedValue.value, e.value)), d = me(void 0, "radix-vue-combobox-item"), c = T(() => s.isUserInputted.value ? s.searchTerm.value === "" || !!s.filteredOptions.value.find((y) => Xe(y, e.value)) : !0);
    async function f(y) {
      n("select", y), !(y != null && y.defaultPrevented) && !l.value && y && s.onValueChange(e.value);
    }
    function p(y) {
      if (!y)
        return;
      const m = { originalEvent: y, value: e.value };
      $a(Bu, f, m);
    }
    async function v(y) {
      await re(), !y.defaultPrevented && s.onSelectedValueChange(e.value);
    }
    if (e.value === "")
      throw new Error(
        "A <SelectItem /> must have a value prop that is not an empty string. This is because the Select value can be set to an empty string to clear the selection and show the placeholder."
      );
    return $u({
      isSelected: i
    }), (y, m) => (b(), _(o(Ma), null, {
      default: h(() => [
        Ea(G(o(A), {
          ref: o(r),
          role: "option",
          tabindex: "-1",
          "aria-labelledby": o(d),
          "data-highlighted": u.value ? "" : void 0,
          "aria-selected": i.value,
          "data-state": i.value ? "checked" : "unchecked",
          "aria-disabled": o(l) || void 0,
          "data-disabled": o(l) ? "" : void 0,
          as: y.as,
          "as-child": y.asChild,
          "data-hidden": c.value ? void 0 : !0,
          onClick: p,
          onPointermove: v
        }, {
          default: h(() => [
            C(y.$slots, "default", {}, () => [
              ye(ke(y.value), 1)
            ])
          ]),
          _: 3
        }, 8, ["aria-labelledby", "data-highlighted", "aria-selected", "data-state", "aria-disabled", "data-disabled", "as", "as-child", "data-hidden"]), [
          [Sn, c.value]
        ])
      ]),
      _: 3
    }));
  }
}), Xp = /* @__PURE__ */ w({
  __name: "ComboboxItemIndicator",
  props: {
    asChild: { type: Boolean },
    as: { default: "span" }
  },
  setup(a) {
    const t = a;
    I();
    const e = Du();
    return (n, l) => o(e).isSelected.value ? (b(), _(o(A), k({
      key: 0,
      "aria-hidden": ""
    }, t), {
      default: h(() => [
        C(n.$slots, "default")
      ]),
      _: 3
    }, 16)) : ue("", !0);
  }
}), Zp = /* @__PURE__ */ w({
  __name: "ComboboxSeparator",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    return I(), (e, n) => (b(), _(o(A), k(t, { "aria-hidden": "" }), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), Jp = /* @__PURE__ */ w({
  __name: "ComboboxArrow",
  props: {
    width: { default: 10 },
    height: { default: 5 },
    asChild: { type: Boolean },
    as: { default: "svg" }
  },
  setup(a) {
    const t = a, e = Qe(), n = Su();
    return I(), (l, s) => o(e).open.value && o(n).position.value === "popper" ? (b(), _(o(Lt), z(k({ key: 0 }, t)), {
      default: h(() => [
        C(l.$slots, "default")
      ]),
      _: 3
    }, 16)) : ue("", !0);
  }
}), Qp = /* @__PURE__ */ w({
  __name: "ComboboxPortal",
  props: {
    to: {},
    disabled: { type: Boolean },
    forceMount: { type: Boolean }
  },
  setup(a) {
    const t = a;
    return (e, n) => (b(), _(o(pt), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), Va = /* @__PURE__ */ w({
  __name: "MenuAnchor",
  props: {
    element: {},
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    return (e, n) => (b(), _(o(St), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), Wn = /* @__PURE__ */ w({
  __name: "MenuArrow",
  props: {
    width: {},
    height: {},
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    return (e, n) => (b(), _(o(Lt), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), [Pt, Pl] = Q(["MenuRoot", "MenuSub"], "MenuContext"), [ia, Tu] = Q("MenuRoot"), jn = /* @__PURE__ */ w({
  __name: "MenuRoot",
  props: {
    open: { type: Boolean, default: !1 },
    dir: {},
    modal: { type: Boolean, default: !0 }
  },
  emits: ["update:open"],
  setup(a, { emit: t }) {
    const e = a, n = t, { modal: l, dir: s } = le(e), r = be(s), i = ne(e, "open", n), u = B(), d = B(!1);
    return ve((c) => {
      if (!Je)
        return;
      const f = () => {
        d.value = !0, document.addEventListener("pointerdown", p, {
          capture: !0,
          once: !0
        }), document.addEventListener("pointermove", p, {
          capture: !0,
          once: !0
        });
      }, p = () => d.value = !1;
      document.addEventListener("keydown", f, { capture: !0 }), c(() => {
        document.removeEventListener("keydown", f, { capture: !0 }), document.removeEventListener("pointerdown", p, {
          capture: !0
        }), document.removeEventListener("pointermove", p, {
          capture: !0
        });
      });
    }), Pl({
      open: i,
      onOpenChange: (c) => {
        i.value = c;
      },
      content: u,
      onContentChange: (c) => {
        u.value = c;
      }
    }), Tu({
      onClose: () => {
        i.value = !1;
      },
      isUsingKeyboardRef: d,
      dir: r,
      modal: l
    }), (c, f) => (b(), _(o(xt), null, {
      default: h(() => [
        C(c.$slots, "default")
      ]),
      _: 3
    }));
  }
}), Iu = "rovingFocusGroup.onEntryFocus", Ru = { bubbles: !1, cancelable: !0 }, El = {
  ArrowLeft: "prev",
  ArrowUp: "prev",
  ArrowRight: "next",
  ArrowDown: "next",
  PageUp: "first",
  Home: "first",
  PageDown: "last",
  End: "last"
};
function Au(a, t) {
  return t !== "rtl" ? a : a === "ArrowLeft" ? "ArrowRight" : a === "ArrowRight" ? "ArrowLeft" : a;
}
function Dl(a, t, e) {
  const n = Au(a.key, e);
  if (!(t === "vertical" && ["ArrowLeft", "ArrowRight"].includes(n)) && !(t === "horizontal" && ["ArrowUp", "ArrowDown"].includes(n)))
    return El[n];
}
function $l(a) {
  const t = document.activeElement;
  for (const e of a)
    if (e === t || (e.focus(), document.activeElement !== t))
      return;
}
function Ou(a, t) {
  return a.map((e, n) => a[(t + n) % a.length]);
}
const [ku, Mu] = Q("RovingFocusGroup"), zt = /* @__PURE__ */ w({
  __name: "RovingFocusGroup",
  props: {
    orientation: { default: void 0 },
    dir: {},
    loop: { type: Boolean, default: !1 },
    currentTabStopId: {},
    defaultCurrentTabStopId: {},
    asChild: { type: Boolean },
    as: {}
  },
  emits: ["entryFocus", "update:currentTabStopId"],
  setup(a, { emit: t }) {
    const e = a, n = t, { loop: l, orientation: s, dir: r } = le(e), i = be(r), u = ne(e, "currentTabStopId", n, {
      defaultValue: e.defaultCurrentTabStopId,
      passive: e.currentTabStopId === void 0
    }), d = B(!1), c = B(!1), f = B(0), { forwardRef: p, currentElement: v } = I(), { createCollection: y } = Re("rovingFocus"), m = y(v);
    function S(P) {
      const D = !c.value;
      if (P.currentTarget && P.target === P.currentTarget && D && !d.value) {
        const g = new CustomEvent(Iu, Ru);
        if (P.currentTarget.dispatchEvent(g), n("entryFocus", g), !g.defaultPrevented) {
          const x = m.value, E = x.find((M) => M.getAttribute("data-active") === "true"), $ = x.find(
            (M) => M.id === u.value
          ), R = [E, $, ...x].filter(
            Boolean
          );
          $l(R);
        }
      }
      c.value = !1;
    }
    return Mu({
      loop: l,
      dir: i,
      orientation: s,
      currentTabStopId: u,
      onItemFocus: (P) => {
        u.value = P;
      },
      onItemShiftTab: () => {
        d.value = !0;
      },
      onFocusableItemAdd: () => {
        f.value++;
      },
      onFocusableItemRemove: () => {
        f.value--;
      }
    }), (P, D) => (b(), _(o(A), {
      ref: o(p),
      tabindex: d.value || f.value === 0 ? -1 : 0,
      "data-orientation": o(s),
      as: P.as,
      "as-child": P.asChild,
      dir: o(i),
      style: { outline: "none" },
      onMousedown: D[0] || (D[0] = (g) => c.value = !0),
      onFocus: S,
      onBlur: D[1] || (D[1] = (g) => d.value = !1)
    }, {
      default: h(() => [
        C(P.$slots, "default")
      ]),
      _: 3
    }, 8, ["tabindex", "data-orientation", "as", "as-child", "dir"]));
  }
}), Kt = /* @__PURE__ */ w({
  __name: "RovingFocusItem",
  props: {
    tabStopId: {},
    focusable: { type: Boolean, default: !0 },
    active: { type: Boolean, default: !0 },
    asChild: { type: Boolean },
    as: { default: "span" }
  },
  setup(a) {
    const t = a, e = ku(), n = T(() => t.tabStopId || me()), l = T(
      () => e.currentTabStopId.value === n.value
    ), { injectCollection: s } = Re("rovingFocus"), r = s();
    se(() => {
      t.focusable && e.onFocusableItemAdd();
    }), Te(() => {
      t.focusable && e.onFocusableItemRemove();
    });
    function i(u) {
      if (u.key === "Tab" && u.shiftKey) {
        e.onItemShiftTab();
        return;
      }
      if (u.target !== u.currentTarget)
        return;
      const d = Dl(
        u,
        e.orientation.value,
        e.dir.value
      );
      if (d !== void 0) {
        if (u.metaKey || u.ctrlKey || u.altKey || u.shiftKey)
          return;
        u.preventDefault();
        let c = [...r.value];
        if (d === "last")
          c.reverse();
        else if (d === "prev" || d === "next") {
          d === "prev" && c.reverse();
          const f = c.indexOf(
            u.currentTarget
          );
          c = e.loop.value ? Ou(c, f + 1) : c.slice(f + 1);
        }
        re(() => $l(c));
      }
    }
    return (u, d) => (b(), _(o(A), {
      "data-radix-vue-collection-item": "",
      tabindex: l.value ? 0 : -1,
      "data-orientation": o(e).orientation.value,
      "data-active": u.active,
      "data-disabled": !u.focusable || void 0,
      as: u.as,
      "as-child": u.asChild,
      onMousedown: d[0] || (d[0] = (c) => {
        u.focusable ? o(e).onItemFocus(n.value) : c.preventDefault();
      }),
      onFocus: d[1] || (d[1] = (c) => o(e).onItemFocus(n.value)),
      onKeydown: i
    }, {
      default: h(() => [
        C(u.$slots, "default")
      ]),
      _: 3
    }, 8, ["tabindex", "data-orientation", "data-active", "data-disabled", "as", "as-child"]));
  }
}), [Un, Vu] = Q("MenuContent"), Gn = /* @__PURE__ */ w({
  __name: "MenuContentImpl",
  props: /* @__PURE__ */ qo({
    loop: { type: Boolean },
    disableOutsidePointerEvents: { type: Boolean },
    disableOutsideScroll: { type: Boolean },
    trapFocus: { type: Boolean },
    side: {},
    sideOffset: {},
    align: {},
    alignOffset: {},
    avoidCollisions: { type: Boolean },
    collisionBoundary: {},
    collisionPadding: {},
    arrowPadding: {},
    sticky: {},
    hideWhenDetached: { type: Boolean },
    updatePositionStrategy: {},
    prioritizePosition: { type: Boolean },
    asChild: { type: Boolean },
    as: {}
  }, {
    ...xl
  }),
  emits: ["escapeKeyDown", "pointerDownOutside", "focusOutside", "interactOutside", "entryFocus", "openAutoFocus", "closeAutoFocus", "dismiss"],
  setup(a, { emit: t }) {
    const e = a, n = t, l = Pt(), s = ia(), { trapFocus: r, disableOutsidePointerEvents: i, loop: u } = le(e);
    On(), sa(i.value);
    const d = B(""), c = B(0), f = B(0), p = B(null), v = B("right"), y = B(0), m = B(null), { createCollection: S } = Re(), { forwardRef: P, currentElement: D } = I(), g = S(D);
    ee(D, (O) => {
      l.onContentChange(O);
    });
    const { handleTypeaheadSearch: x } = Ia(g);
    Te(() => {
      window.clearTimeout(c.value);
    });
    function E(O) {
      var j, J;
      return v.value === ((j = p.value) == null ? void 0 : j.side) && Ri(O, (J = p.value) == null ? void 0 : J.area);
    }
    async function $(O) {
      var L;
      n("openAutoFocus", O), !O.defaultPrevented && (O.preventDefault(), (L = D.value) == null || L.focus());
    }
    function R(O) {
      if (O.defaultPrevented)
        return;
      const j = O.target.closest("[data-radix-menu-content]") === O.currentTarget, J = O.ctrlKey || O.altKey || O.metaKey, W = O.key.length === 1, X = Vt(
        O,
        document.activeElement,
        D.value,
        {
          loop: u.value,
          arrowKeyOptions: "vertical",
          dir: s == null ? void 0 : s.dir.value,
          focus: !0,
          attributeName: "[data-radix-vue-collection-item]:not([data-disabled])"
        }
      );
      if (X)
        return X == null ? void 0 : X.focus();
      if (O.code === "Space" || (j && (O.key === "Tab" && O.preventDefault(), !J && W && x(O.key)), O.target !== D.value) || !$i.includes(O.key))
        return;
      O.preventDefault();
      const N = g.value;
      hl.includes(O.key) && N.reverse(), mn(N);
    }
    function M(O) {
      var L, j;
      (j = (L = O == null ? void 0 : O.currentTarget) == null ? void 0 : L.contains) != null && j.call(L, O.target) || (window.clearTimeout(c.value), d.value = "");
    }
    function V(O) {
      var J;
      if (!Qt(O))
        return;
      const L = O.target, j = y.value !== O.clientX;
      if ((J = O == null ? void 0 : O.currentTarget) != null && J.contains(L) && j) {
        const W = O.clientX > y.value ? "right" : "left";
        v.value = W, y.value = O.clientX;
      }
    }
    return Vu({
      onItemEnter: (O) => !!E(O),
      onItemLeave: (O) => {
        var L;
        E(O) || ((L = D.value) == null || L.focus(), m.value = null);
      },
      onTriggerLeave: (O) => !!E(O),
      searchRef: d,
      pointerGraceTimerRef: f,
      onPointerGraceIntentChange: (O) => {
        p.value = O;
      }
    }), (O, L) => (b(), _(o(Aa), {
      "as-child": "",
      trapped: o(r),
      onMountAutoFocus: $,
      onUnmountAutoFocus: L[7] || (L[7] = (j) => n("closeAutoFocus", j))
    }, {
      default: h(() => [
        G(o(vt), {
          "as-child": "",
          "disable-outside-pointer-events": o(i),
          onEscapeKeyDown: L[2] || (L[2] = (j) => n("escapeKeyDown", j)),
          onPointerDownOutside: L[3] || (L[3] = (j) => n("pointerDownOutside", j)),
          onFocusOutside: L[4] || (L[4] = (j) => n("focusOutside", j)),
          onInteractOutside: L[5] || (L[5] = (j) => n("interactOutside", j)),
          onDismiss: L[6] || (L[6] = (j) => n("dismiss"))
        }, {
          default: h(() => [
            G(o(zt), {
              "current-tab-stop-id": m.value,
              "onUpdate:currentTabStopId": L[0] || (L[0] = (j) => m.value = j),
              "as-child": "",
              orientation: "vertical",
              dir: o(s).dir.value,
              loop: o(u),
              onEntryFocus: L[1] || (L[1] = (j) => {
                n("entryFocus", j), o(s).isUsingKeyboardRef.value || j.preventDefault();
              })
            }, {
              default: h(() => [
                G(o(Ct), {
                  ref: o(P),
                  role: "menu",
                  as: O.as,
                  "as-child": O.asChild,
                  "aria-orientation": "vertical",
                  "data-radix-menu-content": "",
                  "data-state": o(Ln)(o(l).open.value),
                  dir: o(s).dir.value,
                  side: O.side,
                  "side-offset": O.sideOffset,
                  align: O.align,
                  "align-offset": O.alignOffset,
                  "avoid-collisions": O.avoidCollisions,
                  "collision-boundary": O.collisionBoundary,
                  "collision-padding": O.collisionPadding,
                  "arrow-padding": O.arrowPadding,
                  "prioritize-position": O.prioritizePosition,
                  sticky: O.sticky,
                  "hide-when-detached": O.hideWhenDetached,
                  onKeydown: R,
                  onBlur: M,
                  onPointermove: V
                }, {
                  default: h(() => [
                    C(O.$slots, "default")
                  ]),
                  _: 3
                }, 8, ["as", "as-child", "data-state", "dir", "side", "side-offset", "align", "align-offset", "avoid-collisions", "collision-boundary", "collision-padding", "arrow-padding", "prioritize-position", "sticky", "hide-when-detached"])
              ]),
              _: 3
            }, 8, ["current-tab-stop-id", "dir", "loop"])
          ]),
          _: 3
        }, 8, ["disable-outside-pointer-events"])
      ]),
      _: 3
    }, 8, ["trapped"]));
  }
}), Bl = /* @__PURE__ */ w({
  __name: "MenuItemImpl",
  props: {
    disabled: { type: Boolean },
    textValue: {},
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a, e = Un(), n = B(!1);
    async function l(r) {
      if (!r.defaultPrevented && Qt(r)) {
        if (t.disabled)
          e.onItemLeave(r);
        else if (!e.onItemEnter(r)) {
          const u = r.currentTarget;
          u == null || u.focus();
        }
      }
    }
    async function s(r) {
      await re(), !r.defaultPrevented && Qt(r) && e.onItemLeave(r);
    }
    return (r, i) => (b(), _(o(A), {
      role: "menuitem",
      tabindex: "-1",
      as: r.as,
      "as-child": r.asChild,
      "data-radix-vue-collection-item": "",
      "aria-disabled": r.disabled || void 0,
      "data-disabled": r.disabled ? "" : void 0,
      "data-highlighted": n.value ? "" : void 0,
      onPointermove: l,
      onPointerleave: s,
      onFocus: i[0] || (i[0] = async (u) => {
        await re(), !(u.defaultPrevented || r.disabled) && (n.value = !0);
      }),
      onBlur: i[1] || (i[1] = async (u) => {
        await re(), !u.defaultPrevented && (n.value = !1);
      })
    }, {
      default: h(() => [
        C(r.$slots, "default")
      ]),
      _: 3
    }, 8, ["as", "as-child", "aria-disabled", "data-disabled", "data-highlighted"]));
  }
}), ua = /* @__PURE__ */ w({
  __name: "MenuItem",
  props: {
    disabled: { type: Boolean },
    textValue: {},
    asChild: { type: Boolean },
    as: {}
  },
  emits: ["select"],
  setup(a, { emit: t }) {
    const e = a, n = t, { forwardRef: l, currentElement: s } = I(), r = ia(), i = Un(), u = B(!1);
    async function d() {
      const c = s.value;
      if (!e.disabled && c) {
        const f = new CustomEvent(Ei, {
          bubbles: !0,
          cancelable: !0
        });
        n("select", f), await re(), f.defaultPrevented ? u.value = !1 : r.onClose();
      }
    }
    return (c, f) => (b(), _(Bl, k(e, {
      ref: o(l),
      onClick: d,
      onPointerdown: f[0] || (f[0] = () => {
        u.value = !0;
      }),
      onPointerup: f[1] || (f[1] = async (p) => {
        var v;
        await re(), !p.defaultPrevented && (u.value || (v = p.currentTarget) == null || v.click());
      }),
      onKeydown: f[2] || (f[2] = async (p) => {
        const v = o(i).searchRef.value !== "";
        c.disabled || v && p.key === " " || o(vn).includes(p.key) && (p.currentTarget.click(), p.preventDefault());
      })
    }), {
      default: h(() => [
        C(c.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), [Fu, Tl] = Q(
  ["MenuCheckboxItem", "MenuRadioItem"],
  "MenuItemIndicatorContext"
), qn = /* @__PURE__ */ w({
  __name: "MenuItemIndicator",
  props: {
    forceMount: { type: Boolean },
    asChild: { type: Boolean },
    as: { default: "span" }
  },
  setup(a) {
    const t = Fu({
      checked: B(!1)
    });
    return (e, n) => (b(), _(o(Ee), {
      present: e.forceMount || o(_a)(o(t).checked.value) || o(t).checked.value === !0
    }, {
      default: h(() => [
        G(o(A), {
          as: e.as,
          "as-child": e.asChild,
          "data-state": o(Nn)(o(t).checked.value)
        }, {
          default: h(() => [
            C(e.$slots, "default")
          ]),
          _: 3
        }, 8, ["as", "as-child", "data-state"])
      ]),
      _: 3
    }, 8, ["present"]));
  }
}), Yn = /* @__PURE__ */ w({
  __name: "MenuCheckboxItem",
  props: {
    checked: { type: [Boolean, String], default: !1 },
    disabled: { type: Boolean },
    textValue: {},
    asChild: { type: Boolean },
    as: {}
  },
  emits: ["select", "update:checked"],
  setup(a, { emit: t }) {
    const e = a, n = t, l = ne(e, "checked", n);
    return Tl({ checked: l }), (s, r) => (b(), _(ua, k({ role: "menuitemcheckbox" }, e, {
      "aria-checked": o(_a)(o(l)) ? "mixed" : o(l),
      "data-state": o(Nn)(o(l)),
      onSelect: r[0] || (r[0] = async (i) => {
        n("select", i), o(_a)(o(l)) ? l.value = !0 : l.value = !o(l);
      })
    }), {
      default: h(() => [
        C(s.$slots, "default")
      ]),
      _: 3
    }, 16, ["aria-checked", "data-state"]));
  }
}), Lu = /* @__PURE__ */ w({
  __name: "MenuRootContentModal",
  props: {
    loop: { type: Boolean },
    side: {},
    sideOffset: {},
    align: {},
    alignOffset: {},
    avoidCollisions: { type: Boolean },
    collisionBoundary: {},
    collisionPadding: {},
    arrowPadding: {},
    sticky: {},
    hideWhenDetached: { type: Boolean },
    updatePositionStrategy: {},
    prioritizePosition: { type: Boolean },
    asChild: { type: Boolean },
    as: {}
  },
  emits: ["escapeKeyDown", "pointerDownOutside", "focusOutside", "interactOutside", "entryFocus", "openAutoFocus", "closeAutoFocus"],
  setup(a, { emit: t }) {
    const e = a, n = t, l = _e(e, n), s = Pt(), { forwardRef: r, currentElement: i } = I();
    return ra(i), (u, d) => (b(), _(Gn, k(o(l), {
      ref: o(r),
      "trap-focus": o(s).open.value,
      "disable-outside-pointer-events": o(s).open.value,
      "disable-outside-scroll": !0,
      onDismiss: d[0] || (d[0] = (c) => o(s).onOpenChange(!1)),
      onFocusOutside: d[1] || (d[1] = ge((c) => n("focusOutside", c), ["prevent"]))
    }), {
      default: h(() => [
        C(u.$slots, "default")
      ]),
      _: 3
    }, 16, ["trap-focus", "disable-outside-pointer-events"]));
  }
}), Nu = /* @__PURE__ */ w({
  __name: "MenuRootContentNonModal",
  props: {
    loop: { type: Boolean },
    side: {},
    sideOffset: {},
    align: {},
    alignOffset: {},
    avoidCollisions: { type: Boolean },
    collisionBoundary: {},
    collisionPadding: {},
    arrowPadding: {},
    sticky: {},
    hideWhenDetached: { type: Boolean },
    updatePositionStrategy: {},
    prioritizePosition: { type: Boolean },
    asChild: { type: Boolean },
    as: {}
  },
  emits: ["escapeKeyDown", "pointerDownOutside", "focusOutside", "interactOutside", "entryFocus", "openAutoFocus", "closeAutoFocus"],
  setup(a, { emit: t }) {
    const l = _e(a, t), s = Pt();
    return (r, i) => (b(), _(Gn, k(o(l), {
      "trap-focus": !1,
      "disable-outside-pointer-events": !1,
      "disable-outside-scroll": !1,
      onDismiss: i[0] || (i[0] = (u) => o(s).onOpenChange(!1))
    }), {
      default: h(() => [
        C(r.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), Xn = /* @__PURE__ */ w({
  __name: "MenuContent",
  props: {
    forceMount: { type: Boolean },
    loop: { type: Boolean },
    side: {},
    sideOffset: {},
    align: {},
    alignOffset: {},
    avoidCollisions: { type: Boolean },
    collisionBoundary: {},
    collisionPadding: {},
    arrowPadding: {},
    sticky: {},
    hideWhenDetached: { type: Boolean },
    updatePositionStrategy: {},
    prioritizePosition: { type: Boolean },
    asChild: { type: Boolean },
    as: {}
  },
  emits: ["escapeKeyDown", "pointerDownOutside", "focusOutside", "interactOutside", "entryFocus", "openAutoFocus", "closeAutoFocus"],
  setup(a, { emit: t }) {
    const l = _e(a, t), s = Pt(), r = ia();
    return (i, u) => (b(), _(o(Ee), {
      present: i.forceMount || o(s).open.value
    }, {
      default: h(() => [
        o(r).modal.value ? (b(), _(Lu, z(k({ key: 0 }, { ...i.$attrs, ...o(l) })), {
          default: h(() => [
            C(i.$slots, "default")
          ]),
          _: 3
        }, 16)) : (b(), _(Nu, z(k({ key: 1 }, { ...i.$attrs, ...o(l) })), {
          default: h(() => [
            C(i.$slots, "default")
          ]),
          _: 3
        }, 16))
      ]),
      _: 3
    }, 8, ["present"]));
  }
}), Fa = /* @__PURE__ */ w({
  __name: "MenuGroup",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    return (e, n) => (b(), _(o(A), k({ role: "group" }, t), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), Zn = /* @__PURE__ */ w({
  __name: "MenuLabel",
  props: {
    asChild: { type: Boolean },
    as: { default: "div" }
  },
  setup(a) {
    const t = a;
    return (e, n) => (b(), _(o(A), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), Jn = /* @__PURE__ */ w({
  __name: "MenuPortal",
  props: {
    to: {},
    disabled: { type: Boolean },
    forceMount: { type: Boolean }
  },
  setup(a) {
    const t = a;
    return (e, n) => (b(), _(o(pt), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), [zu, Ku] = Q("MenuRadioGroup"), Qn = /* @__PURE__ */ w({
  __name: "MenuRadioGroup",
  props: {
    modelValue: { default: "" },
    asChild: { type: Boolean },
    as: {}
  },
  emits: ["update:modelValue"],
  setup(a, { emit: t }) {
    const e = a, l = ne(e, "modelValue", t);
    return Ku({
      modelValue: l,
      onValueChange: (s) => {
        l.value = s;
      }
    }), (s, r) => (b(), _(Fa, z(K(e)), {
      default: h(() => [
        C(s.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), eo = /* @__PURE__ */ w({
  __name: "MenuRadioItem",
  props: {
    value: {},
    disabled: { type: Boolean },
    textValue: {},
    asChild: { type: Boolean },
    as: {}
  },
  emits: ["select"],
  setup(a, { emit: t }) {
    const e = a, n = t, { value: l } = le(e), s = zu(), r = T(
      () => s.modelValue.value === (l == null ? void 0 : l.value)
    );
    return Tl({ checked: r }), (i, u) => (b(), _(ua, k({ role: "menuitemradio" }, e, {
      "aria-checked": r.value,
      "data-state": o(Nn)(r.value),
      onSelect: u[0] || (u[0] = async (d) => {
        n("select", d), o(s).onValueChange(o(l));
      })
    }), {
      default: h(() => [
        C(i.$slots, "default")
      ]),
      _: 3
    }, 16, ["aria-checked", "data-state"]));
  }
}), to = /* @__PURE__ */ w({
  __name: "MenuSeparator",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    return (e, n) => (b(), _(o(A), k(t, {
      role: "separator",
      "aria-orientation": "horizontal"
    }), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), [Il, Hu] = Q("MenuSub"), ao = /* @__PURE__ */ w({
  __name: "MenuSub",
  props: {
    open: { type: Boolean, default: void 0 }
  },
  emits: ["update:open"],
  setup(a, { emit: t }) {
    const e = a, l = ne(e, "open", t, {
      defaultValue: !1,
      passive: e.open === void 0
    }), s = Pt(), r = B(), i = B();
    return ve((u) => {
      (s == null ? void 0 : s.open.value) === !1 && (l.value = !1), u(() => l.value = !1);
    }), Pl({
      open: l,
      onOpenChange: (u) => {
        l.value = u;
      },
      content: i,
      onContentChange: (u) => {
        i.value = u;
      }
    }), Hu({
      triggerId: "",
      contentId: "",
      trigger: r,
      onTriggerChange: (u) => {
        r.value = u;
      }
    }), (u, d) => (b(), _(o(xt), null, {
      default: h(() => [
        C(u.$slots, "default")
      ]),
      _: 3
    }));
  }
}), no = /* @__PURE__ */ w({
  __name: "MenuSubContent",
  props: {
    forceMount: { type: Boolean },
    loop: { type: Boolean },
    sideOffset: {},
    alignOffset: {},
    avoidCollisions: { type: Boolean },
    collisionBoundary: {},
    collisionPadding: {},
    arrowPadding: {},
    sticky: {},
    hideWhenDetached: { type: Boolean },
    updatePositionStrategy: {},
    prioritizePosition: { type: Boolean, default: !0 },
    asChild: { type: Boolean },
    as: {}
  },
  emits: ["escapeKeyDown", "pointerDownOutside", "focusOutside", "interactOutside", "entryFocus", "openAutoFocus", "closeAutoFocus"],
  setup(a, { emit: t }) {
    const l = _e(a, t), s = Pt(), r = ia(), i = Il(), { forwardRef: u, currentElement: d } = I();
    return i.contentId || (i.contentId = me(void 0, "radix-vue-menu-sub-content")), (c, f) => (b(), _(o(Ee), {
      present: c.forceMount || o(s).open.value
    }, {
      default: h(() => [
        G(Gn, k(o(l), {
          id: o(i).contentId,
          ref: o(u),
          "aria-labelledby": o(i).triggerId,
          align: "start",
          side: o(r).dir.value === "rtl" ? "left" : "right",
          "disable-outside-pointer-events": !1,
          "disable-outside-scroll": !1,
          "trap-focus": !1,
          onOpenAutoFocus: f[0] || (f[0] = ge((p) => {
            var v;
            o(r).isUsingKeyboardRef.value && ((v = o(d)) == null || v.focus());
          }, ["prevent"])),
          onCloseAutoFocus: f[1] || (f[1] = ge(() => {
          }, ["prevent"])),
          onFocusOutside: f[2] || (f[2] = (p) => {
            p.defaultPrevented || p.target !== o(i).trigger.value && o(s).onOpenChange(!1);
          }),
          onEscapeKeyDown: f[3] || (f[3] = (p) => {
            o(r).onClose(), p.preventDefault();
          }),
          onKeydown: f[4] || (f[4] = (p) => {
            var m, S;
            const v = (m = p.currentTarget) == null ? void 0 : m.contains(p.target), y = o(Ti)[o(r).dir.value].includes(p.key);
            v && y && (o(s).onOpenChange(!1), (S = o(i).trigger.value) == null || S.focus(), p.preventDefault());
          })
        }), {
          default: h(() => [
            C(c.$slots, "default")
          ]),
          _: 3
        }, 16, ["id", "aria-labelledby", "side"])
      ]),
      _: 3
    }, 8, ["present"]));
  }
}), oo = /* @__PURE__ */ w({
  __name: "MenuSubTrigger",
  props: {
    disabled: { type: Boolean },
    textValue: {},
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a, e = Pt(), n = ia(), l = Il(), s = Un(), r = B(null);
    l.triggerId || (l.triggerId = me(void 0, "radix-vue-menu-sub-trigger"));
    function i() {
      r.value && window.clearTimeout(r.value), r.value = null;
    }
    Te(() => {
      i();
    });
    function u(f) {
      !Qt(f) || s.onItemEnter(f) || !t.disabled && !e.open.value && !r.value && (s.onPointerGraceIntentChange(null), r.value = window.setTimeout(() => {
        e.onOpenChange(!0), i();
      }, 100));
    }
    async function d(f) {
      var v, y;
      if (!Qt(f))
        return;
      i();
      const p = (v = e.content.value) == null ? void 0 : v.getBoundingClientRect();
      if (p != null && p.width) {
        const m = (y = e.content.value) == null ? void 0 : y.dataset.side, S = m === "right", P = S ? -5 : 5, D = p[S ? "left" : "right"], g = p[S ? "right" : "left"];
        s.onPointerGraceIntentChange({
          area: [
            // Apply a bleed on clientX to ensure that our exit point is
            // consistently within polygon bounds
            { x: f.clientX + P, y: f.clientY },
            { x: D, y: p.top },
            { x: g, y: p.top },
            { x: g, y: p.bottom },
            { x: D, y: p.bottom }
          ],
          side: m
        }), window.clearTimeout(s.pointerGraceTimerRef.value), s.pointerGraceTimerRef.value = window.setTimeout(
          () => s.onPointerGraceIntentChange(null),
          300
        );
      } else {
        if (s.onTriggerLeave(f))
          return;
        s.onPointerGraceIntentChange(null);
      }
    }
    async function c(f) {
      var v;
      const p = s.searchRef.value !== "";
      t.disabled || p && f.key === " " || Bi[n.dir.value].includes(f.key) && (e.onOpenChange(!0), await re(), (v = e.content.value) == null || v.focus(), f.preventDefault());
    }
    return (f, p) => (b(), _(Va, { "as-child": "" }, {
      default: h(() => [
        G(Bl, k(t, {
          id: o(l).triggerId,
          ref: (v) => {
            var y;
            (y = o(l)) == null || y.onTriggerChange(v == null ? void 0 : v.$el);
          },
          "aria-haspopup": "menu",
          "aria-expanded": o(e).open.value,
          "aria-controls": o(l).contentId,
          "data-state": o(Ln)(o(e).open.value),
          onClick: p[0] || (p[0] = async (v) => {
            t.disabled || v.defaultPrevented || (v.currentTarget.focus(), o(e).open.value || o(e).onOpenChange(!0));
          }),
          onPointermove: u,
          onPointerleave: d,
          onKeydown: c
        }), {
          default: h(() => [
            C(f.$slots, "default")
          ]),
          _: 3
        }, 16, ["id", "aria-expanded", "aria-controls", "data-state"])
      ]),
      _: 3
    }));
  }
}), [Rl, Wu] = Q("ContextMenuRoot"), ev = /* @__PURE__ */ w({
  inheritAttrs: !1,
  __name: "ContextMenuRoot",
  props: {
    dir: {},
    modal: { type: Boolean, default: !0 }
  },
  emits: ["update:open"],
  setup(a, { emit: t }) {
    const e = a, n = t, { dir: l, modal: s } = le(e);
    I();
    const r = be(l), i = B(!1);
    return Wu({
      open: i,
      onOpenChange: (u) => {
        i.value = u;
      },
      dir: r,
      modal: s
    }), ee(i, (u) => {
      n("update:open", u);
    }), (u, d) => (b(), _(o(jn), {
      open: i.value,
      "onUpdate:open": d[0] || (d[0] = (c) => i.value = c),
      dir: o(r),
      modal: o(s)
    }, {
      default: h(() => [
        C(u.$slots, "default")
      ]),
      _: 3
    }, 8, ["open", "dir", "modal"]));
  }
});
function To(a) {
  return a.pointerType !== "mouse";
}
const tv = /* @__PURE__ */ w({
  inheritAttrs: !1,
  __name: "ContextMenuTrigger",
  props: {
    disabled: { type: Boolean, default: !1 },
    asChild: { type: Boolean },
    as: { default: "span" }
  },
  setup(a) {
    const t = a, { disabled: e } = le(t), { forwardRef: n } = I(), l = Rl(), s = B({ x: 0, y: 0 }), r = T(() => ({
      getBoundingClientRect: () => ({
        width: 0,
        height: 0,
        left: s.value.x,
        right: s.value.x,
        top: s.value.y,
        bottom: s.value.y,
        ...s.value
      })
    })), i = B(0);
    function u() {
      window.clearTimeout(i.value);
    }
    function d(v) {
      s.value = { x: v.clientX, y: v.clientY }, l.onOpenChange(!0);
    }
    async function c(v) {
      e.value || (await re(), v.defaultPrevented || (u(), d(v), v.preventDefault()));
    }
    async function f(v) {
      e.value || (await re(), To(v) && !v.defaultPrevented && (u(), i.value = window.setTimeout(() => d(v), 700)));
    }
    async function p(v) {
      e.value || (await re(), To(v) && !v.defaultPrevented && u());
    }
    return (v, y) => (b(), fe(Pe, null, [
      G(o(Va), {
        as: "template",
        element: r.value
      }, null, 8, ["element"]),
      G(o(A), k({
        ref: o(n),
        as: v.as,
        "as-child": v.asChild,
        "data-state": o(l).open.value ? "open" : "closed",
        "data-disabled": o(e) ? "" : void 0,
        style: {
          WebkitTouchCallout: "none"
        }
      }, v.$attrs, {
        onContextmenu: c,
        onPointerdown: f,
        onPointermove: p,
        onPointercancel: p,
        onPointerup: p
      }), {
        default: h(() => [
          C(v.$slots, "default")
        ]),
        _: 3
      }, 16, ["as", "as-child", "data-state", "data-disabled"])
    ], 64));
  }
}), av = /* @__PURE__ */ w({
  __name: "ContextMenuPortal",
  props: {
    to: {},
    disabled: { type: Boolean },
    forceMount: { type: Boolean }
  },
  setup(a) {
    const t = a;
    return (e, n) => (b(), _(o(Jn), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), nv = /* @__PURE__ */ w({
  __name: "ContextMenuContent",
  props: {
    forceMount: { type: Boolean },
    loop: { type: Boolean },
    alignOffset: { default: 0 },
    avoidCollisions: { type: Boolean, default: !0 },
    collisionBoundary: { default: () => [] },
    collisionPadding: { default: 0 },
    sticky: { default: "partial" },
    hideWhenDetached: { type: Boolean, default: !1 },
    prioritizePosition: { type: Boolean },
    asChild: { type: Boolean },
    as: {}
  },
  emits: ["escapeKeyDown", "pointerDownOutside", "focusOutside", "interactOutside", "closeAutoFocus"],
  setup(a, { emit: t }) {
    const l = _e(a, t);
    I();
    const s = Rl(), r = B(!1);
    return (i, u) => (b(), _(o(Xn), k(o(l), {
      side: "right",
      "side-offset": 2,
      align: "start",
      style: {
        "--radix-context-menu-content-transform-origin": "var(--radix-popper-transform-origin)",
        "--radix-context-menu-content-available-width": "var(--radix-popper-available-width)",
        "--radix-context-menu-content-available-height": "var(--radix-popper-available-height)",
        "--radix-context-menu-trigger-width": "var(--radix-popper-anchor-width)",
        "--radix-context-menu-trigger-height": "var(--radix-popper-anchor-height)"
      },
      onCloseAutoFocus: u[0] || (u[0] = (d) => {
        !d.defaultPrevented && r.value && d.preventDefault(), r.value = !1;
      }),
      onInteractOutside: u[1] || (u[1] = (d) => {
        !d.defaultPrevented && !o(s).modal.value && (r.value = !0);
      })
    }), {
      default: h(() => [
        C(i.$slots, "default")
      ]),
      _: 3
    }, 16, ["style"]));
  }
}), ov = /* @__PURE__ */ w({
  __name: "ContextMenuArrow",
  props: {
    width: { default: 10 },
    height: { default: 5 },
    asChild: { type: Boolean },
    as: { default: "svg" }
  },
  setup(a) {
    const t = a;
    return I(), (e, n) => (b(), _(o(Wn), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), lv = /* @__PURE__ */ w({
  __name: "ContextMenuItem",
  props: {
    disabled: { type: Boolean },
    textValue: {},
    asChild: { type: Boolean },
    as: {}
  },
  emits: ["select"],
  setup(a, { emit: t }) {
    const e = a, l = Ie(t);
    return I(), (s, r) => (b(), _(o(ua), z(K({ ...e, ...o(l) })), {
      default: h(() => [
        C(s.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), sv = /* @__PURE__ */ w({
  __name: "ContextMenuGroup",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    return I(), (e, n) => (b(), _(o(Fa), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), rv = /* @__PURE__ */ w({
  __name: "ContextMenuSeparator",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    return I(), (e, n) => (b(), _(o(to), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), iv = /* @__PURE__ */ w({
  __name: "ContextMenuCheckboxItem",
  props: {
    checked: { type: [Boolean, String] },
    disabled: { type: Boolean },
    textValue: {},
    asChild: { type: Boolean },
    as: {}
  },
  emits: ["select", "update:checked"],
  setup(a, { emit: t }) {
    const e = a, l = Ie(t);
    return I(), (s, r) => (b(), _(o(Yn), z(K({ ...e, ...o(l) })), {
      default: h(() => [
        C(s.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), uv = /* @__PURE__ */ w({
  __name: "ContextMenuItemIndicator",
  props: {
    forceMount: { type: Boolean },
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    return I(), (e, n) => (b(), _(o(qn), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), dv = /* @__PURE__ */ w({
  __name: "ContextMenuLabel",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    return I(), (e, n) => (b(), _(o(Zn), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), cv = /* @__PURE__ */ w({
  __name: "ContextMenuRadioGroup",
  props: {
    modelValue: {},
    asChild: { type: Boolean },
    as: {}
  },
  emits: ["update:modelValue"],
  setup(a, { emit: t }) {
    const e = a, l = Ie(t);
    return I(), (s, r) => (b(), _(o(Qn), z(K({ ...e, ...o(l) })), {
      default: h(() => [
        C(s.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), fv = /* @__PURE__ */ w({
  __name: "ContextMenuRadioItem",
  props: {
    value: {},
    disabled: { type: Boolean },
    textValue: {},
    asChild: { type: Boolean },
    as: {}
  },
  emits: ["select"],
  setup(a, { emit: t }) {
    const e = a, l = Ie(t);
    return I(), (s, r) => (b(), _(o(eo), z(K({ ...e, ...o(l) })), {
      default: h(() => [
        C(s.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), pv = /* @__PURE__ */ w({
  __name: "ContextMenuSub",
  props: {
    defaultOpen: { type: Boolean },
    open: { type: Boolean, default: void 0 }
  },
  emits: ["update:open"],
  setup(a, { emit: t }) {
    const e = a, n = t;
    I();
    const l = ne(e, "open", n, {
      defaultValue: e.defaultOpen,
      passive: e.open === void 0
    });
    return (s, r) => (b(), _(o(ao), {
      open: o(l),
      "onUpdate:open": r[0] || (r[0] = (i) => wt(l) ? l.value = i : null)
    }, {
      default: h(() => [
        C(s.$slots, "default")
      ]),
      _: 3
    }, 8, ["open"]));
  }
}), vv = /* @__PURE__ */ w({
  __name: "ContextMenuSubContent",
  props: {
    forceMount: { type: Boolean },
    loop: { type: Boolean },
    sideOffset: {},
    alignOffset: {},
    avoidCollisions: { type: Boolean },
    collisionBoundary: {},
    collisionPadding: {},
    arrowPadding: {},
    sticky: {},
    hideWhenDetached: { type: Boolean },
    updatePositionStrategy: {},
    prioritizePosition: { type: Boolean },
    asChild: { type: Boolean },
    as: {}
  },
  emits: ["escapeKeyDown", "pointerDownOutside", "focusOutside", "interactOutside", "entryFocus", "openAutoFocus", "closeAutoFocus"],
  setup(a, { emit: t }) {
    const l = _e(a, t);
    return I(), (s, r) => (b(), _(o(no), k(o(l), { style: {
      "--radix-context-menu-content-transform-origin": "var(--radix-popper-transform-origin)",
      "--radix-context-menu-content-available-width": "var(--radix-popper-available-width)",
      "--radix-context-menu-content-available-height": "var(--radix-popper-available-height)",
      "--radix-context-menu-trigger-width": "var(--radix-popper-anchor-width)",
      "--radix-context-menu-trigger-height": "var(--radix-popper-anchor-height)"
    } }), {
      default: h(() => [
        C(s.$slots, "default")
      ]),
      _: 3
    }, 16, ["style"]));
  }
}), mv = /* @__PURE__ */ w({
  __name: "ContextMenuSubTrigger",
  props: {
    disabled: { type: Boolean },
    textValue: {},
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    return I(), (e, n) => (b(), _(o(oo), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), ju = ["hour", "minute", "second"];
function Tt(a) {
  const { formatter: t } = a, e = $n.map((n) => [n, a.value[n]]);
  if ("hour" in a.value) {
    const n = Qo.map((s) => s === "dayPeriod" ? [s, t.dayPeriod(Fe(a.value))] : [s, a.value[s]]), l = [...e, ...n];
    return Object.fromEntries(l);
  }
  return Object.fromEntries(e);
}
function Al(a) {
  const t = el.map((e) => e === "dayPeriod" ? [e, "AM"] : [e, null]).filter(([e]) => e === "literal" || e === null ? !1 : a === "day" ? !ju.includes(e) : !0);
  return Object.fromEntries(t);
}
function Uu(a) {
  const { segmentValues: t, formatter: e, locale: n } = a;
  function l(r) {
    if ("hour" in t) {
      const i = t[r];
      return i !== null ? r === "day" && t.month !== null ? e.part(a.dateRef.set({ [r]: i, month: t.month }), r, {
        hourCycle: a.hourCycle === 24 ? "h24" : void 0
      }) : e.part(a.dateRef.set({ [r]: i }), r, {
        hourCycle: a.hourCycle === 24 ? "h24" : void 0
      }) : tn(r, "", n.value);
    } else {
      if (fr(r)) {
        const i = t[r];
        return i !== null ? r === "day" && t.month !== null ? e.part(a.dateRef.set({ [r]: i, month: t.month }), r) : e.part(a.dateRef.set({ [r]: i }), r) : tn(r, "", n.value);
      }
      return "";
    }
  }
  return Object.keys(t).reduce((r, i) => {
    if (!tl(i))
      return r;
    if ("hour" in t && i === "dayPeriod") {
      const u = t[i];
      u !== null ? r[i] = u : r[i] = tn(i, "AM", n.value);
    } else
      r[i] = l(i);
    return r;
  }, {});
}
function Gu(a) {
  const { granularity: t, formatter: e, contentObj: n, hideTimeZone: l, hourCycle: s } = a;
  return e.toParts(a.dateRef, pr(t, s)).map((u) => ["literal", "timeZoneName", null].includes(u.type) || !tl(u.type) ? {
    part: u.type,
    value: u.value
  } : {
    part: u.type,
    value: n[u.type]
  }).filter((u) => !(u.part === null || u.value === null || u.part === "timeZoneName" && (!Zo(a.dateRef) || l)));
}
function yn(a) {
  const t = Uu(a), e = Gu({
    contentObj: t,
    ...a
  });
  return {
    obj: t,
    arr: e
  };
}
function We(a) {
  const t = ft();
  return a === t.ARROW_RIGHT || a === t.ARROW_LEFT;
}
function gt(a) {
  return !Number.isNaN(Number.parseInt(a));
}
function tt(a) {
  const t = ft();
  return !!([
    t.ENTER,
    t.ARROW_UP,
    t.ARROW_DOWN,
    t.ARROW_LEFT,
    t.ARROW_RIGHT,
    t.BACKSPACE,
    t.SPACE
  ].includes(a) || gt(a));
}
const qu = ["id", "value", "name", "disabled", "required"], [Yu, Xu] = Q("DateFieldRoot"), Zu = /* @__PURE__ */ w({
  inheritAttrs: !1,
  __name: "DateFieldRoot",
  props: {
    defaultValue: { default: void 0 },
    defaultPlaceholder: {},
    placeholder: { default: void 0 },
    modelValue: {},
    hourCycle: {},
    granularity: {},
    hideTimeZone: { type: Boolean },
    maxValue: {},
    minValue: {},
    locale: { default: "en" },
    disabled: { type: Boolean, default: !1 },
    readonly: { type: Boolean, default: !1 },
    isDateUnavailable: { type: Function, default: void 0 },
    name: {},
    required: { type: Boolean },
    id: {},
    dir: {},
    asChild: { type: Boolean },
    as: {}
  },
  emits: ["update:modelValue", "update:placeholder"],
  setup(a, { expose: t, emit: e }) {
    const n = a, l = e, { locale: s, disabled: r, readonly: i, isDateUnavailable: u, granularity: d, defaultValue: c, dir: f } = le(n), p = An(n.locale), v = be(f), { primitiveElement: y, currentElement: m } = qe(), S = B(/* @__PURE__ */ new Set());
    se(() => {
      Array.from(m.value.querySelectorAll("[data-radix-vue-date-field-segment]")).filter((F) => F.getAttribute("data-radix-vue-date-field-segment") !== "literal").forEach((F) => S.value.add(F));
    });
    const P = ne(n, "modelValue", l, {
      defaultValue: c.value,
      passive: n.modelValue === void 0
    }), D = Ot({
      defaultPlaceholder: n.placeholder,
      granularity: d.value,
      defaultValue: P.value
    }), g = ne(n, "placeholder", l, {
      defaultValue: n.defaultPlaceholder ?? D.copy(),
      passive: n.placeholder === void 0
    }), x = T(() => n.granularity ? Zt(g.value) ? n.granularity : "day" : Zt(g.value) ? "minute" : "day"), E = T(() => {
      var F;
      return P.value ? !!((F = u.value) != null && F.call(u, P.value) || n.minValue && Le(P.value, n.minValue) || n.maxValue && Le(n.maxValue, P.value)) : !1;
    }), $ = Al(x.value), R = B(P.value ? { ...Tt({ value: P.value, formatter: p }) } : { ...$ }), M = T(() => yn({
      granularity: x.value,
      dateRef: g.value,
      formatter: p,
      hideTimeZone: n.hideTimeZone,
      hourCycle: n.hourCycle,
      segmentValues: R.value,
      locale: s
    })), V = T(() => M.value.arr), O = T(() => V.value.filter(({ part: F }) => F !== "literal"));
    ee(s, (F) => {
      p.getLocale() !== F && p.setLocale(F);
    }), ee(P, (F) => {
      F !== void 0 && (!Se(g.value, F) || g.value.compare(F) !== 0) && (g.value = F.copy());
    }), ee([P, s], ([F]) => {
      F !== void 0 ? R.value = { ...Tt({ value: F, formatter: p }) } : R.value = { ...$ };
    });
    const L = B(null), j = T(() => Array.from(S.value).findIndex((F) => {
      var Z;
      return F.getAttribute("data-radix-vue-date-field-segment") === ((Z = L.value) == null ? void 0 : Z.getAttribute("data-radix-vue-date-field-segment"));
    })), J = T(() => {
      const F = v.value === "rtl" ? -1 : 1;
      return (F < 0 ? j.value < 0 : j.value > S.value.size - 1) ? null : Array.from(S.value)[j.value + F];
    }), W = T(() => {
      const F = v.value === "rtl" ? -1 : 1;
      return (F > 0 ? j.value < 0 : j.value > S.value.size - 1) ? null : Array.from(S.value)[j.value - F];
    }), X = ft();
    function N(F) {
      var Z, U;
      We(F.key) && (F.key === X.ARROW_LEFT && ((Z = W.value) == null || Z.focus()), F.key === X.ARROW_RIGHT && ((U = J.value) == null || U.focus()));
    }
    function q(F) {
      L.value = F;
    }
    return Xu({
      isDateUnavailable: u.value,
      locale: s,
      modelValue: P,
      placeholder: g,
      disabled: r,
      formatter: p,
      hourCycle: n.hourCycle,
      readonly: i,
      segmentValues: R,
      isInvalid: E,
      segmentContents: O,
      elements: S,
      setFocusedElement: q,
      focusNext() {
        var F;
        (F = J.value) == null || F.focus();
      }
    }), t({
      /** Helper to set the focused element inside the DateField */
      setFocusedElement: q
    }), (F, Z) => (b(), fe(Pe, null, [
      G(o(A), k(F.$attrs, {
        ref_key: "primitiveElement",
        ref: y,
        role: "group",
        "aria-disabled": o(r) ? !0 : void 0,
        "data-disabled": o(r) ? "" : void 0,
        "data-readonly": o(i) ? "" : void 0,
        "data-invalid": E.value ? "" : void 0,
        dir: o(v),
        onKeydown: he(N, ["left", "right"])
      }), {
        default: h(() => [
          C(F.$slots, "default", {
            modelValue: o(P),
            segments: V.value,
            isInvalid: E.value
          })
        ]),
        _: 3
      }, 16, ["aria-disabled", "data-disabled", "data-readonly", "data-invalid", "dir"]),
      je("input", {
        id: F.id,
        type: "text",
        tabindex: "-1",
        "aria-hidden": "",
        value: o(P) ? o(P).toString() : "",
        name: F.name,
        disabled: o(r),
        required: F.required,
        style: Ce({
          transform: "translateX(-100%)",
          position: "absolute",
          pointerEvents: "none",
          opacity: 0,
          margin: 0
        }),
        onFocus: Z[0] || (Z[0] = (U) => {
          var Y, te;
          return (te = (Y = Array.from(S.value)) == null ? void 0 : Y[0]) == null ? void 0 : te.focus();
        })
      }, null, 44, qu)
    ], 64));
  }
}), Et = {
  role: "spinbutton",
  contenteditable: !0,
  tabindex: 0,
  spellcheck: !1,
  inputmode: "numeric",
  autocorrect: "off",
  enterkeyhint: "next",
  style: "caret-color: transparent;"
};
function Ju(a) {
  const { segmentValues: t, placeholder: e } = a, n = t.day === null, l = t.day ? e.set({ day: t.day }) : e, s = l.day, r = 1, i = cn(l), u = n ? "Empty" : `${s}`;
  return {
    ...Et,
    "aria-label": "day,",
    "aria-valuemin": r,
    "aria-valuemax": i,
    "aria-valuenow": s,
    "aria-valuetext": u,
    "data-placeholder": n ? "" : void 0
  };
}
function Qu(a) {
  const { segmentValues: t, placeholder: e, formatter: n } = a, l = t.month === null, s = t.month ? e.set({ month: t.month }) : e, r = s.month, i = 1, u = 12, d = l ? "Empty" : `${r} - ${n.fullMonth(Fe(s))}`;
  return {
    ...Et,
    "aria-label": "month, ",
    contenteditable: !0,
    "aria-valuemin": i,
    "aria-valuemax": u,
    "aria-valuenow": r,
    "aria-valuetext": d,
    "data-placeholder": l ? "" : void 0
  };
}
function ed(a) {
  const { segmentValues: t, placeholder: e } = a, n = t.year === null, l = t.year ? e.set({ year: t.year }) : e, s = 1, r = 9999, i = l.year, u = n ? "Empty" : `${i}`;
  return {
    ...Et,
    "aria-label": "year, ",
    "aria-valuemin": s,
    "aria-valuemax": r,
    "aria-valuenow": i,
    "aria-valuetext": u,
    "data-placeholder": n ? "" : void 0
  };
}
function td(a) {
  const { segmentValues: t, hourCycle: e, placeholder: n } = a;
  if (!("hour" in t) || !("hour" in n))
    return {};
  const l = t.hour === null, s = t.hour ? n.set({ hour: t.hour }) : n, r = e === 12 ? 1 : 0, i = e === 12 ? 12 : 23, u = s.hour, d = l ? "Empty" : `${u} ${t.dayPeriod ?? ""}`;
  return {
    ...Et,
    "aria-label": "hour, ",
    "aria-valuemin": r,
    "aria-valuemax": i,
    "aria-valuenow": u,
    "aria-valuetext": d,
    "data-placeholder": l ? "" : void 0
  };
}
function ad(a) {
  const { segmentValues: t, placeholder: e } = a;
  if (!("minute" in t) || !("minute" in e))
    return {};
  const n = t.minute === null, s = (t.minute ? e.set({ minute: t.minute }) : e).minute, r = 0, i = 59, u = n ? "Empty" : `${s}`;
  return {
    ...Et,
    "aria-label": "minute, ",
    "aria-valuemin": r,
    "aria-valuemax": i,
    "aria-valuenow": s,
    "aria-valuetext": u,
    "data-placeholder": n ? "" : void 0
  };
}
function nd(a) {
  const { segmentValues: t, placeholder: e } = a;
  if (!("second" in t) || !("second" in e))
    return {};
  const n = t.second === null, s = (t.second ? e.set({ second: t.second }) : e).second, r = 0, i = 59, u = n ? "Empty" : `${s}`;
  return {
    ...Et,
    "aria-label": "second, ",
    "aria-valuemin": r,
    "aria-valuemax": i,
    "aria-valuenow": s,
    "aria-valuetext": u,
    "data-placeholder": n ? "" : void 0
  };
}
function od(a) {
  const { segmentValues: t } = a;
  if (!("dayPeriod" in t))
    return {};
  const e = 0, n = 12, l = t.hour ? t.hour > 12 ? t.hour - 12 : t.hour : 0, s = t.dayPeriod ?? "AM";
  return {
    ...Et,
    inputmode: "text",
    "aria-label": "AM/PM",
    "aria-valuemin": e,
    "aria-valuemax": n,
    "aria-valuenow": l,
    "aria-valuetext": s
  };
}
function ld(a) {
  return {
    "aria-hidden": !0,
    "data-segment": "literal"
  };
}
function sd(a) {
  return {
    role: "textbox",
    "aria-label": "timezone, ",
    "data-readonly": !0,
    "data-segment": "timeZoneName",
    tabindex: 0,
    style: "caret-color: transparent;"
  };
}
const rd = {
  day: {
    attrs: Ju
  },
  month: {
    attrs: Qu
  },
  year: {
    attrs: ed
  },
  hour: {
    attrs: td
  },
  minute: {
    attrs: ad
  },
  second: {
    attrs: nd
  },
  dayPeriod: {
    attrs: od
  },
  literal: {
    attrs: ld
  },
  timeZoneName: {
    attrs: sd
  }
};
function Ol(a) {
  const t = ft();
  function e({ e: g, part: x, dateRef: E, prevValue: $ }) {
    const R = g.key === t.ARROW_UP ? 1 : -1, M = 0, V = 59;
    if ($ === null)
      return R > 0 ? M : V;
    const O = [x, R];
    return E.set({ [x]: $ }).cycle(...O)[x];
  }
  function n(g) {
    if (a.hasLeftFocus.value = !1, g === null)
      return g;
    const x = g.toString();
    return x.length === 1 ? null : Number.parseInt(x.slice(0, -1));
  }
  function l({ e: g, part: x, dateRef: E, prevValue: $, hourCycle: R }) {
    const M = g.key === t.ARROW_UP ? 1 : -1;
    if ($ === null)
      return E[x];
    if (x === "hour" && "hour" in E) {
      const O = [x, M, { hourCycle: R }];
      return E.set({ [x]: $ }).cycle(...O)[x];
    }
    const V = [x, M];
    return x === "day" && a.segmentValues.value.month !== null ? E.set({ [x]: $, month: a.segmentValues.value.month }).cycle(...V)[x] : E.set({ [x]: $ }).cycle(...V)[x];
  }
  function s(g, x, E) {
    let $ = !1;
    const R = Math.floor(g / 10);
    if (a.hasLeftFocus.value && (a.hasLeftFocus.value = !1, E = null), E === null)
      return x === 0 ? (a.lastKeyZero.value = !0, { value: null, moveToNext: $ }) : ((a.lastKeyZero.value || x > R) && ($ = !0), a.lastKeyZero.value = !1, { value: x, moveToNext: $ });
    const M = E.toString().length, V = Number.parseInt(E.toString() + x.toString());
    return M === 2 || V > g ? ((x > R || V > g) && ($ = !0), { value: x, moveToNext: $ }) : ($ = !0, { value: V, moveToNext: $ });
  }
  function r(g, x) {
    let $ = !1;
    const R = Math.floor(59 / 10);
    if (a.hasLeftFocus.value && (a.hasLeftFocus.value = !1, x = null), x === null)
      return g === 0 ? (a.lastKeyZero.value = !0, { value: 0, moveToNext: $ }) : ((a.lastKeyZero.value || g > R) && ($ = !0), a.lastKeyZero.value = !1, { value: g, moveToNext: $ });
    const M = x.toString().length, V = Number.parseInt(x.toString() + g.toString());
    return M === 2 || V > 59 ? (g > R && ($ = !0), { value: g, moveToNext: $ }) : ($ = !0, { value: V, moveToNext: $ });
  }
  function i(g, x) {
    let $ = !1;
    const R = Math.floor(24 / 10);
    if (a.hasLeftFocus.value && (a.hasLeftFocus.value = !1, x = null), x === null)
      return g === 0 ? (a.lastKeyZero.value = !0, { value: null, moveToNext: $ }) : ((a.lastKeyZero.value || g > R) && ($ = !0), a.lastKeyZero.value = !1, { value: g, moveToNext: $ });
    const M = x.toString().length, V = Number.parseInt(x.toString() + g.toString());
    return M === 2 || V > 24 ? (g > R && ($ = !0), { value: g, moveToNext: $ }) : ($ = !0, { value: V, moveToNext: $ });
  }
  function u(g, x) {
    let E = !1;
    if (a.hasLeftFocus.value && (a.hasLeftFocus.value = !1, x = null), x === null)
      return { value: g === 0 ? 1 : g, moveToNext: E };
    const $ = x.toString() + g.toString();
    return $.length > 4 ? { value: g === 0 ? 1 : g, moveToNext: E } : ($.length === 4 && (E = !0), { value: Number.parseInt($), moveToNext: E });
  }
  const d = T(() => rd[a.part].attrs({
    placeholder: a.placeholder.value,
    hourCycle: a.hourCycle,
    segmentValues: a.segmentValues.value,
    formatter: a.formatter
  }));
  function c(g) {
    if (!tt(g.key) || We(g.key))
      return;
    const x = a.segmentValues.value.day;
    if (g.key === t.ARROW_DOWN || g.key === t.ARROW_UP) {
      a.segmentValues.value.day = l({ e: g, part: "day", dateRef: a.placeholder.value, prevValue: x });
      return;
    }
    if (gt(g.key)) {
      const E = Number.parseInt(g.key), $ = a.segmentValues.value.month, R = $ ? cn(a.placeholder.value.set({ month: $ })) : cn(a.placeholder.value), { value: M, moveToNext: V } = s(R, E, x);
      a.segmentValues.value.day = M, V && a.focusNext();
    }
    g.key === t.BACKSPACE && (a.hasLeftFocus.value = !1, a.segmentValues.value.day = n(x));
  }
  function f(g) {
    if (!tt(g.key) || We(g.key))
      return;
    const x = a.segmentValues.value.month;
    if (g.key === t.ARROW_DOWN || g.key === t.ARROW_UP) {
      a.segmentValues.value.month = l({ e: g, part: "month", dateRef: a.placeholder.value, prevValue: x });
      return;
    }
    if (gt(g.key)) {
      const E = Number.parseInt(g.key), { value: $, moveToNext: R } = s(12, E, x);
      a.segmentValues.value.month = $, R && a.focusNext();
    }
    g.key === t.BACKSPACE && (a.hasLeftFocus.value = !1, a.segmentValues.value.month = n(x));
  }
  function p(g) {
    if (!tt(g.key) || We(g.key))
      return;
    const x = a.segmentValues.value.year;
    if (g.key === t.ARROW_DOWN || g.key === t.ARROW_UP) {
      a.segmentValues.value.year = l({ e: g, part: "year", dateRef: a.placeholder.value, prevValue: x });
      return;
    }
    if (gt(g.key)) {
      const E = Number.parseInt(g.key), { value: $, moveToNext: R } = u(E, x);
      a.segmentValues.value.year = $, R && a.focusNext();
    }
    g.key === t.BACKSPACE && (a.hasLeftFocus.value = !1, a.segmentValues.value.year = n(x));
  }
  function v(g) {
    const x = a.placeholder.value;
    if (!tt(g.key) || We(g.key) || !("hour" in x) || !("hour" in a.segmentValues.value))
      return;
    const E = a.segmentValues.value.hour, $ = a.hourCycle;
    if (g.key === t.ARROW_UP || g.key === t.ARROW_DOWN) {
      a.segmentValues.value.hour = l({ e: g, part: "hour", dateRef: a.placeholder.value, prevValue: E, hourCycle: $ }), "dayPeriod" in a.segmentValues.value && (a.segmentValues.value.hour < 12 ? a.segmentValues.value.dayPeriod = "AM" : a.segmentValues.value.hour && (a.segmentValues.value.dayPeriod = "PM"));
      return;
    }
    if (gt(g.key)) {
      const R = Number.parseInt(g.key), { value: M, moveToNext: V } = i(R, E);
      "dayPeriod" in a.segmentValues.value && M && M > 12 ? a.segmentValues.value.dayPeriod = "PM" : "dayPeriod" in a.segmentValues.value && M && (a.segmentValues.value.dayPeriod = "AM"), a.segmentValues.value.hour = M, V && a.focusNext();
    }
    g.key === t.BACKSPACE && (a.hasLeftFocus.value = !1, a.segmentValues.value.hour = n(E));
  }
  function y(g) {
    const x = a.placeholder.value;
    if (!tt(g.key) || We(g.key) || !("minute" in x) || !("minute" in a.segmentValues.value))
      return;
    const E = a.segmentValues.value.minute;
    if (a.segmentValues.value.minute = e({ e: g, part: "minute", dateRef: a.placeholder.value, prevValue: E }), gt(g.key)) {
      const $ = Number.parseInt(g.key), { value: R, moveToNext: M } = r($, E);
      a.segmentValues.value.minute = R, M && a.focusNext();
    }
    g.key === t.BACKSPACE && (a.hasLeftFocus.value = !1, a.segmentValues.value.minute = n(E));
  }
  function m(g) {
    const x = a.placeholder.value;
    if (!tt(g.key) || We(g.key) || !("second" in x) || !("second" in a.segmentValues.value))
      return;
    const E = a.segmentValues.value.second;
    if (a.segmentValues.value.second = e({ e: g, part: "second", dateRef: a.placeholder.value, prevValue: E }), gt(g.key)) {
      const $ = Number.parseInt(g.key), { value: R, moveToNext: M } = r($, E);
      a.segmentValues.value.second = R, M && a.focusNext();
    }
    g.key === t.BACKSPACE && (a.hasLeftFocus.value = !1, a.segmentValues.value.second = n(E));
  }
  function S(g) {
    if (!((!tt(g.key) || We(g.key)) && g.key !== "a" && g.key !== "p" || !("hour" in a.placeholder.value) || !("dayPeriod" in a.segmentValues.value))) {
      if (g.key === t.ARROW_UP || g.key === t.ARROW_DOWN) {
        if (a.segmentValues.value.dayPeriod === "AM") {
          a.segmentValues.value.dayPeriod = "PM", a.segmentValues.value.hour = a.segmentValues.value.hour + 12;
          return;
        }
        a.segmentValues.value.dayPeriod = "AM", a.segmentValues.value.hour = a.segmentValues.value.hour - 12;
        return;
      }
      if (g.key === "a") {
        a.segmentValues.value.dayPeriod = "AM", a.segmentValues.value.hour = a.segmentValues.value.hour - 12;
        return;
      }
      g.key === "p" && (a.segmentValues.value.dayPeriod = "PM", a.segmentValues.value.hour = a.segmentValues.value.hour + 12);
    }
  }
  function P(g) {
    a.disabled.value && g.preventDefault();
  }
  function D(g) {
    const x = a.disabled.value, E = a.readonly.value;
    if (g.key !== t.TAB && g.preventDefault(), x || E)
      return;
    if ({
      day: c,
      month: f,
      year: p,
      hour: v,
      minute: y,
      second: m,
      dayPeriod: S,
      timeZoneName: () => {
      }
    }[a.part](g), !We(g.key) && g.key !== t.TAB && g.key !== t.SHIFT && tt(g.key) && Object.values(a.segmentValues.value).every((R) => R !== null)) {
      let R = { ...a.segmentValues.value };
      "dayPeriod" in a.segmentValues.value && (R = {
        ...R,
        hour: a.segmentValues.value.dayPeriod === "PM" && !a.modelValue.value ? a.segmentValues.value.hour + 12 : a.segmentValues.value.hour
      });
      let M = a.placeholder.value.copy();
      Object.keys(R).forEach((V) => {
        const O = R[V];
        M = M.set({ [V]: O });
      }), a.modelValue.value = M.copy();
    }
  }
  return {
    handleSegmentClick: P,
    handleSegmentKeydown: D,
    attributes: d
  };
}
const id = /* @__PURE__ */ w({
  __name: "DateFieldInput",
  props: {
    part: {},
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a, e = Yu(), n = B(!0), l = B(!1), {
      handleSegmentClick: s,
      handleSegmentKeydown: r,
      attributes: i
    } = Ol({
      hasLeftFocus: n,
      lastKeyZero: l,
      placeholder: e.placeholder,
      hourCycle: e.hourCycle,
      segmentValues: e.segmentValues,
      formatter: e.formatter,
      part: t.part,
      disabled: e.disabled,
      readonly: e.readonly,
      focusNext: e.focusNext,
      modelValue: e.modelValue
    }), u = T(() => e.disabled.value), d = T(() => e.readonly.value), c = T(() => e.isInvalid.value);
    return (f, p) => (b(), _(o(A), k({
      as: f.as,
      "as-child": f.asChild
    }, o(i), {
      contenteditable: u.value || d.value ? !1 : f.part !== "literal",
      "data-radix-vue-date-field-segment": f.part,
      "aria-disabled": u.value ? !0 : void 0,
      "aria-readonly": d.value ? !0 : void 0,
      "data-disabled": u.value ? "" : void 0,
      "data-invalid": c.value ? "" : void 0,
      "aria-invalid": c.value ? !0 : void 0
    }, Pn(f.part !== "literal" ? {
      mousedown: o(s),
      keydown: o(r),
      focusout: () => {
        n.value = !0;
      },
      focusin: (v) => {
        o(e).setFocusedElement(v.target);
      }
    } : {})), {
      default: h(() => [
        C(f.$slots, "default")
      ]),
      _: 3
    }, 16, ["as", "as-child", "contenteditable", "data-radix-vue-date-field-segment", "aria-disabled", "aria-readonly", "data-disabled", "data-invalid", "aria-invalid"]));
  }
}), hv = /* @__PURE__ */ w({
  __name: "DatePickerHeader",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    return (e, n) => (b(), _(o(Xi), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), yv = /* @__PURE__ */ w({
  __name: "DatePickerHeading",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    return (e, n) => (b(), _(o(Zi), z(K(t)), {
      default: h(({ headingValue: l }) => [
        C(e.$slots, "default", { headingValue: l }, () => [
          ye(ke(l), 1)
        ])
      ]),
      _: 3
    }, 16));
  }
}), gv = /* @__PURE__ */ w({
  __name: "DatePickerGrid",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    return (e, n) => (b(), _(o(Ji), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), bv = /* @__PURE__ */ w({
  __name: "DatePickerCell",
  props: {
    date: {},
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    return (e, n) => (b(), _(o(Qi), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), Cv = /* @__PURE__ */ w({
  __name: "DatePickerHeadCell",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    return (e, n) => (b(), _(o(eu), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), wv = /* @__PURE__ */ w({
  __name: "DatePickerNext",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    return (e, n) => (b(), _(o(tu), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), _v = /* @__PURE__ */ w({
  __name: "DatePickerPrev",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    return (e, n) => (b(), _(o(au), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), xv = /* @__PURE__ */ w({
  __name: "DatePickerGridHead",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    return (e, n) => (b(), _(o(nu), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), Sv = /* @__PURE__ */ w({
  __name: "DatePickerGridBody",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    return (e, n) => (b(), _(o(ou), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), Pv = /* @__PURE__ */ w({
  __name: "DatePickerGridRow",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    return (e, n) => (b(), _(o(lu), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), Ev = /* @__PURE__ */ w({
  __name: "DatePickerCellTrigger",
  props: {
    day: {},
    month: {},
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    return (e, n) => (b(), _(o(su), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), Dv = /* @__PURE__ */ w({
  __name: "DatePickerInput",
  props: {
    part: {},
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    return (e, n) => (b(), _(o(id), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), [lo, ud] = Q("DatePickerRoot"), $v = /* @__PURE__ */ w({
  inheritAttrs: !1,
  __name: "DatePickerRoot",
  props: {
    defaultValue: { default: void 0 },
    defaultPlaceholder: {},
    placeholder: { default: void 0 },
    modelValue: {},
    hourCycle: {},
    granularity: {},
    hideTimeZone: { type: Boolean },
    maxValue: {},
    minValue: {},
    locale: { default: "en" },
    disabled: { type: Boolean, default: !1 },
    readonly: { type: Boolean, default: !1 },
    isDateUnavailable: { type: Function, default: void 0 },
    name: {},
    required: { type: Boolean },
    id: {},
    dir: {},
    asChild: { type: Boolean },
    as: {},
    defaultOpen: { type: Boolean, default: !1 },
    open: { type: Boolean, default: void 0 },
    modal: { type: Boolean, default: !1 },
    isDateDisabled: { type: Function, default: void 0 },
    pagedNavigation: { type: Boolean, default: !1 },
    weekStartsOn: { default: 0 },
    weekdayFormat: { default: "narrow" },
    fixedWeeks: { type: Boolean, default: !1 },
    numberOfMonths: { default: 1 },
    preventDeselect: { type: Boolean, default: !1 }
  },
  emits: ["update:modelValue", "update:placeholder", "update:open"],
  setup(a, { emit: t }) {
    const e = a, n = t, {
      locale: l,
      disabled: s,
      readonly: r,
      pagedNavigation: i,
      weekStartsOn: u,
      weekdayFormat: d,
      fixedWeeks: c,
      numberOfMonths: f,
      preventDeselect: p,
      isDateDisabled: v,
      isDateUnavailable: y,
      defaultOpen: m,
      modal: S,
      id: P,
      name: D,
      required: g,
      minValue: x,
      maxValue: E,
      granularity: $,
      hideTimeZone: R,
      hourCycle: M,
      defaultValue: V,
      dir: O
    } = le(e), L = be(O), j = ne(e, "modelValue", n, {
      defaultValue: V.value,
      passive: e.modelValue === void 0
    }), J = T(() => Ot({
      defaultPlaceholder: e.placeholder,
      granularity: e.granularity,
      defaultValue: j.value
    })), W = ne(e, "placeholder", n, {
      defaultValue: e.defaultPlaceholder ?? J.value.copy(),
      passive: e.placeholder === void 0
    }), X = ne(e, "open", n, {
      defaultValue: m.value,
      passive: e.open === void 0
    }), N = B();
    return ud({
      isDateUnavailable: y.value,
      isDateDisabled: v.value,
      locale: l,
      disabled: s,
      pagedNavigation: i,
      weekStartsOn: u,
      weekdayFormat: d,
      fixedWeeks: c,
      numberOfMonths: f,
      readonly: r,
      preventDeselect: p,
      modelValue: j,
      placeholder: W,
      defaultOpen: m,
      modal: S,
      open: X,
      id: P,
      name: D,
      required: g,
      minValue: x,
      maxValue: E,
      granularity: $,
      hideTimeZone: R,
      hourCycle: M,
      dateFieldRef: N,
      dir: L,
      onDateChange(q) {
        !q || !j.value ? j.value = q : !p.value && Oe(j.value, q) ? j.value = void 0 : j.value = q.copy();
      },
      onPlaceholderChange(q) {
        Se(q, W.value) || (W.value = q.copy());
      }
    }), (q, F) => (b(), _(o(Kl), {
      open: o(X),
      "onUpdate:open": F[0] || (F[0] = (Z) => wt(X) ? X.value = Z : null),
      "default-open": o(m),
      modal: o(S)
    }, {
      default: h(() => [
        C(q.$slots, "default")
      ]),
      _: 3
    }, 8, ["open", "default-open", "modal"]));
  }
}), Bv = /* @__PURE__ */ w({
  __name: "DatePickerCalendar",
  setup(a) {
    const t = lo();
    return (e, n) => (b(), _(o(Yi), k({
      isDateDisabled: o(t).isDateDisabled,
      isDateUnavailable: o(t).isDateUnavailable,
      minValue: o(t).minValue.value,
      maxValue: o(t).maxValue.value,
      locale: o(t).locale.value,
      disabled: o(t).disabled.value,
      pagedNavigation: o(t).pagedNavigation.value,
      weekStartsOn: o(t).weekStartsOn.value,
      weekdayFormat: o(t).weekdayFormat.value,
      fixedWeeks: o(t).fixedWeeks.value,
      numberOfMonths: o(t).numberOfMonths.value,
      readonly: o(t).readonly.value,
      preventDeselect: o(t).preventDeselect.value,
      dir: o(t).dir.value
    }, {
      "model-value": o(t).modelValue.value,
      placeholder: o(t).placeholder.value,
      "initial-focus": "",
      multiple: !1,
      "onUpdate:modelValue": n[0] || (n[0] = (l) => {
        l && o(t).modelValue.value && o(Se)(l, o(t).modelValue.value) || o(t).onDateChange(l);
      }),
      "onUpdate:placeholder": n[1] || (n[1] = (l) => {
        o(Se)(l, o(t).placeholder.value) || o(t).onPlaceholderChange(l);
      })
    }), {
      default: h(({ weekDays: l, grid: s, date: r, weekStartsOn: i, locale: u, fixedWeeks: d }) => [
        C(e.$slots, "default", {
          date: r,
          grid: s,
          weekDays: l,
          weekStartsOn: i,
          locale: u,
          fixedWeeks: d
        })
      ]),
      _: 3
    }, 16, ["model-value", "placeholder"]));
  }
}), Tv = /* @__PURE__ */ w({
  __name: "DatePickerField",
  setup(a) {
    const t = lo();
    return (e, n) => (b(), _(o(Zu), k({
      ref: o(t).dateFieldRef,
      "model-value": o(t).modelValue.value,
      placeholder: o(t).placeholder.value
    }, {
      id: o(t).id.value,
      name: o(t).name.value,
      disabled: o(t).disabled.value,
      minValue: o(t).minValue.value,
      maxValue: o(t).maxValue.value,
      readonly: o(t).readonly.value,
      hourCycle: o(t).hourCycle.value,
      granularity: o(t).granularity.value,
      hideTimeZone: o(t).hideTimeZone.value,
      locale: o(t).locale.value,
      isDateUnavailable: o(t).isDateUnavailable,
      required: o(t).required.value,
      dir: o(t).dir.value
    }, {
      "onUpdate:modelValue": n[0] || (n[0] = (l) => {
        l && o(t).modelValue.value && o(Se)(o(t).modelValue.value, l) && l.compare(o(t).modelValue.value) === 0 || o(t).onDateChange(l);
      }),
      "onUpdate:placeholder": n[1] || (n[1] = (l) => {
        o(Se)(o(t).placeholder.value, l) && l.compare(o(t).placeholder.value) === 0 || o(t).onPlaceholderChange(l);
      })
    }), {
      default: h(({ segments: l }) => [
        C(e.$slots, "default", { segments: l })
      ]),
      _: 3
    }, 16, ["model-value", "placeholder"]));
  }
}), Iv = /* @__PURE__ */ w({
  __name: "DatePickerAnchor",
  props: {
    element: {},
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    return (e, n) => (b(), _(o(Yl), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), Rv = /* @__PURE__ */ w({
  __name: "DatePickerArrow",
  props: {
    width: {},
    height: {},
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    return (e, n) => (b(), _(o(Gl), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), Av = /* @__PURE__ */ w({
  __name: "DatePickerClose",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    return (e, n) => (b(), _(o(ql), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), Ov = /* @__PURE__ */ w({
  __name: "DatePickerTrigger",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a, e = lo();
    return (n, l) => (b(), _(o(Hl), k({ "data-radix-vue-date-field-segment": "trigger" }, t, {
      onFocusin: l[0] || (l[0] = (s) => {
        var r;
        (r = o(e).dateFieldRef.value) == null || r.setFocusedElement(s.target);
      })
    }), {
      default: h(() => [
        C(n.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), kv = /* @__PURE__ */ w({
  __name: "DatePickerContent",
  props: {
    forceMount: { type: Boolean },
    trapFocus: { type: Boolean },
    side: {},
    sideOffset: {},
    align: {},
    alignOffset: {},
    avoidCollisions: { type: Boolean },
    collisionBoundary: {},
    collisionPadding: {},
    arrowPadding: {},
    sticky: {},
    hideWhenDetached: { type: Boolean },
    updatePositionStrategy: {},
    prioritizePosition: { type: Boolean },
    asChild: { type: Boolean },
    as: {},
    disableOutsidePointerEvents: { type: Boolean }
  },
  emits: ["escapeKeyDown", "pointerDownOutside", "focusOutside", "interactOutside", "openAutoFocus", "closeAutoFocus"],
  setup(a, { emit: t }) {
    const l = _e(a, t);
    return (s, r) => (b(), _(o(Wl), null, {
      default: h(() => [
        G(o(Ul), z(K({ ...o(l), ...s.$attrs })), {
          default: h(() => [
            C(s.$slots, "default")
          ]),
          _: 3
        }, 16)
      ]),
      _: 3
    }));
  }
}), Mv = /* @__PURE__ */ w({
  __name: "DateRangePickerHeader",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    return (e, n) => (b(), _(o(hc), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), Vv = /* @__PURE__ */ w({
  __name: "DateRangePickerHeading",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    return (e, n) => (b(), _(o(yc), z(K(t)), {
      default: h(({ headingValue: l }) => [
        C(e.$slots, "default", { headingValue: l }, () => [
          ye(ke(l), 1)
        ])
      ]),
      _: 3
    }, 16));
  }
}), Fv = /* @__PURE__ */ w({
  __name: "DateRangePickerGrid",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    return (e, n) => (b(), _(o(gc), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), Lv = /* @__PURE__ */ w({
  __name: "DateRangePickerCell",
  props: {
    date: {},
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    return (e, n) => (b(), _(o(bc), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), Nv = /* @__PURE__ */ w({
  __name: "DateRangePickerHeadCell",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    return (e, n) => (b(), _(o(Cc), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), zv = /* @__PURE__ */ w({
  __name: "DateRangePickerNext",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    return (e, n) => (b(), _(o(wc), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), Kv = /* @__PURE__ */ w({
  __name: "DateRangePickerPrev",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    return (e, n) => (b(), _(o(_c), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), Hv = /* @__PURE__ */ w({
  __name: "DateRangePickerGridHead",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    return (e, n) => (b(), _(o(xc), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), Wv = /* @__PURE__ */ w({
  __name: "DateRangePickerGridBody",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    return (e, n) => (b(), _(o(Sc), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), jv = /* @__PURE__ */ w({
  __name: "DateRangePickerGridRow",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    return (e, n) => (b(), _(o(Pc), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), Uv = /* @__PURE__ */ w({
  __name: "DateRangePickerCellTrigger",
  props: {
    day: {},
    month: {},
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    return (e, n) => (b(), _(o(Ec), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), Gv = /* @__PURE__ */ w({
  __name: "DateRangePickerInput",
  props: {
    part: {},
    type: {},
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    return (e, n) => (b(), _(o(md), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), [so, dd] = Q("DateRangePickerRoot"), qv = /* @__PURE__ */ w({
  inheritAttrs: !1,
  __name: "DateRangePickerRoot",
  props: {
    defaultValue: { default: () => ({ start: void 0, end: void 0 }) },
    defaultPlaceholder: {},
    placeholder: { default: void 0 },
    modelValue: {},
    hourCycle: {},
    granularity: {},
    hideTimeZone: { type: Boolean },
    maxValue: {},
    minValue: {},
    locale: { default: "en" },
    disabled: { type: Boolean, default: !1 },
    readonly: { type: Boolean, default: !1 },
    isDateUnavailable: { type: Function, default: void 0 },
    name: {},
    required: { type: Boolean },
    id: {},
    dir: {},
    asChild: { type: Boolean },
    as: {},
    defaultOpen: { type: Boolean, default: !1 },
    open: { type: Boolean, default: void 0 },
    modal: { type: Boolean, default: !1 },
    isDateDisabled: { type: Function, default: void 0 },
    pagedNavigation: { type: Boolean, default: !1 },
    weekStartsOn: { default: 0 },
    weekdayFormat: { default: "narrow" },
    fixedWeeks: { type: Boolean, default: !1 },
    numberOfMonths: { default: 1 },
    preventDeselect: { type: Boolean, default: !1 }
  },
  emits: ["update:modelValue", "update:placeholder", "update:startValue", "update:open"],
  setup(a, { emit: t }) {
    const e = a, n = t, {
      locale: l,
      disabled: s,
      readonly: r,
      pagedNavigation: i,
      weekStartsOn: u,
      weekdayFormat: d,
      fixedWeeks: c,
      numberOfMonths: f,
      preventDeselect: p,
      isDateDisabled: v,
      isDateUnavailable: y,
      defaultOpen: m,
      modal: S,
      id: P,
      name: D,
      required: g,
      minValue: x,
      maxValue: E,
      granularity: $,
      hideTimeZone: R,
      hourCycle: M,
      dir: V
    } = le(e), O = be(V), L = ne(e, "modelValue", n, {
      defaultValue: e.defaultValue,
      passive: e.modelValue === void 0
    }), j = Ot({
      defaultPlaceholder: e.placeholder,
      granularity: e.granularity,
      defaultValue: L.value.start
    }), J = ne(e, "placeholder", n, {
      defaultValue: e.defaultPlaceholder ?? j.copy(),
      passive: e.placeholder === void 0
    }), W = ne(e, "open", n, {
      defaultValue: m.value,
      passive: e.open === void 0
    }), X = B();
    return dd({
      isDateUnavailable: y.value,
      isDateDisabled: v.value,
      locale: l,
      disabled: s,
      pagedNavigation: i,
      weekStartsOn: u,
      weekdayFormat: d,
      fixedWeeks: c,
      numberOfMonths: f,
      readonly: r,
      preventDeselect: p,
      modelValue: L,
      placeholder: J,
      defaultOpen: m,
      modal: S,
      open: W,
      id: P,
      name: D,
      required: g,
      minValue: x,
      maxValue: E,
      granularity: $,
      hideTimeZone: R,
      hourCycle: M,
      dateFieldRef: X,
      dir: O,
      onStartValueChange(N) {
        n("update:startValue", N);
      },
      onDateChange(N) {
        var q, F;
        L.value = { start: (q = N.start) == null ? void 0 : q.copy(), end: (F = N.end) == null ? void 0 : F.copy() };
      },
      onPlaceholderChange(N) {
        J.value = N.copy();
      }
    }), (N, q) => (b(), _(o(Kl), {
      open: o(W),
      "onUpdate:open": q[0] || (q[0] = (F) => wt(W) ? W.value = F : null),
      "default-open": o(m),
      modal: o(S)
    }, {
      default: h(() => [
        C(N.$slots, "default")
      ]),
      _: 3
    }, 8, ["open", "default-open", "modal"]));
  }
}), Yv = /* @__PURE__ */ w({
  __name: "DateRangePickerCalendar",
  setup(a) {
    const t = so();
    return (e, n) => (b(), _(o(mc), k({
      isDateDisabled: o(t).isDateDisabled,
      isDateUnavailable: o(t).isDateUnavailable,
      locale: o(t).locale.value,
      disabled: o(t).disabled.value,
      pagedNavigation: o(t).pagedNavigation.value,
      weekStartsOn: o(t).weekStartsOn.value,
      weekdayFormat: o(t).weekdayFormat.value,
      fixedWeeks: o(t).fixedWeeks.value,
      numberOfMonths: o(t).numberOfMonths.value,
      readonly: o(t).readonly.value,
      preventDeselect: o(t).preventDeselect.value,
      minValue: o(t).minValue.value,
      maxValue: o(t).maxValue.value,
      dir: o(t).dir.value
    }, {
      "initial-focus": "",
      "model-value": o(t).modelValue.value,
      placeholder: o(t).placeholder.value,
      "onUpdate:startValue": n[0] || (n[0] = (l) => {
        o(t).onStartValueChange(l);
      }),
      "onUpdate:modelValue": n[1] || (n[1] = (l) => {
        l.start && o(t).modelValue.value.start && l.end && o(t).modelValue.value.end && o(Se)(l.start, o(t).modelValue.value.start) && o(Se)(l.end, o(t).modelValue.value.end) || o(t).onDateChange(l);
      }),
      "onUpdate:placeholder": n[2] || (n[2] = (l) => {
        o(Se)(l, o(t).placeholder.value) || o(t).onPlaceholderChange(l);
      })
    }), {
      default: h(({ weekDays: l, grid: s, date: r, weekStartsOn: i, locale: u, fixedWeeks: d }) => [
        C(e.$slots, "default", {
          date: r,
          grid: s,
          weekDays: l,
          weekStartsOn: i,
          locale: u,
          fixedWeeks: d
        })
      ]),
      _: 3
    }, 16, ["model-value", "placeholder"]));
  }
}), Xv = /* @__PURE__ */ w({
  __name: "DateRangePickerField",
  setup(a) {
    const t = so();
    return (e, n) => (b(), _(o(vd), k({
      ref: o(t).dateFieldRef,
      "model-value": o(t).modelValue.value,
      placeholder: o(t).placeholder.value
    }, {
      id: o(t).id.value,
      name: o(t).name.value,
      disabled: o(t).disabled.value,
      minValue: o(t).minValue.value,
      maxValue: o(t).maxValue.value,
      readonly: o(t).readonly.value,
      hourCycle: o(t).hourCycle.value,
      granularity: o(t).granularity.value,
      hideTimeZone: o(t).hideTimeZone.value,
      locale: o(t).locale.value,
      isDateUnavailable: o(t).isDateUnavailable,
      required: o(t).required.value,
      dir: o(t).dir.value
    }, {
      "onUpdate:modelValue": n[0] || (n[0] = (l) => {
        l.start && o(t).modelValue.value.start && l.end && o(t).modelValue.value.end && l.start.compare(o(t).modelValue.value.start) === 0 && l.end.compare(o(t).modelValue.value.end) === 0 || o(t).onDateChange(l);
      }),
      "onUpdate:placeholder": n[1] || (n[1] = (l) => {
        o(Se)(l, o(t).placeholder.value) && l.compare(o(t).placeholder.value) === 0 || o(t).onPlaceholderChange(l);
      })
    }), {
      default: h(({ segments: l, modelValue: s }) => [
        C(e.$slots, "default", {
          segments: l,
          modelValue: s
        })
      ]),
      _: 3
    }, 16, ["model-value", "placeholder"]));
  }
}), Zv = /* @__PURE__ */ w({
  __name: "DateRangePickerAnchor",
  props: {
    element: {},
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    return (e, n) => (b(), _(o(Yl), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), Jv = /* @__PURE__ */ w({
  __name: "DateRangePickerArrow",
  props: {
    width: {},
    height: {},
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    return (e, n) => (b(), _(o(Gl), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), Qv = /* @__PURE__ */ w({
  __name: "DateRangePickerClose",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    return (e, n) => (b(), _(o(ql), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), em = /* @__PURE__ */ w({
  __name: "DateRangePickerTrigger",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a, e = so();
    return (n, l) => (b(), _(o(Hl), k({ "data-radix-vue-date-field-segment": "trigger" }, t, {
      onFocusin: l[0] || (l[0] = (s) => {
        var r;
        (r = o(e).dateFieldRef.value) == null || r.setFocusedElement(s.target);
      })
    }), {
      default: h(() => [
        C(n.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), tm = /* @__PURE__ */ w({
  __name: "DateRangePickerContent",
  props: {
    forceMount: { type: Boolean },
    trapFocus: { type: Boolean },
    side: {},
    sideOffset: {},
    align: {},
    alignOffset: {},
    avoidCollisions: { type: Boolean },
    collisionBoundary: {},
    collisionPadding: {},
    arrowPadding: {},
    sticky: {},
    hideWhenDetached: { type: Boolean },
    updatePositionStrategy: {},
    prioritizePosition: { type: Boolean },
    asChild: { type: Boolean },
    as: {},
    disableOutsidePointerEvents: { type: Boolean }
  },
  emits: ["escapeKeyDown", "pointerDownOutside", "focusOutside", "interactOutside", "openAutoFocus", "closeAutoFocus"],
  setup(a, { emit: t }) {
    const l = _e(a, t);
    return (s, r) => (b(), _(o(Wl), null, {
      default: h(() => [
        G(o(Ul), z(K({ ...o(l), ...s.$attrs })), {
          default: h(() => [
            C(s.$slots, "default")
          ]),
          _: 3
        }, 16)
      ]),
      _: 3
    }));
  }
}), cd = ["id", "value", "name", "disabled", "required"], [fd, pd] = Q("DateRangeFieldRoot"), vd = /* @__PURE__ */ w({
  inheritAttrs: !1,
  __name: "DateRangeFieldRoot",
  props: {
    defaultValue: { default: void 0 },
    defaultPlaceholder: {},
    placeholder: { default: void 0 },
    modelValue: {},
    hourCycle: {},
    granularity: {},
    hideTimeZone: { type: Boolean },
    maxValue: {},
    minValue: {},
    locale: { default: "en" },
    disabled: { type: Boolean, default: !1 },
    readonly: { type: Boolean, default: !1 },
    isDateUnavailable: { type: Function, default: void 0 },
    name: {},
    required: { type: Boolean },
    id: {},
    dir: {},
    asChild: { type: Boolean },
    as: {}
  },
  emits: ["update:modelValue", "update:placeholder"],
  setup(a, { expose: t, emit: e }) {
    var te, de;
    const n = a, l = e, { locale: s, disabled: r, readonly: i, isDateUnavailable: u, dir: d } = le(n), c = An(n.locale), { primitiveElement: f, currentElement: p } = qe(), v = B(/* @__PURE__ */ new Set()), y = be(d);
    se(() => {
      Array.from(p.value.querySelectorAll("[data-radix-vue-date-field-segment]")).filter((H) => H.getAttribute("data-radix-vue-date-field-segment") !== "literal").forEach((H) => v.value.add(H));
    });
    const m = ne(n, "modelValue", l, {
      defaultValue: n.defaultValue ?? { start: void 0, end: void 0 },
      passive: n.modelValue === void 0
    }), S = Ot({
      defaultPlaceholder: n.placeholder,
      granularity: n.granularity,
      defaultValue: m.value.start
    }), P = ne(n, "placeholder", l, {
      defaultValue: n.defaultPlaceholder ?? S.copy(),
      passive: n.placeholder === void 0
    }), D = T(() => n.granularity ? Zt(P.value) ? n.granularity : "day" : Zt(P.value) ? "minute" : "day"), g = T(() => {
      var H;
      return m.value.start ? !!((H = u.value) != null && H.call(u, m.value.start) || n.minValue && Le(m.value.start, n.minValue) || n.maxValue && Le(n.maxValue, m.value.start)) : !1;
    }), x = T(() => {
      var H;
      return m.value.end ? !!((H = u.value) != null && H.call(u, m.value.end) || n.minValue && Le(m.value.end, n.minValue) || n.maxValue && Le(n.maxValue, m.value.end)) : !1;
    }), E = T(() => g.value || x.value ? !0 : !m.value.start || !m.value.end ? !1 : !Le(m.value.start, m.value.end) || u.value !== void 0 && !Jo(
      m.value.start,
      m.value.end,
      u.value,
      void 0
    )), $ = Al(D.value), R = B(m.value.start ? { ...Tt({ value: m.value.start, formatter: c }) } : { ...$ }), M = B(m.value.end ? { ...Tt({ value: m.value.end, formatter: c }) } : { ...$ }), V = T(() => yn({
      granularity: D.value,
      dateRef: P.value,
      formatter: c,
      hideTimeZone: n.hideTimeZone,
      hourCycle: n.hourCycle,
      segmentValues: R.value,
      locale: s
    })), O = T(() => yn({
      granularity: D.value,
      dateRef: P.value,
      formatter: c,
      hideTimeZone: n.hideTimeZone,
      hourCycle: n.hourCycle,
      segmentValues: M.value,
      locale: s
    })), L = T(() => ({
      start: V.value.arr,
      end: O.value.arr
    })), j = T(() => ({ start: L.value.start.filter(({ part: H }) => H !== "literal"), end: L.value.end.filter(({ part: H }) => H !== "literal") })), J = B((te = m.value.start) == null ? void 0 : te.copy()), W = B((de = m.value.end) == null ? void 0 : de.copy());
    ee([J, W], ([H, oe]) => {
      var xe, ae;
      const ce = m.value;
      if (!(ce.start && ce.end && H && oe && ce.start.compare(H) === 0 && ce.end.compare(oe) === 0))
        if (H && oe) {
          if (((xe = m.value.start) == null ? void 0 : xe.compare(H)) === 0 && ((ae = m.value.end) == null ? void 0 : ae.compare(oe)) === 0)
            return;
          m.value = { start: H.copy(), end: oe.copy() };
        } else
          m.value.start && m.value.end && (m.value = { start: void 0, end: void 0 });
    }), ee(m, (H) => {
      H.start && H.end && ((!J.value || H.start.compare(J.value) !== 0) && (J.value = H.start.copy()), (!W.value || H.end.compare(W.value) !== 0) && (W.value = H.end.copy()));
    }), ee([J, s], ([H]) => {
      H !== void 0 ? R.value = { ...Tt({ value: H, formatter: c }) } : R.value = { ...$ };
    }), ee(s, (H) => {
      c.getLocale() !== H && c.setLocale(H);
    }), ee(m, (H) => {
      H.start !== void 0 && (!Se(P.value, H.start) || P.value.compare(H.start) !== 0) && (P.value = H.start.copy());
    }), ee([W, s], ([H]) => {
      H !== void 0 ? M.value = { ...Tt({ value: H, formatter: c }) } : M.value = { ...$ };
    });
    const X = B(null), N = T(() => Array.from(v.value).findIndex((H) => {
      var oe, ce;
      return H.getAttribute("data-radix-vue-date-field-segment") === ((oe = X.value) == null ? void 0 : oe.getAttribute("data-radix-vue-date-field-segment")) && H.getAttribute("data-radix-vue-date-range-field-segment-type") === ((ce = X.value) == null ? void 0 : ce.getAttribute("data-radix-vue-date-range-field-segment-type"));
    })), q = T(() => {
      const H = y.value === "rtl" ? -1 : 1;
      return (H < 0 ? N.value < 0 : N.value > v.value.size - 1) ? null : Array.from(v.value)[N.value + H];
    }), F = T(() => {
      const H = y.value === "rtl" ? -1 : 1;
      return (H > 0 ? N.value < 0 : N.value > v.value.size - 1) ? null : Array.from(v.value)[N.value - H];
    }), Z = ft();
    function U(H) {
      var oe, ce;
      We(H.key) && (H.key === Z.ARROW_LEFT && ((oe = F.value) == null || oe.focus()), H.key === Z.ARROW_RIGHT && ((ce = q.value) == null || ce.focus()));
    }
    function Y(H) {
      X.value = H;
    }
    return pd({
      isDateUnavailable: u.value,
      locale: s,
      startValue: J,
      endValue: W,
      placeholder: P,
      disabled: r,
      formatter: c,
      hourCycle: n.hourCycle,
      readonly: i,
      segmentValues: { start: R, end: M },
      isInvalid: E,
      segmentContents: j,
      elements: v,
      setFocusedElement: Y,
      focusNext() {
        var H;
        (H = q.value) == null || H.focus();
      }
    }), t({
      setFocusedElement: Y
    }), (H, oe) => {
      var ce, xe;
      return b(), fe(Pe, null, [
        G(o(A), k(H.$attrs, {
          ref_key: "primitiveElement",
          ref: f,
          role: "group",
          "aria-disabled": o(r) ? !0 : void 0,
          "data-disabled": o(r) ? "" : void 0,
          "data-readonly": o(i) ? "" : void 0,
          "data-invalid": E.value ? "" : void 0,
          dir: o(y),
          onKeydown: he(U, ["left", "right"])
        }), {
          default: h(() => [
            C(H.$slots, "default", {
              modelValue: o(m),
              segments: L.value
            })
          ]),
          _: 3
        }, 16, ["aria-disabled", "data-disabled", "data-readonly", "data-invalid", "dir"]),
        je("input", {
          id: H.id,
          type: "text",
          tabindex: "-1",
          "aria-hidden": "",
          value: `${(ce = o(m).start) == null ? void 0 : ce.toString()} - ${(xe = o(m).end) == null ? void 0 : xe.toString()}`,
          name: H.name,
          disabled: o(r),
          required: H.required,
          style: Ce({
            transform: "translateX(-100%)",
            position: "absolute",
            pointerEvents: "none",
            opacity: 0,
            margin: 0
          }),
          onFocus: oe[0] || (oe[0] = (ae) => {
            var we, De;
            return (De = (we = Array.from(v.value)) == null ? void 0 : we[0]) == null ? void 0 : De.focus();
          })
        }, null, 44, cd)
      ], 64);
    };
  }
}), md = /* @__PURE__ */ w({
  __name: "DateRangeFieldInput",
  props: {
    part: {},
    type: {},
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a, e = fd(), n = B(!0), l = B(!1), {
      handleSegmentClick: s,
      handleSegmentKeydown: r,
      attributes: i
    } = Ol({
      hasLeftFocus: n,
      lastKeyZero: l,
      placeholder: e.placeholder,
      hourCycle: e.hourCycle,
      segmentValues: e.segmentValues[t.type],
      formatter: e.formatter,
      part: t.part,
      disabled: e.disabled,
      readonly: e.readonly,
      focusNext: e.focusNext,
      modelValue: t.type === "start" ? e.startValue : e.endValue
    }), u = T(() => e.disabled.value), d = T(() => e.readonly.value), c = T(() => e.isInvalid.value);
    return (f, p) => (b(), _(o(A), k({
      as: f.as,
      "as-child": f.asChild
    }, o(i), {
      contenteditable: u.value || d.value ? !1 : f.part !== "literal",
      "data-radix-vue-date-field-segment": f.part,
      "aria-disabled": u.value ? !0 : void 0,
      "aria-readonly": d.value ? !0 : void 0,
      "data-disabled": u.value ? "" : void 0,
      "data-radix-vue-date-range-field-segment-type": f.type,
      "data-invalid": c.value ? "" : void 0,
      "aria-invalid": c.value ? !0 : void 0
    }, Pn(f.part !== "literal" ? {
      mousedown: o(s),
      keydown: o(r),
      focusout: () => {
        n.value = !0;
      },
      focusin: (v) => {
        o(e).setFocusedElement(v.target);
      }
    } : {})), {
      default: h(() => [
        C(f.$slots, "default")
      ]),
      _: 3
    }, 16, ["as", "as-child", "contenteditable", "data-radix-vue-date-field-segment", "aria-disabled", "aria-readonly", "data-disabled", "data-radix-vue-date-range-field-segment-type", "data-invalid", "aria-invalid"]));
  }
}), [kl, hd] = Q("DropdownMenuRoot"), am = /* @__PURE__ */ w({
  __name: "DropdownMenuRoot",
  props: {
    defaultOpen: { type: Boolean },
    open: { type: Boolean, default: void 0 },
    dir: {},
    modal: { type: Boolean, default: !0 }
  },
  emits: ["update:open"],
  setup(a, { emit: t }) {
    const e = a, n = t;
    I();
    const l = ne(e, "open", n, {
      defaultValue: e.defaultOpen,
      passive: e.open === void 0
    }), s = B(), { modal: r, dir: i } = le(e), u = be(i);
    return hd({
      open: l,
      onOpenChange: (d) => {
        l.value = d;
      },
      onOpenToggle: () => {
        l.value = !l.value;
      },
      triggerId: "",
      triggerElement: s,
      contentId: "",
      modal: r,
      dir: u
    }), (d, c) => (b(), _(o(jn), {
      open: o(l),
      "onUpdate:open": c[0] || (c[0] = (f) => wt(l) ? l.value = f : null),
      dir: o(u),
      modal: o(r)
    }, {
      default: h(() => [
        C(d.$slots, "default")
      ]),
      _: 3
    }, 8, ["open", "dir", "modal"]));
  }
}), nm = /* @__PURE__ */ w({
  __name: "DropdownMenuTrigger",
  props: {
    disabled: { type: Boolean },
    asChild: { type: Boolean },
    as: { default: "button" }
  },
  setup(a) {
    const t = a, e = kl(), { forwardRef: n, currentElement: l } = I();
    return se(() => {
      e.triggerElement = l;
    }), e.triggerId || (e.triggerId = me(void 0, "radix-vue-dropdown-menu-trigger")), (s, r) => (b(), _(o(Va), { "as-child": "" }, {
      default: h(() => [
        G(o(A), {
          id: o(e).triggerId,
          ref: o(n),
          type: s.as === "button" ? "button" : void 0,
          "as-child": t.asChild,
          as: s.as,
          "aria-haspopup": "menu",
          "aria-expanded": o(e).open.value,
          "aria-controls": o(e).open.value ? o(e).contentId : void 0,
          "data-disabled": s.disabled ? "" : void 0,
          disabled: s.disabled,
          "data-state": o(e).open.value ? "open" : "closed",
          onClick: r[0] || (r[0] = async (i) => {
            var u;
            !s.disabled && i.button === 0 && i.ctrlKey === !1 && ((u = o(e)) == null || u.onOpenToggle(), await re(), o(e).open.value && i.preventDefault());
          }),
          onKeydown: r[1] || (r[1] = he(
            (i) => {
              s.disabled || (["Enter", " "].includes(i.key) && o(e).onOpenToggle(), i.key === "ArrowDown" && o(e).onOpenChange(!0), ["Enter", " ", "ArrowDown"].includes(i.key) && i.preventDefault());
            },
            ["enter", "space", "arrow-down"]
          ))
        }, {
          default: h(() => [
            C(s.$slots, "default")
          ]),
          _: 3
        }, 8, ["id", "type", "as-child", "as", "aria-expanded", "aria-controls", "data-disabled", "disabled", "data-state"])
      ]),
      _: 3
    }));
  }
}), om = /* @__PURE__ */ w({
  __name: "DropdownMenuPortal",
  props: {
    to: {},
    disabled: { type: Boolean },
    forceMount: { type: Boolean }
  },
  setup(a) {
    const t = a;
    return (e, n) => (b(), _(o(Jn), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), lm = /* @__PURE__ */ w({
  __name: "DropdownMenuContent",
  props: {
    forceMount: { type: Boolean },
    loop: { type: Boolean },
    side: {},
    sideOffset: {},
    align: {},
    alignOffset: {},
    avoidCollisions: { type: Boolean },
    collisionBoundary: {},
    collisionPadding: {},
    arrowPadding: {},
    sticky: {},
    hideWhenDetached: { type: Boolean },
    updatePositionStrategy: {},
    prioritizePosition: { type: Boolean },
    asChild: { type: Boolean },
    as: {}
  },
  emits: ["escapeKeyDown", "pointerDownOutside", "focusOutside", "interactOutside", "closeAutoFocus"],
  setup(a, { emit: t }) {
    const l = _e(a, t);
    I();
    const s = kl(), r = B(!1);
    function i(u) {
      u.defaultPrevented || (r.value || setTimeout(() => {
        var d;
        (d = s.triggerElement.value) == null || d.focus();
      }, 0), r.value = !1, u.preventDefault());
    }
    return s.contentId || (s.contentId = me(void 0, "radix-vue-dropdown-menu-content")), (u, d) => {
      var c;
      return b(), _(o(Xn), k(o(l), {
        id: o(s).contentId,
        "aria-labelledby": (c = o(s)) == null ? void 0 : c.triggerId,
        style: {
          "--radix-dropdown-menu-content-transform-origin": "var(--radix-popper-transform-origin)",
          "--radix-dropdown-menu-content-available-width": "var(--radix-popper-available-width)",
          "--radix-dropdown-menu-content-available-height": "var(--radix-popper-available-height)",
          "--radix-dropdown-menu-trigger-width": "var(--radix-popper-anchor-width)",
          "--radix-dropdown-menu-trigger-height": "var(--radix-popper-anchor-height)"
        },
        onCloseAutoFocus: i,
        onInteractOutside: d[0] || (d[0] = (f) => {
          var m;
          if (f.defaultPrevented)
            return;
          const p = f.detail.originalEvent, v = p.button === 0 && p.ctrlKey === !0, y = p.button === 2 || v;
          (!o(s).modal.value || y) && (r.value = !0), (m = o(s).triggerElement.value) != null && m.contains(f.target) && f.preventDefault();
        })
      }), {
        default: h(() => [
          C(u.$slots, "default")
        ]),
        _: 3
      }, 16, ["id", "aria-labelledby", "style"]);
    };
  }
}), sm = /* @__PURE__ */ w({
  __name: "DropdownMenuArrow",
  props: {
    width: { default: 10 },
    height: { default: 5 },
    asChild: { type: Boolean },
    as: { default: "svg" }
  },
  setup(a) {
    const t = a;
    return I(), (e, n) => (b(), _(o(Wn), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), rm = /* @__PURE__ */ w({
  __name: "DropdownMenuItem",
  props: {
    disabled: { type: Boolean },
    textValue: {},
    asChild: { type: Boolean },
    as: {}
  },
  emits: ["select"],
  setup(a, { emit: t }) {
    const e = a, l = Ie(t);
    return I(), (s, r) => (b(), _(o(ua), z(K({ ...e, ...o(l) })), {
      default: h(() => [
        C(s.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), im = /* @__PURE__ */ w({
  __name: "DropdownMenuGroup",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    return I(), (e, n) => (b(), _(o(Fa), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), um = /* @__PURE__ */ w({
  __name: "DropdownMenuSeparator",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    return I(), (e, n) => (b(), _(o(to), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), dm = /* @__PURE__ */ w({
  __name: "DropdownMenuCheckboxItem",
  props: {
    checked: { type: [Boolean, String] },
    disabled: { type: Boolean },
    textValue: {},
    asChild: { type: Boolean },
    as: {}
  },
  emits: ["select", "update:checked"],
  setup(a, { emit: t }) {
    const e = a, l = Ie(t);
    return I(), (s, r) => (b(), _(o(Yn), z(K({ ...e, ...o(l) })), {
      default: h(() => [
        C(s.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), cm = /* @__PURE__ */ w({
  __name: "DropdownMenuItemIndicator",
  props: {
    forceMount: { type: Boolean },
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    return I(), (e, n) => (b(), _(o(qn), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), fm = /* @__PURE__ */ w({
  __name: "DropdownMenuLabel",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    return I(), (e, n) => (b(), _(o(Zn), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), pm = /* @__PURE__ */ w({
  __name: "DropdownMenuRadioGroup",
  props: {
    modelValue: {},
    asChild: { type: Boolean },
    as: {}
  },
  emits: ["update:modelValue"],
  setup(a, { emit: t }) {
    const e = a, l = Ie(t);
    return I(), (s, r) => (b(), _(o(Qn), z(K({ ...e, ...o(l) })), {
      default: h(() => [
        C(s.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), vm = /* @__PURE__ */ w({
  __name: "DropdownMenuRadioItem",
  props: {
    value: {},
    disabled: { type: Boolean },
    textValue: {},
    asChild: { type: Boolean },
    as: {}
  },
  emits: ["select"],
  setup(a, { emit: t }) {
    const l = _e(a, t);
    return I(), (s, r) => (b(), _(o(eo), z(K(o(l))), {
      default: h(() => [
        C(s.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), mm = /* @__PURE__ */ w({
  __name: "DropdownMenuSub",
  props: {
    defaultOpen: { type: Boolean },
    open: { type: Boolean, default: void 0 }
  },
  emits: ["update:open"],
  setup(a, { emit: t }) {
    const e = a, l = ne(e, "open", t, {
      passive: e.open === void 0,
      defaultValue: e.defaultOpen ?? !1
    });
    return I(), (s, r) => (b(), _(o(ao), {
      open: o(l),
      "onUpdate:open": r[0] || (r[0] = (i) => wt(l) ? l.value = i : null)
    }, {
      default: h(() => [
        C(s.$slots, "default")
      ]),
      _: 3
    }, 8, ["open"]));
  }
}), hm = /* @__PURE__ */ w({
  __name: "DropdownMenuSubContent",
  props: {
    forceMount: { type: Boolean },
    loop: { type: Boolean },
    sideOffset: {},
    alignOffset: {},
    avoidCollisions: { type: Boolean },
    collisionBoundary: {},
    collisionPadding: {},
    arrowPadding: {},
    sticky: {},
    hideWhenDetached: { type: Boolean },
    updatePositionStrategy: {},
    prioritizePosition: { type: Boolean },
    asChild: { type: Boolean },
    as: {}
  },
  emits: ["escapeKeyDown", "pointerDownOutside", "focusOutside", "interactOutside", "entryFocus", "openAutoFocus", "closeAutoFocus"],
  setup(a, { emit: t }) {
    const l = _e(a, t);
    return I(), (s, r) => (b(), _(o(no), k(o(l), { style: {
      "--radix-dropdown-menu-content-transform-origin": "var(--radix-popper-transform-origin)",
      "--radix-dropdown-menu-content-available-width": "var(--radix-popper-available-width)",
      "--radix-dropdown-menu-content-available-height": "var(--radix-popper-available-height)",
      "--radix-dropdown-menu-trigger-width": "var(--radix-popper-anchor-width)",
      "--radix-dropdown-menu-trigger-height": "var(--radix-popper-anchor-height)"
    } }), {
      default: h(() => [
        C(s.$slots, "default")
      ]),
      _: 3
    }, 16, ["style"]));
  }
}), ym = /* @__PURE__ */ w({
  __name: "DropdownMenuSubTrigger",
  props: {
    disabled: { type: Boolean },
    textValue: {},
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    return I(), (e, n) => (b(), _(o(oo), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), [ro, yd] = Q("HoverCardRoot"), gm = /* @__PURE__ */ w({
  __name: "HoverCardRoot",
  props: {
    defaultOpen: { type: Boolean, default: !1 },
    open: { type: Boolean, default: void 0 },
    openDelay: { default: 700 },
    closeDelay: { default: 300 }
  },
  emits: ["update:open"],
  setup(a, { emit: t }) {
    const e = a, n = t, { openDelay: l, closeDelay: s } = le(e);
    I();
    const r = ne(e, "open", n, {
      defaultValue: e.defaultOpen,
      passive: e.open === void 0
    }), i = B(0), u = B(0), d = B(!1), c = B(!1), f = B(!1), p = B();
    function v() {
      clearTimeout(u.value), i.value = window.setTimeout(() => r.value = !0, l.value);
    }
    function y() {
      clearTimeout(i.value), !d.value && !c.value && (u.value = window.setTimeout(() => r.value = !1, s.value));
    }
    function m() {
      r.value = !1;
    }
    return yd({
      open: r,
      onOpenChange(S) {
        r.value = S;
      },
      onOpen: v,
      onClose: y,
      onDismiss: m,
      hasSelectionRef: d,
      isPointerDownOnContentRef: c,
      isPointerInTransit: f,
      triggerElement: p
    }), (S, P) => (b(), _(o(xt), null, {
      default: h(() => [
        C(S.$slots, "default")
      ]),
      _: 3
    }));
  }
});
function Ml(a) {
  return (t) => t.pointerType === "touch" ? void 0 : a();
}
function gd(a) {
  const t = [], e = document.createTreeWalker(a, NodeFilter.SHOW_ELEMENT, {
    acceptNode: (n) => n.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP
  });
  for (; e.nextNode(); )
    t.push(e.currentNode);
  return t;
}
const bm = /* @__PURE__ */ w({
  __name: "HoverCardTrigger",
  props: {
    asChild: { type: Boolean },
    as: { default: "a" }
  },
  setup(a) {
    const { forwardRef: t, currentElement: e } = I(), n = ro();
    return n.triggerElement = e, (l, s) => (b(), _(o(St), { "as-child": "" }, {
      default: h(() => [
        G(o(A), {
          ref: o(t),
          "as-child": l.asChild,
          as: l.as,
          "data-state": o(n).open.value ? "open" : "closed",
          onPointerenter: s[0] || (s[0] = (r) => o(Ml)(o(n).onOpen)(r)),
          onFocus: s[1] || (s[1] = (r) => o(n).onOpen()),
          onBlur: s[2] || (s[2] = (r) => o(n).onClose())
        }, {
          default: h(() => [
            C(l.$slots, "default")
          ]),
          _: 3
        }, 8, ["as-child", "as", "data-state"])
      ]),
      _: 3
    }));
  }
}), Cm = /* @__PURE__ */ w({
  __name: "HoverCardPortal",
  props: {
    to: {},
    disabled: { type: Boolean },
    forceMount: { type: Boolean }
  },
  setup(a) {
    const t = a;
    return (e, n) => (b(), _(o(pt), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), bd = /* @__PURE__ */ w({
  __name: "HoverCardContentImpl",
  props: {
    side: {},
    sideOffset: {},
    align: {},
    alignOffset: {},
    avoidCollisions: { type: Boolean },
    collisionBoundary: {},
    collisionPadding: {},
    arrowPadding: {},
    sticky: {},
    hideWhenDetached: { type: Boolean },
    updatePositionStrategy: {},
    prioritizePosition: { type: Boolean },
    asChild: { type: Boolean },
    as: {}
  },
  emits: ["escapeKeyDown", "pointerDownOutside", "focusOutside", "interactOutside"],
  setup(a, { emit: t }) {
    const e = a, n = t, l = _t(e), { forwardRef: s, currentElement: r } = I(), i = ro(), { isPointerInTransit: u, onPointerExit: d } = rl(i.triggerElement, r);
    i.isPointerInTransit = u, d(() => {
      i.onClose();
    });
    const c = B(!1);
    let f;
    ve((v) => {
      if (c.value) {
        const y = document.body;
        f = y.style.userSelect || y.style.webkitUserSelect, y.style.userSelect = "none", y.style.webkitUserSelect = "none", v(() => {
          y.style.userSelect = f, y.style.webkitUserSelect = f;
        });
      }
    });
    function p() {
      c.value = !1, i.isPointerDownOnContentRef.value = !1, re(() => {
        var y;
        ((y = document.getSelection()) == null ? void 0 : y.toString()) !== "" && (i.hasSelectionRef.value = !0);
      });
    }
    return se(() => {
      r.value && (document.addEventListener("pointerup", p), gd(r.value).forEach((y) => y.setAttribute("tabindex", "-1")));
    }), Te(() => {
      document.removeEventListener("pointerup", p), i.hasSelectionRef.value = !1, i.isPointerDownOnContentRef.value = !1;
    }), (v, y) => (b(), _(o(vt), {
      "as-child": "",
      "disable-outside-pointer-events": !1,
      onEscapeKeyDown: y[1] || (y[1] = (m) => n("escapeKeyDown", m)),
      onPointerDownOutside: y[2] || (y[2] = (m) => n("pointerDownOutside", m)),
      onFocusOutside: y[3] || (y[3] = ge((m) => n("focusOutside", m), ["prevent"])),
      onDismiss: o(i).onDismiss
    }, {
      default: h(() => [
        G(o(Ct), k({ ...o(l), ...v.$attrs }, {
          ref: o(s),
          "data-state": o(i).open.value ? "open" : "closed",
          style: {
            userSelect: c.value ? "text" : void 0,
            // Safari requires prefix
            WebkitUserSelect: c.value ? "text" : void 0,
            // re-namespace exposed content custom properties
            "--radix-hover-card-content-transform-origin": "var(--radix-popper-transform-origin)",
            "--radix-hover-card-content-available-width": "var(--radix-popper-available-width)",
            "--radix-hover-card-content-available-height": "var(--radix-popper-available-height)",
            "--radix-hover-card-trigger-width": "var(--radix-popper-anchor-width)",
            "--radix-hover-card-trigger-height": "var(--radix-popper-anchor-height)"
          },
          onPointerdown: y[0] || (y[0] = (m) => {
            m.currentTarget.contains(m.target) && (c.value = !0), o(i).hasSelectionRef.value = !1, o(i).isPointerDownOnContentRef.value = !0;
          })
        }), {
          default: h(() => [
            C(v.$slots, "default")
          ]),
          _: 3
        }, 16, ["data-state", "style"])
      ]),
      _: 3
    }, 8, ["onDismiss"]));
  }
}), wm = /* @__PURE__ */ w({
  __name: "HoverCardContent",
  props: {
    forceMount: { type: Boolean },
    side: {},
    sideOffset: {},
    align: {},
    alignOffset: {},
    avoidCollisions: { type: Boolean },
    collisionBoundary: {},
    collisionPadding: {},
    arrowPadding: {},
    sticky: {},
    hideWhenDetached: { type: Boolean },
    updatePositionStrategy: {},
    prioritizePosition: { type: Boolean },
    asChild: { type: Boolean },
    as: {}
  },
  emits: ["escapeKeyDown", "pointerDownOutside", "focusOutside", "interactOutside"],
  setup(a, { emit: t }) {
    const l = _e(a, t), { forwardRef: s } = I(), r = ro();
    return (i, u) => (b(), _(o(Ee), {
      present: i.forceMount || o(r).open.value
    }, {
      default: h(() => [
        G(bd, k(o(l), {
          ref: o(s),
          onPointerenter: u[0] || (u[0] = (d) => o(Ml)(o(r).onOpen)(d))
        }), {
          default: h(() => [
            C(i.$slots, "default")
          ]),
          _: 3
        }, 16)
      ]),
      _: 3
    }, 8, ["present"]));
  }
}), _m = /* @__PURE__ */ w({
  __name: "HoverCardArrow",
  props: {
    width: { default: 10 },
    height: { default: 5 },
    asChild: { type: Boolean },
    as: { default: "svg" }
  },
  setup(a) {
    const t = a;
    return I(), (e, n) => (b(), _(o(Lt), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), xm = /* @__PURE__ */ w({
  __name: "Label",
  props: {
    for: {},
    asChild: { type: Boolean },
    as: { default: "label" }
  },
  setup(a) {
    const t = a;
    return I(), (e, n) => (b(), _(o(A), k(t, {
      onMousedown: n[0] || (n[0] = (l) => {
        !l.defaultPrevented && l.detail > 1 && l.preventDefault();
      })
    }), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
});
function Cd(a) {
  return a == null ? void 0 : a.querySelector("[data-state=checked]");
}
function wd(a, t, e) {
  return a === void 0 ? !1 : Array.isArray(a) ? a.some((n) => Rt(n, t, e)) : Rt(a, t, e);
}
function Rt(a, t, e) {
  return a === void 0 || t === void 0 ? !1 : typeof a == "string" ? a === t : typeof e == "function" ? e(a, t) : typeof e == "string" ? (a == null ? void 0 : a[e]) === (t == null ? void 0 : t[e]) : Xe(a, t);
}
function ba(a, t, e) {
  const n = a.findIndex((i) => Xe(i, t)), l = a.findIndex((i) => Xe(i, e));
  if (n === -1 || l === -1)
    return [];
  const [s, r] = [n, l].sort((i, u) => i - u);
  return a.slice(s, r + 1);
}
const [La, _d] = Q("ListboxRoot"), Sm = /* @__PURE__ */ w({
  __name: "ListboxRoot",
  props: {
    modelValue: {},
    defaultValue: {},
    multiple: { type: Boolean },
    orientation: { default: "vertical" },
    dir: {},
    disabled: { type: Boolean },
    selectionBehavior: { default: "toggle" },
    highlightOnHover: { type: Boolean },
    by: {},
    name: {},
    asChild: { type: Boolean },
    as: {}
  },
  emits: ["update:modelValue", "highlight", "entryFocus", "leave"],
  setup(a, { emit: t }) {
    const e = a, n = t, { multiple: l, highlightOnHover: s, orientation: r, disabled: i, selectionBehavior: u, dir: d } = le(e), { getItems: c } = Oa(), { handleTypeaheadSearch: f } = Ia(), { primitiveElement: p, currentElement: v } = qe(), y = ft(), m = be(d), S = ct(v), P = B(), D = B(!1), g = B(!0), x = ne(e, "modelValue", n, {
      defaultValue: e.defaultValue ?? (l.value ? [] : void 0),
      passive: e.modelValue === void 0,
      deep: !0
    });
    function E(U) {
      if (D.value = !0, Array.isArray(x.value)) {
        const Y = x.value.findIndex((te) => Rt(te, U, e.by));
        e.selectionBehavior === "toggle" ? Y === -1 ? x.value.push(U) : x.value.splice(Y, 1) : (x.value = [U], P.value = U);
      } else
        e.selectionBehavior === "toggle" && Rt(x.value, U, e.by) ? x.value = void 0 : x.value = U;
      setTimeout(() => {
        D.value = !1;
      }, 1);
    }
    const $ = B(null), R = B(null), M = B(!1), V = fn(), O = fn();
    function L() {
      return c().map((U) => U.ref).filter((U) => U.dataset.disabled !== "");
    }
    function j(U) {
      $.value = U, $.value.focus(), $.value.scrollIntoView({ block: "nearest" });
      const Y = c().find((te) => te.ref === U);
      n("highlight", Y);
    }
    function J(U) {
      $.value && $.value.click();
    }
    function W(U) {
      if (D.value = !0, M.value)
        O.trigger(U);
      else {
        const Y = U.altKey || U.ctrlKey || U.metaKey;
        if (Y && U.key === "a" && l.value) {
          const te = c(), de = te.map((H) => H.value);
          x.value = [...de], U.preventDefault(), j(te[te.length - 1].ref);
        } else if (!Y) {
          const te = f(U.key, L());
          te && j(te);
        }
      }
      setTimeout(() => {
        D.value = !1;
      }, 1);
    }
    function X(U) {
      R.value = $.value, $.value = null, n("leave", U);
    }
    function N(U) {
      var te, de;
      const Y = new CustomEvent("listbox.entryFocus", { bubbles: !1, cancelable: !0 });
      if ((te = U.currentTarget) == null || te.dispatchEvent(Y), n("entryFocus", Y), !Y.defaultPrevented)
        if (R.value)
          j(R.value);
        else {
          const H = (de = L()) == null ? void 0 : de[0];
          j(H);
        }
    }
    function q(U) {
      const Y = Dl(U, r.value, m.value);
      if (!Y)
        return;
      let te = L();
      if ($.value) {
        if (Y === "last")
          te.reverse();
        else if (Y === "prev" || Y === "next") {
          Y === "prev" && te.reverse();
          const de = te.indexOf($.value);
          te = te.slice(de + 1);
        }
        F(U, te[0]);
      }
      if (te.length) {
        const de = !$.value && Y === "prev" ? te.length - 1 : 0;
        j(te[de]);
      }
      if (M.value)
        return O.trigger(U);
    }
    function F(U, Y) {
      var de;
      if (!(M.value || e.selectionBehavior !== "replace" || !l.value || !Array.isArray(x.value) || (U.altKey || U.ctrlKey || U.metaKey) && !U.shiftKey) && U.shiftKey) {
        const H = c().filter((xe) => xe.ref.dataset.disabled !== "");
        let oe = (de = H.find((xe) => xe.ref === Y)) == null ? void 0 : de.value;
        if (U.key === y.END ? oe = H[H.length - 1].value : U.key === y.HOME && (oe = H[0].value), !oe || !P.value)
          return;
        const ce = ba(H.map((xe) => xe.value), P.value, oe);
        x.value = ce;
      }
    }
    async function Z(U) {
      if (M.value)
        V.trigger(U);
      else {
        await re();
        const te = L().find((de) => de.dataset.state === "checked");
        te && j(te);
      }
    }
    return ee(x, () => {
      D.value || re(() => {
        Z();
      });
    }, { immediate: !0, deep: !0 }), _d({
      modelValue: x,
      // @ts-expect-error igoring
      onValueChange: E,
      multiple: l,
      orientation: r,
      dir: m,
      disabled: i,
      highlightOnHover: s,
      highlightedElement: $,
      isVirtual: M,
      virtualFocusHook: V,
      virtualKeydownHook: O,
      by: e.by,
      firstValue: P,
      selectionBehavior: u,
      focusable: g,
      onLeave: X,
      onEnter: N,
      onChangeHighlight: j,
      onKeydownEnter: J,
      onKeydownNavigation: q,
      onKeydownTypeAhead: W
    }), (U, Y) => (b(), _(o(A), {
      ref_key: "primitiveElement",
      ref: p,
      as: U.as,
      "as-child": U.asChild,
      dir: o(m),
      "data-disabled": o(i) ? "" : void 0,
      onPointerleave: X,
      onFocusout: Y[0] || (Y[0] = (te) => {
        const de = te.relatedTarget || te.target;
        $.value && !o(v).contains(de) && X(te);
      })
    }, {
      default: h(() => [
        C(U.$slots, "default", { modelValue: o(x) }),
        o(S) && e.name ? (b(), _(o(zn), {
          key: 0,
          name: e.name,
          value: o(x)
        }, null, 8, ["name", "value"])) : ue("", !0)
      ]),
      _: 3
    }, 8, ["as", "as-child", "dir", "data-disabled"]));
  }
}), Pm = /* @__PURE__ */ w({
  __name: "ListboxContent",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = La(), e = kt(!1, 10);
    return (n, l) => (b(), _(o(ka), null, {
      default: h(() => [
        G(o(A), {
          role: "listbox",
          as: n.as,
          "as-child": n.asChild,
          tabindex: o(t).focusable.value ? o(t).highlightedElement.value ? "-1" : "0" : void 0,
          "data-orientation": o(t).orientation.value,
          onMousedown: l[0] || (l[0] = ge((s) => e.value = !0, ["left"])),
          onFocus: l[1] || (l[1] = (s) => {
            o(e) || o(t).onEnter(s);
          }),
          onKeydown: [
            l[2] || (l[2] = he(ge((s) => {
              o(t).focusable.value && o(t).onKeydownNavigation(s);
            }, ["prevent"]), ["down", "up", "home", "end"])),
            he(o(t).onKeydownEnter, ["enter"]),
            o(t).onKeydownTypeAhead
          ]
        }, {
          default: h(() => [
            C(n.$slots, "default")
          ]),
          _: 3
        }, 8, ["as", "as-child", "tabindex", "data-orientation", "onKeydown"])
      ]),
      _: 3
    }));
  }
}), Em = /* @__PURE__ */ w({
  __name: "ListboxFilter",
  props: {
    modelValue: {},
    autoFocus: { type: Boolean },
    asChild: { type: Boolean },
    as: { default: "input" }
  },
  emits: ["update:modelValue"],
  setup(a, { emit: t }) {
    const e = a, l = ne(e, "modelValue", t, {
      defaultValue: "",
      passive: e.modelValue === void 0
    }), s = La();
    s.focusable.value = !1;
    const { primitiveElement: r, currentElement: i } = qe();
    return se(() => {
      setTimeout(() => {
        var u;
        e.autoFocus && ((u = i.value) == null || u.focus());
      }, 1);
    }), (u, d) => (b(), _(o(A), {
      ref_key: "primitiveElement",
      ref: r,
      as: u.as,
      "as-child": u.asChild,
      value: o(l),
      disabled: o(s).disabled.value ? "" : void 0,
      "data-disabled": o(s).disabled.value ? "" : void 0,
      type: "text",
      onKeydown: [
        he(ge(o(s).onKeydownNavigation, ["prevent"]), ["down", "up", "home", "end"]),
        he(o(s).onKeydownEnter, ["enter"])
      ],
      onInput: d[0] || (d[0] = (c) => {
        l.value = c.target.value;
      })
    }, {
      default: h(() => [
        C(u.$slots, "default")
      ]),
      _: 3
    }, 8, ["as", "as-child", "value", "disabled", "data-disabled", "onKeydown"]));
  }
}), xd = "listbox.select", [Sd, Pd] = Q("ListboxItem"), Dm = /* @__PURE__ */ w({
  __name: "ListboxItem",
  props: {
    value: {},
    disabled: { type: Boolean },
    asChild: { type: Boolean },
    as: { default: "div" }
  },
  emits: ["select"],
  setup(a, { emit: t }) {
    const e = a, n = t, { forwardRef: l, currentElement: s } = I(), r = me(void 0, "radix-vue-listbox-item"), i = La(), u = T(() => s.value === i.highlightedElement.value), d = T(() => wd(i.modelValue.value, e.value, i.by)), c = T(() => i.disabled.value || e.disabled);
    async function f(v) {
      n("select", v), !(v != null && v.defaultPrevented) && !c.value && v && (i.onValueChange(e.value), i.onChangeHighlight(v.target));
    }
    function p(v) {
      const y = { originalEvent: v, value: e.value };
      $a(xd, f, y);
    }
    return Pd({
      isSelected: d
    }), (v, y) => (b(), _(o(Ma), null, {
      default: h(() => [
        G(o(A), {
          id: o(r),
          ref: o(l),
          role: "option",
          tabindex: o(i).focusable.value ? u.value ? "0" : "-1" : void 0,
          "aria-selected": d.value,
          as: v.as,
          "as-child": v.asChild,
          disabled: c.value ? "" : void 0,
          "data-disabled": c.value ? "" : void 0,
          "data-highlighted": u.value ? "" : void 0,
          "data-state": d.value ? "checked" : "unchecked",
          onClick: p,
          onKeydown: he(ge(p, ["prevent"]), ["space"]),
          onPointermove: y[0] || (y[0] = (m) => {
            o(i).highlightOnHover.value ? o(i).onChangeHighlight(o(s)) : o(i).focusable.value || o(i).onChangeHighlight(o(s));
          })
        }, {
          default: h(() => [
            C(v.$slots, "default")
          ]),
          _: 3
        }, 8, ["id", "tabindex", "aria-selected", "as", "as-child", "disabled", "data-disabled", "data-highlighted", "data-state", "onKeydown"])
      ]),
      _: 3
    }));
  }
}), $m = /* @__PURE__ */ w({
  __name: "ListboxItemIndicator",
  props: {
    asChild: { type: Boolean },
    as: { default: "span" }
  },
  setup(a) {
    const t = a;
    I();
    const e = Sd();
    return (n, l) => o(e).isSelected.value ? (b(), _(o(A), k({
      key: 0,
      "aria-hidden": ""
    }, t), {
      default: h(() => [
        C(n.$slots, "default")
      ]),
      _: 3
    }, 16)) : ue("", !0);
  }
});
function Bt(a, t, e) {
  let n = e.initialDeps ?? [], l;
  return () => {
    var s, r, i, u;
    let d;
    e.key && ((s = e.debug) != null && s.call(e)) && (d = Date.now());
    const c = a();
    if (!(c.length !== n.length || c.some((v, y) => n[y] !== v)))
      return l;
    n = c;
    let p;
    if (e.key && ((r = e.debug) != null && r.call(e)) && (p = Date.now()), l = t(...c), e.key && ((i = e.debug) != null && i.call(e))) {
      const v = Math.round((Date.now() - d) * 100) / 100, y = Math.round((Date.now() - p) * 100) / 100, m = y / 16, S = (P, D) => {
        for (P = String(P); P.length < D; )
          P = " " + P;
        return P;
      };
      console.info(
        `%c⏱ ${S(y, 5)} /${S(v, 5)} ms`,
        `
            font-size: .6rem;
            font-weight: bold;
            color: hsl(${Math.max(
          0,
          Math.min(120 - 120 * m, 120)
        )}deg 100% 31%);`,
        e == null ? void 0 : e.key
      );
    }
    return (u = e == null ? void 0 : e.onChange) == null || u.call(e, l), l;
  };
}
function rn(a, t) {
  if (a === void 0)
    throw new Error(`Unexpected undefined${t ? `: ${t}` : ""}`);
  return a;
}
const Ed = (a, t) => Math.abs(a - t) < 1, Dd = (a) => a, $d = (a) => {
  const t = Math.max(a.startIndex - a.overscan, 0), e = Math.min(a.endIndex + a.overscan, a.count - 1), n = [];
  for (let l = t; l <= e; l++)
    n.push(l);
  return n;
}, Bd = (a, t) => {
  const e = a.scrollElement;
  if (!e)
    return;
  const n = (s) => {
    const { width: r, height: i } = s;
    t({ width: Math.round(r), height: Math.round(i) });
  };
  if (n(e.getBoundingClientRect()), typeof ResizeObserver > "u")
    return () => {
    };
  const l = new ResizeObserver((s) => {
    const r = s[0];
    if (r != null && r.borderBoxSize) {
      const i = r.borderBoxSize[0];
      if (i) {
        n({ width: i.inlineSize, height: i.blockSize });
        return;
      }
    }
    n(e.getBoundingClientRect());
  });
  return l.observe(e, { box: "border-box" }), () => {
    l.unobserve(e);
  };
}, Td = (a, t) => {
  const e = a.scrollElement;
  if (!e)
    return;
  const n = () => {
    t(e[a.options.horizontal ? "scrollLeft" : "scrollTop"]);
  };
  return n(), e.addEventListener("scroll", n, {
    passive: !0
  }), () => {
    e.removeEventListener("scroll", n);
  };
}, Id = (a, t, e) => {
  if (t != null && t.borderBoxSize) {
    const n = t.borderBoxSize[0];
    if (n)
      return Math.round(
        n[e.options.horizontal ? "inlineSize" : "blockSize"]
      );
  }
  return Math.round(
    a.getBoundingClientRect()[e.options.horizontal ? "width" : "height"]
  );
}, Rd = (a, {
  adjustments: t = 0,
  behavior: e
}, n) => {
  var l, s;
  const r = a + t;
  (s = (l = n.scrollElement) == null ? void 0 : l.scrollTo) == null || s.call(l, {
    [n.options.horizontal ? "left" : "top"]: r,
    behavior: e
  });
};
class Ad {
  constructor(t) {
    this.unsubs = [], this.scrollElement = null, this.isScrolling = !1, this.isScrollingTimeoutId = null, this.scrollToIndexTimeoutId = null, this.measurementsCache = [], this.itemSizeCache = /* @__PURE__ */ new Map(), this.pendingMeasuredCacheIndexes = [], this.scrollDirection = null, this.scrollAdjustments = 0, this.measureElementCache = /* @__PURE__ */ new Map(), this.observer = /* @__PURE__ */ (() => {
      let e = null;
      const n = () => e || (typeof ResizeObserver < "u" ? e = new ResizeObserver((l) => {
        l.forEach((s) => {
          this._measureElement(s.target, s);
        });
      }) : null);
      return {
        disconnect: () => {
          var l;
          return (l = n()) == null ? void 0 : l.disconnect();
        },
        observe: (l) => {
          var s;
          return (s = n()) == null ? void 0 : s.observe(l, { box: "border-box" });
        },
        unobserve: (l) => {
          var s;
          return (s = n()) == null ? void 0 : s.unobserve(l);
        }
      };
    })(), this.range = null, this.setOptions = (e) => {
      Object.entries(e).forEach(([n, l]) => {
        typeof l > "u" && delete e[n];
      }), this.options = {
        debug: !1,
        initialOffset: 0,
        overscan: 1,
        paddingStart: 0,
        paddingEnd: 0,
        scrollPaddingStart: 0,
        scrollPaddingEnd: 0,
        horizontal: !1,
        getItemKey: Dd,
        rangeExtractor: $d,
        onChange: () => {
        },
        measureElement: Id,
        initialRect: { width: 0, height: 0 },
        scrollMargin: 0,
        scrollingDelay: 150,
        indexAttribute: "data-index",
        initialMeasurementsCache: [],
        lanes: 1,
        ...e
      };
    }, this.notify = (e) => {
      var n, l;
      (l = (n = this.options).onChange) == null || l.call(n, this, e);
    }, this.maybeNotify = Bt(
      () => (this.calculateRange(), [
        this.isScrolling,
        this.range ? this.range.startIndex : null,
        this.range ? this.range.endIndex : null
      ]),
      (e) => {
        this.notify(e);
      },
      {
        key: process.env.NODE_ENV !== "production" && "maybeNotify",
        debug: () => this.options.debug,
        initialDeps: [
          this.isScrolling,
          this.range ? this.range.startIndex : null,
          this.range ? this.range.endIndex : null
        ]
      }
    ), this.cleanup = () => {
      this.unsubs.filter(Boolean).forEach((e) => e()), this.unsubs = [], this.scrollElement = null;
    }, this._didMount = () => (this.measureElementCache.forEach(this.observer.observe), () => {
      this.observer.disconnect(), this.cleanup();
    }), this._willUpdate = () => {
      const e = this.options.getScrollElement();
      this.scrollElement !== e && (this.cleanup(), this.scrollElement = e, this._scrollToOffset(this.scrollOffset, {
        adjustments: void 0,
        behavior: void 0
      }), this.unsubs.push(
        this.options.observeElementRect(this, (n) => {
          this.scrollRect = n, this.maybeNotify();
        })
      ), this.unsubs.push(
        this.options.observeElementOffset(this, (n) => {
          this.scrollAdjustments = 0, this.scrollOffset !== n && (this.isScrollingTimeoutId !== null && (clearTimeout(this.isScrollingTimeoutId), this.isScrollingTimeoutId = null), this.isScrolling = !0, this.scrollDirection = this.scrollOffset < n ? "forward" : "backward", this.scrollOffset = n, this.maybeNotify(), this.isScrollingTimeoutId = setTimeout(() => {
            this.isScrollingTimeoutId = null, this.isScrolling = !1, this.scrollDirection = null, this.maybeNotify();
          }, this.options.scrollingDelay));
        })
      ));
    }, this.getSize = () => this.scrollRect[this.options.horizontal ? "width" : "height"], this.memoOptions = Bt(
      () => [
        this.options.count,
        this.options.paddingStart,
        this.options.scrollMargin,
        this.options.getItemKey
      ],
      (e, n, l, s) => (this.pendingMeasuredCacheIndexes = [], {
        count: e,
        paddingStart: n,
        scrollMargin: l,
        getItemKey: s
      }),
      {
        key: !1
      }
    ), this.getFurthestMeasurement = (e, n) => {
      const l = /* @__PURE__ */ new Map(), s = /* @__PURE__ */ new Map();
      for (let r = n - 1; r >= 0; r--) {
        const i = e[r];
        if (l.has(i.lane))
          continue;
        const u = s.get(
          i.lane
        );
        if (u == null || i.end > u.end ? s.set(i.lane, i) : i.end < u.end && l.set(i.lane, !0), l.size === this.options.lanes)
          break;
      }
      return s.size === this.options.lanes ? Array.from(s.values()).sort((r, i) => r.end === i.end ? r.index - i.index : r.end - i.end)[0] : void 0;
    }, this.getMeasurements = Bt(
      () => [this.memoOptions(), this.itemSizeCache],
      ({ count: e, paddingStart: n, scrollMargin: l, getItemKey: s }, r) => {
        const i = this.pendingMeasuredCacheIndexes.length > 0 ? Math.min(...this.pendingMeasuredCacheIndexes) : 0;
        this.pendingMeasuredCacheIndexes = [];
        const u = this.measurementsCache.slice(0, i);
        for (let d = i; d < e; d++) {
          const c = s(d), f = this.options.lanes === 1 ? u[d - 1] : this.getFurthestMeasurement(u, d), p = f ? f.end : n + l, v = r.get(c), y = typeof v == "number" ? v : this.options.estimateSize(d), m = p + y, S = f ? f.lane : d % this.options.lanes;
          u[d] = {
            index: d,
            start: p,
            size: y,
            end: m,
            key: c,
            lane: S
          };
        }
        return this.measurementsCache = u, u;
      },
      {
        key: process.env.NODE_ENV !== "production" && "getMeasurements",
        debug: () => this.options.debug
      }
    ), this.calculateRange = Bt(
      () => [this.getMeasurements(), this.getSize(), this.scrollOffset],
      (e, n, l) => this.range = e.length > 0 && n > 0 ? Od({
        measurements: e,
        outerSize: n,
        scrollOffset: l
      }) : null,
      {
        key: process.env.NODE_ENV !== "production" && "calculateRange",
        debug: () => this.options.debug
      }
    ), this.getIndexes = Bt(
      () => [
        this.options.rangeExtractor,
        this.calculateRange(),
        this.options.overscan,
        this.options.count
      ],
      (e, n, l, s) => n === null ? [] : e({
        ...n,
        overscan: l,
        count: s
      }),
      {
        key: process.env.NODE_ENV !== "production" && "getIndexes",
        debug: () => this.options.debug
      }
    ), this.indexFromElement = (e) => {
      const n = this.options.indexAttribute, l = e.getAttribute(n);
      return l ? parseInt(l, 10) : (console.warn(
        `Missing attribute name '${n}={index}' on measured element.`
      ), -1);
    }, this._measureElement = (e, n) => {
      const l = this.measurementsCache[this.indexFromElement(e)];
      if (!l || !e.isConnected) {
        this.measureElementCache.forEach((i, u) => {
          i === e && (this.observer.unobserve(e), this.measureElementCache.delete(u));
        });
        return;
      }
      const s = this.measureElementCache.get(l.key);
      s !== e && (s && this.observer.unobserve(s), this.observer.observe(e), this.measureElementCache.set(l.key, e));
      const r = this.options.measureElement(e, n, this);
      this.resizeItem(l, r);
    }, this.resizeItem = (e, n) => {
      const l = this.itemSizeCache.get(e.key) ?? e.size, s = n - l;
      s !== 0 && (e.start < this.scrollOffset + this.scrollAdjustments && (process.env.NODE_ENV !== "production" && this.options.debug && console.info("correction", s), this._scrollToOffset(this.scrollOffset, {
        adjustments: this.scrollAdjustments += s,
        behavior: void 0
      })), this.pendingMeasuredCacheIndexes.push(e.index), this.itemSizeCache = new Map(this.itemSizeCache.set(e.key, n)), this.notify(!1));
    }, this.measureElement = (e) => {
      e && this._measureElement(e, void 0);
    }, this.getVirtualItems = Bt(
      () => [this.getIndexes(), this.getMeasurements()],
      (e, n) => {
        const l = [];
        for (let s = 0, r = e.length; s < r; s++) {
          const i = e[s], u = n[i];
          l.push(u);
        }
        return l;
      },
      {
        key: process.env.NODE_ENV !== "production" && "getIndexes",
        debug: () => this.options.debug
      }
    ), this.getVirtualItemForOffset = (e) => {
      const n = this.getMeasurements();
      return rn(
        n[Vl(
          0,
          n.length - 1,
          (l) => rn(n[l]).start,
          e
        )]
      );
    }, this.getOffsetForAlignment = (e, n) => {
      const l = this.getSize();
      n === "auto" && (e <= this.scrollOffset ? n = "start" : e >= this.scrollOffset + l ? n = "end" : n = "start"), n === "start" ? e = e : n === "end" ? e = e - l : n === "center" && (e = e - l / 2);
      const s = this.options.horizontal ? "scrollWidth" : "scrollHeight", i = (this.scrollElement ? "document" in this.scrollElement ? this.scrollElement.document.documentElement[s] : this.scrollElement[s] : 0) - this.getSize();
      return Math.max(Math.min(i, e), 0);
    }, this.getOffsetForIndex = (e, n = "auto") => {
      e = Math.max(0, Math.min(e, this.options.count - 1));
      const l = rn(this.getMeasurements()[e]);
      if (n === "auto")
        if (l.end >= this.scrollOffset + this.getSize() - this.options.scrollPaddingEnd)
          n = "end";
        else if (l.start <= this.scrollOffset + this.options.scrollPaddingStart)
          n = "start";
        else
          return [this.scrollOffset, n];
      const s = n === "end" ? l.end + this.options.scrollPaddingEnd : l.start - this.options.scrollPaddingStart;
      return [this.getOffsetForAlignment(s, n), n];
    }, this.isDynamicMode = () => this.measureElementCache.size > 0, this.cancelScrollToIndex = () => {
      this.scrollToIndexTimeoutId !== null && (clearTimeout(this.scrollToIndexTimeoutId), this.scrollToIndexTimeoutId = null);
    }, this.scrollToOffset = (e, { align: n = "start", behavior: l } = {}) => {
      this.cancelScrollToIndex(), l === "smooth" && this.isDynamicMode() && console.warn(
        "The `smooth` scroll behavior is not fully supported with dynamic size."
      ), this._scrollToOffset(this.getOffsetForAlignment(e, n), {
        adjustments: void 0,
        behavior: l
      });
    }, this.scrollToIndex = (e, { align: n = "auto", behavior: l } = {}) => {
      e = Math.max(0, Math.min(e, this.options.count - 1)), this.cancelScrollToIndex(), l === "smooth" && this.isDynamicMode() && console.warn(
        "The `smooth` scroll behavior is not fully supported with dynamic size."
      );
      const [s, r] = this.getOffsetForIndex(e, n);
      this._scrollToOffset(s, { adjustments: void 0, behavior: l }), l !== "smooth" && this.isDynamicMode() && (this.scrollToIndexTimeoutId = setTimeout(() => {
        if (this.scrollToIndexTimeoutId = null, this.measureElementCache.has(
          this.options.getItemKey(e)
        )) {
          const [u] = this.getOffsetForIndex(e, r);
          Ed(u, this.scrollOffset) || this.scrollToIndex(e, { align: r, behavior: l });
        } else
          this.scrollToIndex(e, { align: r, behavior: l });
      }));
    }, this.scrollBy = (e, { behavior: n } = {}) => {
      this.cancelScrollToIndex(), n === "smooth" && this.isDynamicMode() && console.warn(
        "The `smooth` scroll behavior is not fully supported with dynamic size."
      ), this._scrollToOffset(this.scrollOffset + e, {
        adjustments: void 0,
        behavior: n
      });
    }, this.getTotalSize = () => {
      var e;
      const n = this.getMeasurements();
      let l;
      return n.length === 0 ? l = this.options.paddingStart : l = this.options.lanes === 1 ? ((e = n[n.length - 1]) == null ? void 0 : e.end) ?? 0 : Math.max(
        ...n.slice(-this.options.lanes).map((s) => s.end)
      ), l - this.options.scrollMargin + this.options.paddingEnd;
    }, this._scrollToOffset = (e, {
      adjustments: n,
      behavior: l
    }) => {
      this.options.scrollToFn(e, { behavior: l, adjustments: n }, this);
    }, this.measure = () => {
      this.itemSizeCache = /* @__PURE__ */ new Map(), this.notify(!1);
    }, this.setOptions(t), this.scrollRect = this.options.initialRect, this.scrollOffset = this.options.initialOffset, this.measurementsCache = this.options.initialMeasurementsCache, this.measurementsCache.forEach((e) => {
      this.itemSizeCache.set(e.key, e.size);
    }), this.maybeNotify();
  }
}
const Vl = (a, t, e, n) => {
  for (; a <= t; ) {
    const l = (a + t) / 2 | 0, s = e(l);
    if (s < n)
      a = l + 1;
    else if (s > n)
      t = l - 1;
    else
      return l;
  }
  return a > 0 ? a - 1 : 0;
};
function Od({
  measurements: a,
  outerSize: t,
  scrollOffset: e
}) {
  const n = a.length - 1, s = Vl(0, n, (i) => a[i].start, e);
  let r = s;
  for (; r < n && a[r].end < e + t; )
    r++;
  return { startIndex: s, endIndex: r };
}
function kd(a) {
  const t = new Ad(o(a)), e = Pa(t), n = t._didMount();
  return ee(
    () => o(a).getScrollElement(),
    (l) => {
      l && t._willUpdate();
    },
    {
      immediate: !0
    }
  ), ee(
    () => o(a),
    (l) => {
      t.setOptions({
        ...l,
        onChange: (s, r) => {
          var i;
          Co(e), (i = l.onChange) == null || i.call(l, s, r);
        }
      }), t._willUpdate(), Co(e);
    },
    {
      immediate: !0
    }
  ), zo(n), e;
}
function Md(a) {
  return kd(
    T(() => ({
      observeElementRect: Bd,
      observeElementOffset: Td,
      scrollToFn: Rd,
      ...o(a)
    }))
  );
}
const Bm = /* @__PURE__ */ w({
  __name: "ListboxVirtualizer",
  props: {
    options: {},
    estimateSize: {},
    textContent: { type: Function }
  },
  setup(a) {
    const t = a, e = En(), n = La(), l = Mr(), { getItems: s } = Hn();
    n.isVirtual.value = !0;
    const r = T(() => {
      const p = l.value;
      if (p) {
        const v = window.getComputedStyle(p);
        return {
          start: Number.parseFloat(v.paddingBlockStart || v.paddingTop),
          end: Number.parseFloat(v.paddingBlockEnd || v.paddingBottom)
        };
      } else
        return { start: 0, end: 0 };
    }), i = Md(
      {
        get scrollPaddingStart() {
          return r.value.start;
        },
        get scrollPaddingEnd() {
          return r.value.end;
        },
        get count() {
          return t.options.length;
        },
        get horizontal() {
          return n.orientation.value === "horizontal";
        },
        estimateSize() {
          return 28;
        },
        getScrollElement() {
          return l.value;
        },
        overscan: 12
      }
    ), u = T(() => i.value.getVirtualItems().map((p) => ({
      item: p,
      is: Uo(e.default({
        option: t.options[p.index]
      })[0], {
        key: `${p.index}`,
        "data-index": p.index,
        "aria-setsize": t.options.length,
        "aria-posinset": p.index + 1,
        style: {
          position: "absolute",
          top: 0,
          left: 0,
          transform: `translateY(${p.start}px)`,
          overflowAnchor: "none"
        }
      })
    })));
    n.virtualFocusHook.on((p) => {
      const v = t.options.findIndex((y) => Array.isArray(n.modelValue.value) ? Rt(y, n.modelValue.value[0], n.by) : Rt(y, n.modelValue.value, n.by));
      v !== -1 && (p == null || p.preventDefault(), i.value.scrollToIndex(v, { align: "start" }), requestAnimationFrame(() => {
        const y = Cd(l.value);
        y && p && (y == null || y.focus());
      }));
    });
    const d = kt("", 1e3), c = T(() => {
      const p = (v) => t.textContent ? t.textContent(v) : v.toString().toLowerCase();
      return t.options.map((v, y) => ({
        index: y,
        textContent: p(v)
      }));
    });
    function f(p, v) {
      var P, D, g, x;
      if (!((P = n.firstValue) != null && P.value) || !n.multiple.value || !Array.isArray(n.modelValue.value))
        return;
      const m = (D = s().filter((E) => E.ref.dataset.disabled !== "").find((E) => E.ref === n.highlightedElement.value)) == null ? void 0 : D.value;
      if (!m)
        return;
      let S = null;
      switch (v) {
        case "prev":
        case "next": {
          S = ba(t.options, n.firstValue.value, m);
          break;
        }
        case "first": {
          S = ba(t.options, n.firstValue.value, (g = t.options) == null ? void 0 : g[0]);
          break;
        }
        case "last": {
          S = ba(t.options, n.firstValue.value, (x = t.options) == null ? void 0 : x[t.options.length - 1]);
          break;
        }
      }
      n.modelValue.value = S;
    }
    return n.virtualKeydownHook.on((p) => {
      var S;
      const v = p.altKey || p.ctrlKey || p.metaKey;
      if (p.key === "Tab" && !v)
        return;
      let m = El[p.key];
      if (v && p.key === "a" && n.multiple.value ? (p.preventDefault(), n.modelValue.value = [...t.options], m = "last") : p.shiftKey && m && f(p, m), ["first", "last"].includes(m)) {
        p.preventDefault();
        const P = m === "first" ? 0 : t.options.length - 1;
        i.value.scrollToIndex(P), requestAnimationFrame(() => {
          const D = s(), g = m === "first" ? D[0] : D[D.length - 1];
          n.onChangeHighlight(g.ref);
        });
      } else if (!m && !v) {
        d.value += p.key;
        const P = Number((S = document.activeElement) == null ? void 0 : S.getAttribute("data-index")), D = c.value[P].textContent, g = c.value.map(($) => $.textContent), x = cl(g, d.value, D), E = c.value.find(($) => $.textContent === x);
        E && (i.value.scrollToIndex(E.index, { align: "start" }), requestAnimationFrame(() => {
          const $ = l.value.querySelector(`[data-index="${E.index}"]`);
          $ instanceof HTMLElement && n.onChangeHighlight($);
        }));
      }
    }), (p, v) => (b(), fe("div", {
      "data-radix-vue-virtualizer": "",
      style: Ce({
        position: "relative",
        width: "100%",
        height: `${o(i).getTotalSize()}px`
      })
    }, [
      (b(!0), fe(Pe, null, Da(u.value, ({ is: y, item: m }) => (b(), _(Ue(y), {
        key: m.index
      }))), 128))
    ], 4));
  }
}), [Vd, Fd] = Q("ListboxGroup"), Tm = /* @__PURE__ */ w({
  __name: "ListboxGroup",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a, e = me(void 0, "radix-vue-listbox-group");
    return Fd({ id: e }), (n, l) => (b(), _(o(A), k({ role: "group" }, t, { "aria-labelledby": o(e) }), {
      default: h(() => [
        C(n.$slots, "default")
      ]),
      _: 3
    }, 16, ["aria-labelledby"]));
  }
}), Im = /* @__PURE__ */ w({
  __name: "ListboxGroupLabel",
  props: {
    for: {},
    asChild: { type: Boolean },
    as: { default: "div" }
  },
  setup(a) {
    const t = a, e = Vd({ id: "" });
    return (n, l) => (b(), _(o(A), k(t, {
      id: o(e).id
    }), {
      default: h(() => [
        C(n.$slots, "default")
      ]),
      _: 3
    }, 16, ["id"]));
  }
}), [Na, Ld] = Q("MenubarRoot"), Rm = /* @__PURE__ */ w({
  __name: "MenubarRoot",
  props: {
    modelValue: {},
    defaultValue: {},
    dir: {},
    loop: { type: Boolean, default: !1 }
  },
  emits: ["update:modelValue"],
  setup(a, { emit: t }) {
    const e = a, n = t, { forwardRef: l, currentElement: s } = I(), { createCollection: r } = Re("menubar");
    r(s);
    const i = ne(e, "modelValue", n, {
      defaultValue: e.defaultValue ?? "",
      passive: e.modelValue === void 0
    }), u = B(null), { dir: d, loop: c } = le(e), f = be(d);
    return Ld({
      modelValue: i,
      dir: f,
      loop: c,
      onMenuOpen: (p) => {
        i.value = p, u.value = p;
      },
      onMenuClose: () => {
        i.value = "";
      },
      onMenuToggle: (p) => {
        i.value = i.value ? "" : p, u.value = p;
      }
    }), (p, v) => (b(), _(o(zt), {
      "current-tab-stop-id": u.value,
      "onUpdate:currentTabStopId": v[0] || (v[0] = (y) => u.value = y),
      orientation: "horizontal",
      loop: o(c),
      dir: o(f),
      "as-child": ""
    }, {
      default: h(() => [
        G(o(A), {
          ref: o(l),
          role: "menubar"
        }, {
          default: h(() => [
            C(p.$slots, "default")
          ]),
          _: 3
        }, 512)
      ]),
      _: 3
    }, 8, ["current-tab-stop-id", "loop", "dir"]));
  }
}), [io, Nd] = Q("MenubarMenu"), Am = /* @__PURE__ */ w({
  __name: "MenubarMenu",
  props: {
    value: {}
  },
  setup(a) {
    const e = me(a.value), n = Na();
    I();
    const l = B(), s = B(!1), r = T(() => n.modelValue.value === e);
    return ee(r, () => {
      r.value || (s.value = !1);
    }), Nd({
      value: e,
      triggerElement: l,
      triggerId: e,
      contentId: "",
      wasKeyboardTriggerOpenRef: s
    }), (i, u) => (b(), _(o(jn), {
      open: r.value,
      modal: !1,
      dir: o(n).dir.value,
      "onUpdate:open": u[0] || (u[0] = (d) => {
        d || o(n).onMenuClose();
      })
    }, {
      default: h(() => [
        C(i.$slots, "default")
      ]),
      _: 3
    }, 8, ["open", "dir"]));
  }
}), Om = /* @__PURE__ */ w({
  __name: "MenubarTrigger",
  props: {
    disabled: { type: Boolean },
    asChild: { type: Boolean },
    as: { default: "button" }
  },
  setup(a) {
    const t = Na(), e = io(), { forwardRef: n, currentElement: l } = I(), s = B(!1), r = T(() => t.modelValue.value === e.value);
    return se(() => {
      e.triggerElement = l;
    }), (i, u) => (b(), _(o(Kt), {
      "as-child": "",
      focusable: !i.disabled,
      "tab-stop-id": o(e).value
    }, {
      default: h(() => [
        G(o(Va), { "as-child": "" }, {
          default: h(() => [
            G(o(A), {
              id: o(e).triggerId,
              ref: o(n),
              as: i.as,
              type: i.as === "button" ? "button" : void 0,
              role: "menuitem",
              "aria-haspopup": "menu",
              "aria-expanded": r.value,
              "aria-controls": r.value ? o(e).contentId : void 0,
              "data-highlighted": s.value ? "" : void 0,
              "data-state": r.value ? "open" : "closed",
              "data-disabled": i.disabled ? "" : void 0,
              disabled: i.disabled,
              "data-value": o(e).value,
              "data-radix-vue-collection-item": "",
              onPointerdown: u[0] || (u[0] = (d) => {
                !i.disabled && d.button === 0 && d.ctrlKey === !1 && (o(t).onMenuOpen(o(e).value), r.value || d.preventDefault());
              }),
              onPointerenter: u[1] || (u[1] = () => {
                var c;
                !!o(t).modelValue.value && !r.value && (o(t).onMenuOpen(o(e).value), (c = o(l)) == null || c.focus());
              }),
              onKeydown: u[2] || (u[2] = he((d) => {
                i.disabled || (["Enter", " "].includes(d.key) && o(t).onMenuToggle(o(e).value), d.key === "ArrowDown" && o(t).onMenuOpen(o(e).value), ["Enter", " ", "ArrowDown"].includes(d.key) && (o(e).wasKeyboardTriggerOpenRef.value = !0, d.preventDefault()));
              }, ["enter", "space", "arrow-down"])),
              onFocus: u[3] || (u[3] = (d) => s.value = !0),
              onBlur: u[4] || (u[4] = (d) => s.value = !1)
            }, {
              default: h(() => [
                C(i.$slots, "default")
              ]),
              _: 3
            }, 8, ["id", "as", "type", "aria-expanded", "aria-controls", "data-highlighted", "data-state", "data-disabled", "disabled", "data-value"])
          ]),
          _: 3
        })
      ]),
      _: 3
    }, 8, ["focusable", "tab-stop-id"]));
  }
}), km = /* @__PURE__ */ w({
  __name: "MenubarPortal",
  props: {
    to: {},
    disabled: { type: Boolean },
    forceMount: { type: Boolean }
  },
  setup(a) {
    const t = a;
    return (e, n) => (b(), _(o(Jn), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), Mm = /* @__PURE__ */ w({
  __name: "MenubarContent",
  props: {
    forceMount: { type: Boolean },
    loop: { type: Boolean },
    side: {},
    sideOffset: {},
    align: { default: "start" },
    alignOffset: {},
    avoidCollisions: { type: Boolean },
    collisionBoundary: {},
    collisionPadding: {},
    arrowPadding: {},
    sticky: {},
    hideWhenDetached: { type: Boolean },
    updatePositionStrategy: {},
    prioritizePosition: { type: Boolean },
    asChild: { type: Boolean },
    as: {}
  },
  emits: ["escapeKeyDown", "pointerDownOutside", "focusOutside", "interactOutside", "closeAutoFocus"],
  setup(a, { emit: t }) {
    const l = _e(a, t);
    I();
    const s = Na(), r = io();
    r.contentId || (r.contentId = me(void 0, "radix-vue-menubar-content"));
    const { injectCollection: i } = Re("menubar"), u = i(), d = B(!1);
    function c(f) {
      const v = f.target.hasAttribute(
        "data-radix-menubar-subtrigger"
      ), m = (s.dir.value === "rtl" ? "ArrowRight" : "ArrowLeft") === f.key;
      if (!m && v)
        return;
      let P = u.value.map((x) => x.dataset.value);
      m && P.reverse();
      const D = P.indexOf(r.value);
      P = s.loop.value ? kn(P, D + 1) : P.slice(D + 1);
      const [g] = P;
      g && s.onMenuOpen(g);
    }
    return (f, p) => (b(), _(o(Xn), k(o(l), {
      id: o(r).contentId,
      "data-radix-menubar-content": "",
      "aria-labelledby": o(r).triggerId,
      style: {
        "--radix-menubar-content-transform-origin": "var(--radix-popper-transform-origin)",
        "--radix-menubar-content-available-width": "var(--radix-popper-available-width)",
        "--radix-menubar-content-available-height": "var(--radix-popper-available-height)",
        "--radix-menubar-trigger-width": "var(--radix-popper-anchor-width)",
        "--radix-menubar-trigger-height": "var(--radix-popper-anchor-height)"
      },
      onCloseAutoFocus: p[0] || (p[0] = (v) => {
        var m;
        !!!o(s).modelValue.value && !d.value && ((m = o(r).triggerElement.value) == null || m.focus()), d.value = !1, v.preventDefault();
      }),
      onFocusOutside: p[1] || (p[1] = (v) => {
        const y = v.target;
        o(u).some((S) => S.contains(y)) && v.preventDefault();
      }),
      onInteractOutside: p[2] || (p[2] = (v) => {
        d.value = !0;
      }),
      onEntryFocus: p[3] || (p[3] = (v) => {
        o(r).wasKeyboardTriggerOpenRef.value || v.preventDefault();
      }),
      onKeydown: he(c, ["arrow-right", "arrow-left"])
    }), {
      default: h(() => [
        C(f.$slots, "default")
      ]),
      _: 3
    }, 16, ["id", "aria-labelledby", "style"]));
  }
}), Vm = /* @__PURE__ */ w({
  __name: "MenubarArrow",
  props: {
    width: { default: 10 },
    height: { default: 5 },
    asChild: { type: Boolean },
    as: { default: "svg" }
  },
  setup(a) {
    const t = a;
    return I(), (e, n) => (b(), _(o(Wn), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), Fm = /* @__PURE__ */ w({
  __name: "MenubarItem",
  props: {
    disabled: { type: Boolean },
    textValue: {},
    asChild: { type: Boolean },
    as: {}
  },
  emits: ["select"],
  setup(a, { emit: t }) {
    const e = a, l = Ie(t);
    return I(), (s, r) => (b(), _(o(ua), z(K({ ...e, ...o(l) })), {
      default: h(() => [
        C(s.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), Lm = /* @__PURE__ */ w({
  __name: "MenubarGroup",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    return I(), (e, n) => (b(), _(o(Fa), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), Nm = /* @__PURE__ */ w({
  __name: "MenubarSeparator",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    return I(), (e, n) => (b(), _(o(to), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), zm = /* @__PURE__ */ w({
  __name: "MenubarCheckboxItem",
  props: {
    checked: { type: [Boolean, String] },
    disabled: { type: Boolean },
    textValue: {},
    asChild: { type: Boolean },
    as: {}
  },
  emits: ["select", "update:checked"],
  setup(a, { emit: t }) {
    const e = a, l = Ie(t);
    return I(), (s, r) => (b(), _(o(Yn), z(K({ ...e, ...o(l) })), {
      default: h(() => [
        C(s.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), Km = /* @__PURE__ */ w({
  __name: "MenubarItemIndicator",
  props: {
    forceMount: { type: Boolean },
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    return I(), (e, n) => (b(), _(o(qn), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), Hm = /* @__PURE__ */ w({
  __name: "MenubarLabel",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    return I(), (e, n) => (b(), _(o(Zn), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), Wm = /* @__PURE__ */ w({
  __name: "MenubarRadioGroup",
  props: {
    modelValue: {},
    asChild: { type: Boolean },
    as: {}
  },
  emits: ["update:modelValue"],
  setup(a, { emit: t }) {
    const e = a, l = Ie(t);
    return I(), (s, r) => (b(), _(o(Qn), z(K({ ...e, ...o(l) })), {
      default: h(() => [
        C(s.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), jm = /* @__PURE__ */ w({
  __name: "MenubarRadioItem",
  props: {
    value: {},
    disabled: { type: Boolean },
    textValue: {},
    asChild: { type: Boolean },
    as: {}
  },
  emits: ["select"],
  setup(a, { emit: t }) {
    const l = _e(a, t);
    return I(), (s, r) => (b(), _(o(eo), z(K(o(l))), {
      default: h(() => [
        C(s.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), Um = /* @__PURE__ */ w({
  __name: "MenubarSub",
  props: {
    defaultOpen: { type: Boolean },
    open: { type: Boolean, default: void 0 }
  },
  emits: ["update:open"],
  setup(a, { emit: t }) {
    const e = a, n = t;
    I();
    const l = ne(e, "open", n, {
      defaultValue: e.defaultOpen ?? !1,
      passive: e.open === void 0
    });
    return (s, r) => (b(), _(o(ao), {
      open: o(l),
      "onUpdate:open": r[0] || (r[0] = (i) => wt(l) ? l.value = i : null)
    }, {
      default: h(() => [
        C(s.$slots, "default")
      ]),
      _: 3
    }, 8, ["open"]));
  }
}), Gm = /* @__PURE__ */ w({
  __name: "MenubarSubContent",
  props: {
    forceMount: { type: Boolean },
    loop: { type: Boolean },
    sideOffset: {},
    alignOffset: {},
    avoidCollisions: { type: Boolean },
    collisionBoundary: {},
    collisionPadding: {},
    arrowPadding: {},
    sticky: {},
    hideWhenDetached: { type: Boolean },
    updatePositionStrategy: {},
    prioritizePosition: { type: Boolean },
    asChild: { type: Boolean },
    as: {}
  },
  emits: ["escapeKeyDown", "pointerDownOutside", "focusOutside", "interactOutside", "entryFocus", "openAutoFocus", "closeAutoFocus"],
  setup(a, { emit: t }) {
    const l = _e(a, t);
    I();
    const { injectCollection: s } = Re("menubar"), r = Na(), i = io(), u = s();
    function d(c) {
      if (c.target.hasAttribute(
        "data-radix-menubar-subtrigger"
      ))
        return;
      let v = u.value.map((S) => S.dataset.value);
      const y = v.indexOf(i.value);
      v = r.loop.value ? kn(v, y + 1) : v.slice(y + 1);
      const [m] = v;
      m && r.onMenuOpen(m);
    }
    return (c, f) => (b(), _(o(no), k(o(l), {
      "data-radix-menubar-content": "",
      style: {
        "--radix-menubar-content-transform-origin": "var(--radix-popper-transform-origin)",
        "--radix-menubar-content-available-width": "var(--radix-popper-available-width)",
        "--radix-menubar-content-available-height": "var(--radix-popper-available-height)",
        "--radix-menubar-trigger-width": "var(--radix-popper-anchor-width)",
        "--radix-menubar-trigger-height": "var(--radix-popper-anchor-height)"
      },
      onKeydown: he(d, ["arrow-right"])
    }), {
      default: h(() => [
        C(c.$slots, "default")
      ]),
      _: 3
    }, 16, ["style"]));
  }
}), qm = /* @__PURE__ */ w({
  __name: "MenubarSubTrigger",
  props: {
    disabled: { type: Boolean },
    textValue: {},
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    return I(), (e, n) => (b(), _(o(oo), k(t, { "data-radix-menubar-subtrigger": "" }), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), [mt, Fl] = Q(["NavigationMenuRoot", "NavigationMenuSub"], "NavigationMenuContext"), Ym = /* @__PURE__ */ w({
  __name: "NavigationMenuRoot",
  props: {
    modelValue: { default: void 0 },
    defaultValue: {},
    dir: {},
    orientation: { default: "horizontal" },
    delayDuration: { default: 200 },
    skipDelayDuration: { default: 300 },
    disableClickTrigger: { type: Boolean, default: !1 },
    disableHoverTrigger: { type: Boolean, default: !1 },
    asChild: { type: Boolean },
    as: { default: "nav" }
  },
  emits: ["update:modelValue"],
  setup(a, { emit: t }) {
    const e = a, l = ne(e, "modelValue", t, {
      defaultValue: e.defaultValue ?? "",
      passive: e.modelValue === void 0
    }), s = B(""), { forwardRef: r, currentElement: i } = I(), u = B(), d = B(), { createCollection: c } = Re("nav");
    c(u);
    const { delayDuration: f, skipDelayDuration: p, dir: v, disableClickTrigger: y, disableHoverTrigger: m } = le(e), S = be(v), P = kt(!1, p), D = T(() => l.value !== "" || P.value ? 150 : f.value), g = Bn((x) => {
      s.value = l.value, l.value = x;
    }, D);
    return Fl({
      isRootMenu: !0,
      modelValue: l,
      previousValue: s,
      baseId: me(void 0, "radix-navigation-menu"),
      disableClickTrigger: y,
      disableHoverTrigger: m,
      dir: S,
      orientation: e.orientation,
      rootNavigationMenu: i,
      indicatorTrack: u,
      onIndicatorTrackChange: (x) => {
        u.value = x;
      },
      viewport: d,
      onViewportChange: (x) => {
        d.value = x;
      },
      onTriggerEnter: (x) => {
        g(x);
      },
      onTriggerLeave: () => {
        P.value = !0, g("");
      },
      onContentEnter: (x) => {
        g(x);
      },
      onContentLeave: () => {
        g("");
      },
      onItemSelect: (x) => {
        s.value = l.value, l.value = x;
      },
      onItemDismiss: () => {
        s.value = l.value, l.value = "";
      }
    }), (x, E) => (b(), _(o(A), {
      ref: o(r),
      "aria-label": "Main",
      as: x.as,
      "as-child": x.asChild,
      "data-orientation": x.orientation,
      dir: o(S)
    }, {
      default: h(() => [
        C(x.$slots, "default")
      ]),
      _: 3
    }, 8, ["as", "as-child", "data-orientation", "dir"]));
  }
});
function za(a) {
  return a ? "open" : "closed";
}
function Ll(a, t) {
  return `${a}-trigger-${t}`;
}
function uo(a, t) {
  return `${a}-content-${t}`;
}
const Ca = "navigationMenu.rootContentDismiss";
function gn(a) {
  const t = [], e = document.createTreeWalker(a, NodeFilter.SHOW_ELEMENT, {
    acceptNode: (n) => {
      const l = n.tagName === "INPUT" && n.type === "hidden";
      return n.disabled || n.hidden || l ? NodeFilter.FILTER_SKIP : n.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;
    }
  });
  for (; e.nextNode(); )
    t.push(e.currentNode);
  return t;
}
function Nl(a) {
  const t = document.activeElement;
  return a.some((e) => e === t ? !0 : (e.focus(), document.activeElement !== t));
}
function zd(a) {
  return a.forEach((t) => {
    t.dataset.tabindex = t.getAttribute("tabindex") || "", t.setAttribute("tabindex", "-1");
  }), () => {
    a.forEach((t) => {
      const e = t.dataset.tabindex;
      t.setAttribute("tabindex", e);
    });
  };
}
function zl(a) {
  return (t) => t.pointerType === "mouse" ? a(t) : void 0;
}
const [co, Kd] = Q("NavigationMenuItem"), Xm = /* @__PURE__ */ w({
  __name: "NavigationMenuItem",
  props: {
    value: {},
    asChild: { type: Boolean },
    as: { default: "li" }
  },
  setup(a) {
    const t = a;
    I();
    const { injectCollection: e } = Re("nav"), n = e(), l = mt(), s = me(t.value), r = B(), i = B(), u = uo(l.baseId, s);
    let d = () => ({});
    const c = B(!1);
    async function f(m = "start") {
      const S = document.getElementById(u);
      if (S) {
        d();
        const P = gn(S);
        P.length && Nl(m === "start" ? P : P.reverse());
      }
    }
    function p() {
      const m = document.getElementById(u);
      if (m) {
        const S = gn(m);
        S.length && (d = zd(S));
      }
    }
    Kd({
      value: s,
      contentId: u,
      triggerRef: r,
      focusProxyRef: i,
      wasEscapeCloseRef: c,
      onEntryKeyDown: f,
      onFocusProxyEnter: f,
      onContentFocusOutside: p,
      onRootContentClose: p
    });
    function v() {
      var m;
      l.onItemDismiss(), (m = r.value) == null || m.focus();
    }
    function y(m) {
      const S = document.activeElement;
      if (m.keyCode === 32 || m.key === "Enter")
        if (l.modelValue.value === s) {
          v(), m.preventDefault();
          return;
        } else {
          m.target.click(), m.preventDefault();
          return;
        }
      const P = n.value.filter(
        (g) => {
          var x;
          return (x = g.parentElement) == null ? void 0 : x.hasAttribute("data-menu-item");
        }
      ), D = Vt(m, S, void 0, {
        itemsArray: P,
        loop: !1
      });
      D && (D == null || D.focus()), m.preventDefault(), m.stopPropagation();
    }
    return (m, S) => (b(), _(o(A), {
      "as-child": m.asChild,
      as: m.as,
      "data-menu-item": "",
      onKeydown: he(y, ["up", "down", "left", "right", "home", "end", "space"])
    }, {
      default: h(() => [
        C(m.$slots, "default")
      ]),
      _: 3
    }, 8, ["as-child", "as"]));
  }
}), Hd = /* @__PURE__ */ w({
  __name: "NavigationMenuContentImpl",
  props: {
    disableOutsidePointerEvents: { type: Boolean },
    asChild: { type: Boolean },
    as: {}
  },
  emits: ["escapeKeyDown", "pointerDownOutside", "focusOutside", "interactOutside"],
  setup(a, { emit: t }) {
    const e = a, n = t, { injectCollection: l } = Re("nav"), s = l(), { forwardRef: r, currentElement: i } = I(), u = mt(), d = co(), c = Ll(u.baseId, d.value), f = uo(u.baseId, d.value), p = B(null), v = T(() => {
      const x = s.value.map((O) => O.id.split("trigger-")[1]);
      u.dir.value === "rtl" && x.reverse();
      const E = x.indexOf(u.modelValue.value), $ = x.indexOf(u.previousValue.value), R = d.value === u.modelValue.value, M = $ === x.indexOf(d.value);
      if (!R && !M)
        return p.value;
      const V = (() => {
        if (E !== $) {
          if (R && $ !== -1)
            return E > $ ? "from-end" : "from-start";
          if (M && E !== -1)
            return E > $ ? "to-start" : "to-end";
        }
        return null;
      })();
      return p.value = V, V;
    });
    function y(g) {
      var x, E;
      if (n("focusOutside", g), n("interactOutside", g), !g.defaultPrevented) {
        d.onContentFocusOutside();
        const $ = g.target;
        (E = (x = u.rootNavigationMenu) == null ? void 0 : x.value) != null && E.contains($) && g.preventDefault();
      }
    }
    function m(g) {
      var x;
      if (n("pointerDownOutside", g), !g.defaultPrevented) {
        const E = g.target, $ = s.value.some(
          (M) => M.contains(E)
        ), R = u.isRootMenu && ((x = u.viewport.value) == null ? void 0 : x.contains(E));
        ($ || R || !u.isRootMenu) && g.preventDefault();
      }
    }
    ve((g) => {
      const x = i.value;
      if (u.isRootMenu && x) {
        const E = () => {
          var $;
          u.onItemDismiss(), d.onRootContentClose(), x.contains(document.activeElement) && (($ = d.triggerRef.value) == null || $.focus());
        };
        x.addEventListener(Ca, E), g(
          () => x.removeEventListener(Ca, E)
        );
      }
    });
    function S(g) {
      var x, E;
      n("escapeKeyDown", g), g.defaultPrevented || (u.onItemDismiss(), (E = (x = d.triggerRef) == null ? void 0 : x.value) == null || E.focus(), d.wasEscapeCloseRef.value = !0);
    }
    function P(g) {
      var M;
      const x = g.altKey || g.ctrlKey || g.metaKey, E = g.key === "Tab" && !x, $ = gn(g.currentTarget);
      if (E) {
        const V = document.activeElement, O = $.findIndex(
          (J) => J === V
        ), j = g.shiftKey ? $.slice(0, O).reverse() : $.slice(O + 1, $.length);
        if (Nl(j))
          g.preventDefault();
        else {
          (M = d.focusProxyRef.value) == null || M.focus();
          return;
        }
      }
      const R = Vt(
        g,
        document.activeElement,
        void 0,
        { itemsArray: $, loop: !1, enableIgnoredElement: !0 }
      );
      R == null || R.focus();
    }
    function D() {
      var x;
      const g = new Event(Ca, {
        bubbles: !0,
        cancelable: !0
      });
      (x = i.value) == null || x.dispatchEvent(g);
    }
    return (g, x) => (b(), _(o(vt), k({
      id: o(f),
      ref: o(r),
      "aria-labelledby": o(c),
      "data-motion": v.value,
      "data-state": o(za)(o(u).modelValue.value === o(d).value),
      "data-orientation": o(u).orientation
    }, e, {
      onKeydown: P,
      onEscapeKeyDown: S,
      onPointerDownOutside: m,
      onFocusOutside: y,
      onDismiss: D
    }), {
      default: h(() => [
        C(g.$slots, "default")
      ]),
      _: 3
    }, 16, ["id", "aria-labelledby", "data-motion", "data-state", "data-orientation"]));
  }
}), Zm = /* @__PURE__ */ w({
  inheritAttrs: !1,
  __name: "NavigationMenuContent",
  props: {
    forceMount: { type: Boolean },
    disableOutsidePointerEvents: { type: Boolean },
    asChild: { type: Boolean },
    as: {}
  },
  emits: ["escapeKeyDown", "pointerDownOutside", "focusOutside", "interactOutside"],
  setup(a, { emit: t }) {
    const e = a, n = t, l = Ie(n), { forwardRef: s } = I(), r = Ba(), i = mt(), u = co(), d = T(() => u.value === i.modelValue.value), c = T(() => i.viewport.value && !i.modelValue.value && i.previousValue.value ? i.previousValue.value === u.value : !1);
    return (f, p) => o(r) ? (b(), _(At, {
      key: 0,
      to: o(i).viewport.value,
      disabled: !o(i).viewport.value
    }, [
      G(o(Ee), {
        present: f.forceMount || d.value || c.value
      }, {
        default: h(() => [
          G(Hd, k({
            ref: o(s),
            "data-state": o(za)(d.value),
            style: {
              pointerEvents: !d.value && o(i).isRootMenu ? "none" : void 0
            }
          }, { ...f.$attrs, ...e, ...o(l) }, {
            onPointerenter: p[0] || (p[0] = (v) => o(i).onContentEnter(o(u).value)),
            onPointerleave: p[1] || (p[1] = (v) => o(zl)(() => o(i).onContentLeave())(v)),
            onPointerDownOutside: p[2] || (p[2] = (v) => n("pointerDownOutside", v)),
            onFocusOutside: p[3] || (p[3] = (v) => n("focusOutside", v)),
            onInteractOutside: p[4] || (p[4] = (v) => n("interactOutside", v))
          }), {
            default: h(() => [
              C(f.$slots, "default")
            ]),
            _: 3
          }, 16, ["data-state", "style"])
        ]),
        _: 3
      }, 8, ["present"])
    ], 8, ["to", "disabled"])) : ue("", !0);
  }
}), Jm = /* @__PURE__ */ w({
  inheritAttrs: !1,
  __name: "NavigationMenuIndicator",
  props: {
    forceMount: { type: Boolean },
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a, { forwardRef: e } = I(), { injectCollection: n } = Re("nav"), l = n(), s = mt(), r = B(), i = T(() => s.orientation === "horizontal"), u = T(() => !!s.modelValue.value), d = B();
    function c() {
      d.value && (r.value = {
        size: i.value ? d.value.offsetWidth : d.value.offsetHeight,
        offset: i.value ? d.value.offsetLeft : d.value.offsetTop
      });
    }
    return ve(() => {
      if (!s.modelValue.value) {
        r.value = void 0;
        return;
      }
      const f = l.value;
      d.value = f.find(
        (p) => p.id.includes(s.modelValue.value)
      ), c();
    }), Ge(d, c), Ge(s.indicatorTrack, c), (f, p) => o(s).indicatorTrack.value ? (b(), _(At, {
      key: 0,
      to: o(s).indicatorTrack.value
    }, [
      G(o(Ee), {
        present: f.forceMount || u.value
      }, {
        default: h(() => {
          var v, y, m, S;
          return [
            G(o(A), k({
              ref: o(e),
              "aria-hidden": "",
              "data-state": u.value ? "visible" : "hidden",
              "data-orientation": o(s).orientation,
              "as-child": t.asChild,
              as: f.as,
              style: {
                position: "absolute",
                ...i.value ? {
                  left: 0,
                  width: `${(v = r.value) == null ? void 0 : v.size}px`,
                  transform: `translateX(${(y = r.value) == null ? void 0 : y.offset}px)`
                } : {
                  top: 0,
                  height: `${(m = r.value) == null ? void 0 : m.size}px`,
                  transform: `translateY(${(S = r.value) == null ? void 0 : S.offset}px)`
                }
              }
            }, f.$attrs), {
              default: h(() => [
                C(f.$slots, "default")
              ]),
              _: 3
            }, 16, ["data-state", "data-orientation", "as-child", "as", "style"])
          ];
        }),
        _: 3
      }, 8, ["present"])
    ], 8, ["to"])) : ue("", !0);
  }
}), Qm = /* @__PURE__ */ w({
  __name: "NavigationMenuLink",
  props: {
    active: { type: Boolean },
    asChild: { type: Boolean },
    as: { default: "a" }
  },
  emits: ["select"],
  setup(a, { emit: t }) {
    const e = a, n = t;
    I();
    async function l(s) {
      var r;
      if (n("select", s), await re(), !s.defaultPrevented && !s.metaKey) {
        const i = new CustomEvent(
          Ca,
          {
            bubbles: !0,
            cancelable: !0
          }
        );
        (r = s.target) == null || r.dispatchEvent(i);
      }
    }
    return (s, r) => (b(), _(o(A), {
      as: s.as,
      "data-active": s.active ? "" : void 0,
      "aria-current": s.active ? "page" : void 0,
      "as-child": e.asChild,
      "data-radix-vue-collection-item": "",
      onClick: l
    }, {
      default: h(() => [
        C(s.$slots, "default")
      ]),
      _: 3
    }, 8, ["as", "data-active", "aria-current", "as-child"]));
  }
}), eh = /* @__PURE__ */ w({
  inheritAttrs: !1,
  __name: "NavigationMenuList",
  props: {
    asChild: { type: Boolean },
    as: { default: "ul" }
  },
  setup(a) {
    const t = a, e = mt(), { forwardRef: n, currentElement: l } = I();
    return se(() => {
      e.onIndicatorTrackChange(l.value);
    }), (s, r) => (b(), _(o(A), {
      ref: o(n),
      style: { position: "relative" }
    }, {
      default: h(() => [
        G(o(A), k(s.$attrs, {
          "as-child": t.asChild,
          as: s.as,
          "data-orientation": o(e).orientation
        }), {
          default: h(() => [
            C(s.$slots, "default")
          ]),
          _: 3
        }, 16, ["as-child", "as", "data-orientation"])
      ]),
      _: 3
    }, 512));
  }
}), th = /* @__PURE__ */ w({
  __name: "NavigationMenuSub",
  props: {
    modelValue: {},
    defaultValue: {},
    orientation: { default: "horizontal" },
    asChild: { type: Boolean },
    as: {}
  },
  emits: ["update:modelValue"],
  setup(a, { emit: t }) {
    const e = a, l = ne(e, "modelValue", t, {
      defaultValue: e.defaultValue ?? "",
      passive: e.modelValue === void 0
    }), s = B(""), r = mt(), { forwardRef: i, currentElement: u } = I(), d = B(), c = B(), { createCollection: f } = Re("nav");
    return f(d), Fl({
      ...r,
      isRootMenu: !1,
      modelValue: l,
      previousValue: s,
      orientation: e.orientation,
      rootNavigationMenu: u,
      indicatorTrack: d,
      onIndicatorTrackChange: (p) => {
        d.value = p;
      },
      viewport: c,
      onViewportChange: (p) => {
        c.value = p;
      },
      onTriggerEnter: (p) => {
        l.value = p;
      },
      onTriggerLeave: () => {
      },
      onContentEnter: () => {
      },
      onContentLeave: () => {
      },
      onItemSelect: (p) => {
        l.value = p;
      },
      onItemDismiss: () => {
        l.value = "";
      }
    }), (p, v) => (b(), _(o(A), {
      ref: o(i),
      "data-orientation": p.orientation,
      "as-child": e.asChild,
      as: p.as
    }, {
      default: h(() => [
        C(p.$slots, "default")
      ]),
      _: 3
    }, 8, ["data-orientation", "as-child", "as"]));
  }
}), Wd = ["aria-owns"], ah = /* @__PURE__ */ w({
  inheritAttrs: !1,
  __name: "NavigationMenuTrigger",
  props: {
    disabled: { type: Boolean },
    asChild: { type: Boolean },
    as: { default: "button" }
  },
  setup(a) {
    const t = a, e = mt(), n = co(), { forwardRef: l, currentElement: s } = I(), r = B(""), i = B(""), u = kt(!1, 300), d = B(!1), c = T(() => n.value === e.modelValue.value);
    se(() => {
      n.triggerRef = s, r.value = Ll(e.baseId, n.value), i.value = uo(e.baseId, n.value);
    });
    function f() {
      e.disableHoverTrigger.value || (d.value = !1, n.wasEscapeCloseRef.value = !1);
    }
    function p(D) {
      if (!e.disableHoverTrigger.value && D.pointerType === "mouse") {
        if (t.disabled || d.value || n.wasEscapeCloseRef.value || u.value)
          return;
        e.onTriggerEnter(n.value), u.value = !0;
      }
    }
    function v(D) {
      if (!e.disableHoverTrigger.value && D.pointerType === "mouse") {
        if (t.disabled)
          return;
        e.onTriggerLeave(), u.value = !1;
      }
    }
    function y(D) {
      D.pointerType === "mouse" && e.disableClickTrigger.value || u.value || (c.value ? e.onItemSelect("") : e.onItemSelect(n.value), d.value = c.value);
    }
    function m(D) {
      const x = { horizontal: "ArrowDown", vertical: e.dir.value === "rtl" ? "ArrowLeft" : "ArrowRight" }[e.orientation];
      c.value && D.key === x && (n.onEntryKeyDown(), D.preventDefault(), D.stopPropagation());
    }
    function S(D) {
      n.focusProxyRef.value = Be(D);
    }
    function P(D) {
      const g = document.getElementById(n.contentId), x = D.relatedTarget, E = x === s.value, $ = g == null ? void 0 : g.contains(x);
      (E || !$) && n.onFocusProxyEnter(E ? "start" : "end");
    }
    return (D, g) => (b(), fe(Pe, null, [
      G(o(A), k({
        id: r.value,
        ref: o(l),
        disabled: D.disabled,
        "data-disabled": D.disabled ? "" : void 0,
        "data-state": o(za)(c.value),
        "aria-expanded": c.value,
        "aria-controls": i.value,
        "as-child": t.asChild,
        as: D.as
      }, D.$attrs, {
        "data-radix-vue-collection-item": "",
        onPointerenter: f,
        onPointermove: p,
        onPointerleave: v,
        onClick: y,
        onKeydown: m
      }), {
        default: h(() => [
          C(D.$slots, "default")
        ]),
        _: 3
      }, 16, ["id", "disabled", "data-disabled", "data-state", "aria-expanded", "aria-controls", "as-child", "as"]),
      c.value ? (b(), fe(Pe, { key: 0 }, [
        G(o(Nt), {
          ref: S,
          "aria-hidden": "",
          tabindex: 0,
          onFocus: P
        }),
        o(e).viewport ? (b(), fe("span", {
          key: 0,
          "aria-owns": i.value
        }, null, 8, Wd)) : ue("", !0)
      ], 64)) : ue("", !0)
    ], 64));
  }
}), nh = /* @__PURE__ */ w({
  inheritAttrs: !1,
  __name: "NavigationMenuViewport",
  props: {
    forceMount: { type: Boolean },
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const { forwardRef: t, currentElement: e } = I(), n = mt(), l = B(), s = T(() => !!n.modelValue.value), r = T(() => n.modelValue.value);
    ee(e, () => {
      e.value && n.onViewportChange(e.value);
    });
    const i = B();
    return ee([r, s], async () => {
      var d, c;
      if (await re(), !e.value)
        return;
      const u = (c = (d = e.value.querySelector("[data-state=open]")) == null ? void 0 : d.children) == null ? void 0 : c[0];
      i.value = u;
    }, { immediate: !0 }), Ge(i, () => {
      i.value && (l.value = {
        width: i.value.offsetWidth,
        height: i.value.offsetHeight
      });
    }), (u, d) => (b(), _(o(Ee), {
      present: u.forceMount || s.value
    }, {
      default: h(() => {
        var c, f;
        return [
          G(o(A), k(u.$attrs, {
            ref: o(t),
            as: u.as,
            "as-child": u.asChild,
            "data-state": o(za)(s.value),
            "data-orientation": o(n).orientation,
            style: {
              // Prevent interaction when animating out
              pointerEvents: !s.value && o(n).isRootMenu ? "none" : void 0,
              "--radix-navigation-menu-viewport-width": l.value ? `${(c = l.value) == null ? void 0 : c.width}px` : void 0,
              "--radix-navigation-menu-viewport-height": l.value ? `${(f = l.value) == null ? void 0 : f.height}px` : void 0
            },
            onPointerenter: d[0] || (d[0] = (p) => o(n).onContentEnter(o(n).modelValue.value)),
            onPointerleave: d[1] || (d[1] = (p) => o(zl)(() => o(n).onContentLeave())(p))
          }), {
            default: h(() => [
              C(u.$slots, "default")
            ]),
            _: 3
          }, 16, ["as", "as-child", "data-state", "data-orientation", "style"])
        ];
      }),
      _: 3
    }, 8, ["present"]));
  }
}), [Ht, jd] = Q("PaginationRoot"), oh = /* @__PURE__ */ w({
  __name: "PaginationRoot",
  props: {
    page: {},
    defaultPage: { default: 1 },
    itemsPerPage: { default: 10 },
    total: { default: 0 },
    siblingCount: { default: 2 },
    disabled: { type: Boolean },
    showEdges: { type: Boolean, default: !1 },
    asChild: { type: Boolean },
    as: { default: "nav" }
  },
  emits: ["update:page"],
  setup(a, { emit: t }) {
    const e = a, n = t, { siblingCount: l, disabled: s, showEdges: r } = le(e);
    I();
    const i = ne(e, "page", n, {
      defaultValue: e.defaultPage,
      passive: e.page === void 0
    }), u = T(() => Math.max(1, Math.ceil(e.total / e.itemsPerPage)));
    return jd({
      page: i,
      onPageChange(d) {
        i.value = d;
      },
      pageCount: u,
      siblingCount: l,
      disabled: s,
      showEdges: r
    }), (d, c) => (b(), _(o(A), {
      as: d.as,
      "as-child": d.asChild
    }, {
      default: h(() => [
        C(d.$slots, "default", {
          page: o(i),
          pageCount: u.value
        })
      ]),
      _: 3
    }, 8, ["as", "as-child"]));
  }
}), lh = /* @__PURE__ */ w({
  __name: "PaginationEllipsis",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    return I(), (e, n) => (b(), _(o(A), k(t, { "data-type": "ellipsis" }), {
      default: h(() => [
        C(e.$slots, "default", {}, () => [
          ye("…")
        ])
      ]),
      _: 3
    }, 16));
  }
}), sh = /* @__PURE__ */ w({
  __name: "PaginationFirst",
  props: {
    asChild: { type: Boolean },
    as: { default: "button" }
  },
  setup(a) {
    const t = a, e = Ht();
    return I(), (n, l) => (b(), _(o(A), k(t, {
      "aria-label": "First Page",
      type: n.as === "button" ? "button" : void 0,
      disabled: o(e).page.value === 1 || o(e).disabled.value,
      onClick: l[0] || (l[0] = (s) => o(e).onPageChange(1))
    }), {
      default: h(() => [
        C(n.$slots, "default", {}, () => [
          ye("First page")
        ])
      ]),
      _: 3
    }, 16, ["type", "disabled"]));
  }
}), rh = /* @__PURE__ */ w({
  __name: "PaginationLast",
  props: {
    asChild: { type: Boolean },
    as: { default: "button" }
  },
  setup(a) {
    const t = a, e = Ht();
    return I(), (n, l) => (b(), _(o(A), k(t, {
      "aria-label": "Last Page",
      type: n.as === "button" ? "button" : void 0,
      disabled: o(e).page.value === o(e).pageCount.value || o(e).disabled.value,
      onClick: l[0] || (l[0] = (s) => o(e).onPageChange(o(e).pageCount.value))
    }), {
      default: h(() => [
        C(n.$slots, "default", {}, () => [
          ye("Last page")
        ])
      ]),
      _: 3
    }, 16, ["type", "disabled"]));
  }
});
function at(a, t) {
  const e = t - a + 1;
  return Array.from({ length: e }, (n, l) => l + a);
}
function Ud(a) {
  return a.map((t) => typeof t == "number" ? { type: "page", value: t } : { type: "ellipsis" });
}
const pa = "ellipsis";
function Gd(a, t, e, n) {
  const s = t, r = Math.max(a - e, 1), i = Math.min(a + e, s), u = r > 1 + 2, d = i < s - 2;
  if (n) {
    const f = Math.min(2 * e + 5, t) - 2;
    if (!u && d)
      return [...at(1, f), pa, s];
    if (u && !d) {
      const v = at(s - f + 1, s);
      return [1, pa, ...v];
    }
    if (u && d) {
      const v = at(r, i);
      return [1, pa, ...v, pa, s];
    }
    return at(1, s);
  } else {
    const c = e * 2 + 1;
    return t < c ? at(1, s) : a <= e + 1 ? at(1, c) : t - a <= e ? at(t - c + 1, s) : at(r, i);
  }
}
const ih = /* @__PURE__ */ w({
  __name: "PaginationList",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    I();
    const e = Ht(), n = T(() => Ud(
      Gd(
        e.page.value,
        e.pageCount.value,
        e.siblingCount.value,
        e.showEdges.value
      )
    ));
    return (l, s) => (b(), _(o(A), z(K(t)), {
      default: h(() => [
        C(l.$slots, "default", { items: n.value })
      ]),
      _: 3
    }, 16));
  }
}), uh = /* @__PURE__ */ w({
  __name: "PaginationListItem",
  props: {
    value: {},
    asChild: { type: Boolean },
    as: { default: "button" }
  },
  setup(a) {
    const t = a;
    I();
    const e = Ht(), n = T(() => e.page.value === t.value);
    return (l, s) => (b(), _(o(A), k(t, {
      "data-type": "page",
      "aria-label": `Page ${l.value}`,
      "aria-current": n.value ? "page" : void 0,
      "data-selected": n.value ? "true" : void 0,
      disabled: o(e).disabled.value,
      type: l.as === "button" ? "button" : void 0,
      onClick: s[0] || (s[0] = (r) => o(e).onPageChange(l.value))
    }), {
      default: h(() => [
        C(l.$slots, "default", {}, () => [
          ye(ke(l.value), 1)
        ])
      ]),
      _: 3
    }, 16, ["aria-label", "aria-current", "data-selected", "disabled", "type"]));
  }
}), dh = /* @__PURE__ */ w({
  __name: "PaginationNext",
  props: {
    asChild: { type: Boolean },
    as: { default: "button" }
  },
  setup(a) {
    const t = a;
    I();
    const e = Ht();
    return (n, l) => (b(), _(o(A), k(t, {
      "aria-label": "Next Page",
      type: n.as === "button" ? "button" : void 0,
      disabled: o(e).page.value === o(e).pageCount.value || o(e).disabled.value,
      onClick: l[0] || (l[0] = (s) => o(e).onPageChange(o(e).page.value + 1))
    }), {
      default: h(() => [
        C(n.$slots, "default", {}, () => [
          ye("Next page")
        ])
      ]),
      _: 3
    }, 16, ["type", "disabled"]));
  }
}), ch = /* @__PURE__ */ w({
  __name: "PaginationPrev",
  props: {
    asChild: { type: Boolean },
    as: { default: "button" }
  },
  setup(a) {
    const t = a;
    I();
    const e = Ht();
    return (n, l) => {
      var s;
      return b(), _(o(A), k(t, {
        "aria-label": "Previous Page",
        type: n.as === "button" ? "button" : void 0,
        disabled: o(e).page.value === 1 || ((s = o(e).disabled) == null ? void 0 : s.value),
        onClick: l[0] || (l[0] = (r) => o(e).onPageChange(o(e).page.value - 1))
      }), {
        default: h(() => [
          C(n.$slots, "default", {}, () => [
            ye("Prev page")
          ])
        ]),
        _: 3
      }, 16, ["type", "disabled"]);
    };
  }
}), qd = ["id", "value", "name", "disabled", "required"], [Yd, Xd] = Q("PinInputRoot"), fh = /* @__PURE__ */ w({
  inheritAttrs: !1,
  __name: "PinInputRoot",
  props: {
    modelValue: {},
    defaultValue: {},
    placeholder: { default: "" },
    mask: { type: Boolean },
    otp: { type: Boolean },
    type: { default: "text" },
    dir: {},
    name: {},
    disabled: { type: Boolean },
    required: { type: Boolean },
    id: {},
    asChild: { type: Boolean },
    as: {}
  },
  emits: ["update:modelValue", "complete"],
  setup(a, { emit: t }) {
    const e = a, n = t, { mask: l, otp: s, placeholder: r, type: i, disabled: u, dir: d } = le(e), { forwardRef: c } = I(), f = be(d), p = ne(e, "modelValue", n, {
      defaultValue: e.defaultValue ?? [],
      passive: e.modelValue === void 0
    }), v = B(/* @__PURE__ */ new Set());
    function y(S) {
      v.value.add(S);
    }
    const m = T(() => p.value.filter((P) => !!P).length === v.value.size);
    return ee(p, () => {
      m.value && n("complete", p.value);
    }, { deep: !0 }), Xd({
      modelValue: p,
      mask: l,
      otp: s,
      placeholder: r,
      type: i,
      dir: f,
      disabled: u,
      isCompleted: m,
      inputElements: v,
      onInputElementChange: y
    }), (S, P) => (b(), fe(Pe, null, [
      G(o(A), k(S.$attrs, {
        ref: o(c),
        dir: o(f),
        "data-complete": m.value ? "" : void 0,
        "data-disabled": o(u) ? "" : void 0
      }), {
        default: h(() => [
          C(S.$slots, "default", { modelValue: o(p) })
        ]),
        _: 3
      }, 16, ["dir", "data-complete", "data-disabled"]),
      je("input", {
        id: S.id,
        type: "text",
        tabindex: "-1",
        "aria-hidden": "",
        value: o(p).join(""),
        name: S.name,
        disabled: o(u),
        required: S.required,
        style: Ce({
          transform: "translateX(-100%)",
          position: "absolute",
          pointerEvents: "none",
          opacity: 0,
          margin: 0
        }),
        onFocus: P[0] || (P[0] = (D) => {
          var g, x;
          return (x = (g = Array.from(v.value)) == null ? void 0 : g[0]) == null ? void 0 : x.focus();
        })
      }, null, 44, qd)
    ], 64));
  }
}), Zd = ["autocomplete", "type", "inputmode", "pattern", "placeholder", "value", "disabled", "data-disabled", "data-complete", "aria-label"], ph = /* @__PURE__ */ w({
  __name: "PinInputInput",
  props: {
    index: {},
    disabled: { type: Boolean },
    asChild: { type: Boolean },
    as: { default: "input" }
  },
  setup(a) {
    const t = a, e = Yd(), n = T(() => Array.from(e.inputElements.value)), l = T(() => t.disabled || e.disabled.value), s = T(() => e.otp.value), r = T(() => e.type.value === "number"), i = T(() => e.mask.value), u = B();
    function d(g) {
      var $;
      const x = g.target;
      if (((($ = g.data) == null ? void 0 : $.length) ?? 0) > 1) {
        S(x.value);
        return;
      }
      if (r.value && !/^[0-9]*$/.test(x.value)) {
        x.value = x.value.replace(/\D/g, "");
        return;
      }
      x.value = x.value.slice(-1), D(t.index, x.value);
      const E = n.value[t.index + 1];
      E && E.focus();
    }
    function c(g) {
      Vt(g, document.activeElement, void 0, {
        itemsArray: n.value,
        focus: !0,
        loop: !1,
        arrowKeyOptions: "horizontal",
        dir: e.dir.value
      });
    }
    function f(g) {
      if (g.preventDefault(), g.target.value)
        D(t.index, "");
      else {
        const $ = n.value[t.index - 1];
        $ && ($.focus(), D(t.index - 1, ""));
      }
    }
    function p(g) {
      g.key === "Delete" && (g.preventDefault(), D(t.index, ""));
    }
    function v(g) {
      const x = g.target;
      x.setSelectionRange(1, 1), x.value || (x.placeholder = "");
    }
    function y(g) {
      const x = g.target;
      re(() => {
        x.value || (x.placeholder = e.placeholder.value);
      });
    }
    function m(g) {
      g.preventDefault();
      const x = g.clipboardData;
      if (!x)
        return;
      const E = x.getData("text");
      S(E);
    }
    function S(g) {
      var R;
      const x = [...e.modelValue.value], E = g.length >= n.value.length ? 0 : t.index, $ = Math.min(E + g.length, n.value.length);
      for (let M = E; M < $; M++) {
        const V = n.value[M], O = g[M - E];
        r.value && !/^[0-9]*$/.test(O) || (x[M] = O, V.focus());
      }
      e.modelValue.value = x, (R = n.value[$]) == null || R.focus();
    }
    function P(g) {
      let x = g.length - 1;
      for (; x >= 0 && g[x] === ""; )
        g.pop(), x--;
      return g;
    }
    function D(g, x) {
      const E = [...e.modelValue.value];
      E[g] = x, e.modelValue.value = P(E);
    }
    return se(() => {
      e.onInputElementChange(u.value);
    }), Te(() => {
      var g;
      (g = e.inputElements) == null || g.value.delete(u.value);
    }), (g, x) => (b(), fe("input", {
      ref_key: "inputRef",
      ref: u,
      autocapitalize: "none",
      autocomplete: s.value ? "one-time-code" : "false",
      type: i.value ? "password" : "text",
      inputmode: r.value ? "numeric" : "text",
      pattern: r.value ? "[0-9]*" : void 0,
      placeholder: o(e).placeholder.value,
      value: o(e).modelValue.value.at(g.index),
      disabled: l.value,
      "data-disabled": l.value ? "" : void 0,
      "data-complete": o(e).isCompleted.value ? "" : void 0,
      "aria-label": `pin input ${g.index + 1} of ${n.value.length}`,
      onInput: x[0] || (x[0] = (E) => d(E)),
      onKeydown: [
        he(c, ["left", "right", "up", "down", "home", "end"]),
        he(f, ["backspace"]),
        he(p, ["delete"])
      ],
      onFocus: v,
      onBlur: y,
      onPaste: m
    }, null, 40, Zd));
  }
}), [Dt, Jd] = Q("PopoverRoot"), Kl = /* @__PURE__ */ w({
  __name: "PopoverRoot",
  props: {
    defaultOpen: { type: Boolean, default: !1 },
    open: { type: Boolean, default: void 0 },
    modal: { type: Boolean, default: !1 }
  },
  emits: ["update:open"],
  setup(a, { emit: t }) {
    const e = a, n = t, { modal: l } = le(e), s = ne(e, "open", n, {
      defaultValue: e.defaultOpen,
      passive: e.open === void 0
    }), r = B(), i = B(!1);
    return Jd({
      contentId: "",
      modal: l,
      open: s,
      onOpenChange: (u) => {
        s.value = u;
      },
      onOpenToggle: () => {
        s.value = !s.value;
      },
      triggerElement: r,
      hasCustomAnchor: i
    }), (u, d) => (b(), _(o(xt), null, {
      default: h(() => [
        C(u.$slots, "default")
      ]),
      _: 3
    }));
  }
}), Hl = /* @__PURE__ */ w({
  __name: "PopoverTrigger",
  props: {
    asChild: { type: Boolean },
    as: { default: "button" }
  },
  setup(a) {
    const t = a, e = Dt(), { forwardRef: n, currentElement: l } = I();
    return se(() => {
      e.triggerElement.value = l.value;
    }), (s, r) => (b(), _(Ue(o(e).hasCustomAnchor.value ? o(A) : o(St)), { "as-child": "" }, {
      default: h(() => [
        G(o(A), {
          ref: o(n),
          type: s.as === "button" ? "button" : void 0,
          "aria-haspopup": "dialog",
          "aria-expanded": o(e).open.value,
          "aria-controls": o(e).contentId,
          "data-state": o(e).open.value ? "open" : "closed",
          as: s.as,
          "as-child": t.asChild,
          onClick: o(e).onOpenToggle
        }, {
          default: h(() => [
            C(s.$slots, "default")
          ]),
          _: 3
        }, 8, ["type", "aria-expanded", "aria-controls", "data-state", "as", "as-child", "onClick"])
      ]),
      _: 3
    }));
  }
}), Wl = /* @__PURE__ */ w({
  __name: "PopoverPortal",
  props: {
    to: {},
    disabled: { type: Boolean },
    forceMount: { type: Boolean }
  },
  setup(a) {
    const t = a;
    return (e, n) => (b(), _(o(pt), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), jl = /* @__PURE__ */ w({
  __name: "PopoverContentImpl",
  props: {
    trapFocus: { type: Boolean },
    side: {},
    sideOffset: {},
    align: {},
    alignOffset: {},
    avoidCollisions: { type: Boolean },
    collisionBoundary: {},
    collisionPadding: {},
    arrowPadding: {},
    sticky: {},
    hideWhenDetached: { type: Boolean },
    updatePositionStrategy: {},
    prioritizePosition: { type: Boolean },
    asChild: { type: Boolean },
    as: {},
    disableOutsidePointerEvents: { type: Boolean }
  },
  emits: ["escapeKeyDown", "pointerDownOutside", "focusOutside", "interactOutside", "openAutoFocus", "closeAutoFocus"],
  setup(a, { emit: t }) {
    const e = a, n = t, l = _t(e), { forwardRef: s } = I(), r = Dt();
    return On(), (i, u) => (b(), _(o(Aa), {
      "as-child": "",
      loop: "",
      trapped: i.trapFocus,
      onMountAutoFocus: u[5] || (u[5] = (d) => n("openAutoFocus", d)),
      onUnmountAutoFocus: u[6] || (u[6] = (d) => n("closeAutoFocus", d))
    }, {
      default: h(() => [
        G(o(vt), {
          "as-child": "",
          "disable-outside-pointer-events": i.disableOutsidePointerEvents,
          onPointerDownOutside: u[0] || (u[0] = (d) => n("pointerDownOutside", d)),
          onInteractOutside: u[1] || (u[1] = (d) => n("interactOutside", d)),
          onEscapeKeyDown: u[2] || (u[2] = (d) => n("escapeKeyDown", d)),
          onFocusOutside: u[3] || (u[3] = (d) => n("focusOutside", d)),
          onDismiss: u[4] || (u[4] = (d) => o(r).onOpenChange(!1))
        }, {
          default: h(() => [
            G(o(Ct), k(o(l), {
              id: o(r).contentId,
              ref: o(s),
              "data-state": o(r).open.value ? "open" : "closed",
              role: "dialog",
              style: {
                "--radix-popover-content-transform-origin": "var(--radix-popper-transform-origin)",
                "--radix-popover-content-available-width": "var(--radix-popper-available-width)",
                "--radix-popover-content-available-height": "var(--radix-popper-available-height)",
                "--radix-popover-trigger-width": "var(--radix-popper-anchor-width)",
                "--radix-popover-trigger-height": "var(--radix-popper-anchor-height)"
              }
            }), {
              default: h(() => [
                C(i.$slots, "default")
              ]),
              _: 3
            }, 16, ["id", "data-state", "style"])
          ]),
          _: 3
        }, 8, ["disable-outside-pointer-events"])
      ]),
      _: 3
    }, 8, ["trapped"]));
  }
}), Qd = /* @__PURE__ */ w({
  __name: "PopoverContentModal",
  props: {
    trapFocus: { type: Boolean },
    side: {},
    sideOffset: {},
    align: {},
    alignOffset: {},
    avoidCollisions: { type: Boolean },
    collisionBoundary: {},
    collisionPadding: {},
    arrowPadding: {},
    sticky: {},
    hideWhenDetached: { type: Boolean },
    updatePositionStrategy: {},
    prioritizePosition: { type: Boolean },
    asChild: { type: Boolean },
    as: {},
    disableOutsidePointerEvents: { type: Boolean }
  },
  emits: ["escapeKeyDown", "pointerDownOutside", "focusOutside", "interactOutside", "openAutoFocus", "closeAutoFocus"],
  setup(a, { emit: t }) {
    const e = a, n = t, l = Dt(), s = B(!1);
    sa(!0);
    const r = _e(e, n), { forwardRef: i, currentElement: u } = I();
    return ra(u), (d, c) => (b(), _(jl, k(o(r), {
      ref: o(i),
      "trap-focus": o(l).open.value,
      "disable-outside-pointer-events": "",
      onCloseAutoFocus: c[0] || (c[0] = ge(
        (f) => {
          var p;
          n("closeAutoFocus", f), s.value || (p = o(l).triggerElement.value) == null || p.focus();
        },
        ["prevent"]
      )),
      onPointerDownOutside: c[1] || (c[1] = (f) => {
        n("pointerDownOutside", f);
        const p = f.detail.originalEvent, v = p.button === 0 && p.ctrlKey === !0, y = p.button === 2 || v;
        s.value = y;
      }),
      onFocusOutside: c[2] || (c[2] = ge(() => {
      }, ["prevent"]))
    }), {
      default: h(() => [
        C(d.$slots, "default")
      ]),
      _: 3
    }, 16, ["trap-focus"]));
  }
}), ec = /* @__PURE__ */ w({
  __name: "PopoverContentNonModal",
  props: {
    trapFocus: { type: Boolean },
    side: {},
    sideOffset: {},
    align: {},
    alignOffset: {},
    avoidCollisions: { type: Boolean },
    collisionBoundary: {},
    collisionPadding: {},
    arrowPadding: {},
    sticky: {},
    hideWhenDetached: { type: Boolean },
    updatePositionStrategy: {},
    prioritizePosition: { type: Boolean },
    asChild: { type: Boolean },
    as: {},
    disableOutsidePointerEvents: { type: Boolean }
  },
  emits: ["escapeKeyDown", "pointerDownOutside", "focusOutside", "interactOutside", "openAutoFocus", "closeAutoFocus"],
  setup(a, { emit: t }) {
    const e = a, n = t, l = Dt(), s = B(!1), r = B(!1), i = _e(e, n);
    return (u, d) => (b(), _(jl, k(o(i), {
      "trap-focus": !1,
      "disable-outside-pointer-events": !1,
      onCloseAutoFocus: d[0] || (d[0] = (c) => {
        var f;
        n("closeAutoFocus", c), c.defaultPrevented || (s.value || (f = o(l).triggerElement.value) == null || f.focus(), c.preventDefault()), s.value = !1, r.value = !1;
      }),
      onInteractOutside: d[1] || (d[1] = async (c) => {
        var v;
        n("interactOutside", c), c.defaultPrevented || (s.value = !0, c.detail.originalEvent.type === "pointerdown" && (r.value = !0));
        const f = c.target;
        ((v = o(l).triggerElement.value) == null ? void 0 : v.contains(f)) && c.preventDefault(), c.detail.originalEvent.type === "focusin" && r.value && c.preventDefault();
      })
    }), {
      default: h(() => [
        C(u.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), Ul = /* @__PURE__ */ w({
  __name: "PopoverContent",
  props: {
    forceMount: { type: Boolean },
    trapFocus: { type: Boolean },
    side: {},
    sideOffset: {},
    align: {},
    alignOffset: {},
    avoidCollisions: { type: Boolean },
    collisionBoundary: {},
    collisionPadding: {},
    arrowPadding: {},
    sticky: {},
    hideWhenDetached: { type: Boolean },
    updatePositionStrategy: {},
    prioritizePosition: { type: Boolean },
    asChild: { type: Boolean },
    as: {},
    disableOutsidePointerEvents: { type: Boolean }
  },
  emits: ["escapeKeyDown", "pointerDownOutside", "focusOutside", "interactOutside", "openAutoFocus", "closeAutoFocus"],
  setup(a, { emit: t }) {
    const e = a, n = t, l = Dt(), s = _e(e, n), { forwardRef: r } = I();
    return l.contentId || (l.contentId = me(void 0, "radix-vue-popover-content")), (i, u) => (b(), _(o(Ee), {
      present: i.forceMount || o(l).open.value
    }, {
      default: h(() => [
        o(l).modal.value ? (b(), _(Qd, k({ key: 0 }, o(s), { ref: o(r) }), {
          default: h(() => [
            C(i.$slots, "default")
          ]),
          _: 3
        }, 16)) : (b(), _(ec, k({ key: 1 }, o(s), { ref: o(r) }), {
          default: h(() => [
            C(i.$slots, "default")
          ]),
          _: 3
        }, 16))
      ]),
      _: 3
    }, 8, ["present"]));
  }
}), Gl = /* @__PURE__ */ w({
  __name: "PopoverArrow",
  props: {
    width: { default: 10 },
    height: { default: 5 },
    asChild: { type: Boolean },
    as: { default: "svg" }
  },
  setup(a) {
    const t = a;
    return I(), (e, n) => (b(), _(o(Lt), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), ql = /* @__PURE__ */ w({
  __name: "PopoverClose",
  props: {
    asChild: { type: Boolean },
    as: { default: "button" }
  },
  setup(a) {
    const t = a;
    I();
    const e = Dt();
    return (n, l) => (b(), _(o(A), {
      type: n.as === "button" ? "button" : void 0,
      as: n.as,
      "as-child": t.asChild,
      onClick: l[0] || (l[0] = (s) => o(e).onOpenChange(!1))
    }, {
      default: h(() => [
        C(n.$slots, "default")
      ]),
      _: 3
    }, 8, ["type", "as", "as-child"]));
  }
}), Yl = /* @__PURE__ */ w({
  __name: "PopoverAnchor",
  props: {
    element: {},
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    I();
    const e = Dt();
    return Yo(() => {
      e.hasCustomAnchor.value = !0;
    }), Te(() => {
      e.hasCustomAnchor.value = !1;
    }), (n, l) => (b(), _(o(St), z(K(t)), {
      default: h(() => [
        C(n.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), ea = 100, [tc, ac] = Q("ProgressRoot"), fo = (a) => typeof a == "number";
function nc(a, t) {
  return a === null || fo(a) && !Number.isNaN(a) && a <= t && a >= 0 ? a : (console.error(`Invalid prop \`value\` of value \`${a}\` supplied to \`ProgressRoot\`. The \`value\` prop must be:
  - a positive number
  - less than the value passed to \`max\` (or ${ea} if no \`max\` prop is set)
  - \`null\` if the progress is indeterminate.

Defaulting to \`null\`.`), null);
}
function oc(a) {
  return fo(a) && !Number.isNaN(a) && a > 0 ? a : (console.error(
    `Invalid prop \`max\` of value \`${a}\` supplied to \`ProgressRoot\`. Only numbers greater than 0 are valid max values. Defaulting to \`${ea}\`.`
  ), ea);
}
const vh = /* @__PURE__ */ w({
  __name: "ProgressRoot",
  props: {
    modelValue: {},
    max: { default: ea },
    getValueLabel: { type: Function, default: (a, t) => `${Math.round(a / t * ea)}%` },
    asChild: { type: Boolean },
    as: {}
  },
  emits: ["update:modelValue", "update:max"],
  setup(a, { emit: t }) {
    const e = a, n = t;
    I();
    const l = ne(e, "modelValue", n, {
      passive: e.modelValue === void 0
    }), s = ne(e, "max", n, {
      passive: e.max === void 0
    });
    ee(
      () => l.value,
      async (i) => {
        const u = nc(i, e.max);
        u !== i && (await re(), l.value = u);
      },
      { immediate: !0 }
    ), ee(
      () => e.max,
      (i) => {
        const u = oc(e.max);
        u !== i && (s.value = u);
      },
      { immediate: !0 }
    );
    const r = T(() => l.value ? l.value === s.value ? "complete" : "loading" : "indeterminate");
    return ac({
      modelValue: l,
      max: s,
      progressState: r
    }), (i, u) => (b(), _(o(A), {
      "as-child": i.asChild,
      as: i.as,
      "aria-valuemax": o(s),
      "aria-valuemin": 0,
      "aria-valuenow": fo(o(l)) ? o(l) : void 0,
      "aria-valuetext": i.getValueLabel(o(l), o(s)),
      "aria-label": i.getValueLabel(o(l), o(s)),
      role: "progressbar",
      "data-state": r.value,
      "data-value": o(l) ?? void 0,
      "data-max": o(s)
    }, {
      default: h(() => [
        C(i.$slots, "default")
      ]),
      _: 3
    }, 8, ["as-child", "as", "aria-valuemax", "aria-valuenow", "aria-valuetext", "aria-label", "data-state", "data-value", "data-max"]));
  }
}), mh = /* @__PURE__ */ w({
  __name: "ProgressIndicator",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a, e = tc();
    return I(), (n, l) => {
      var s;
      return b(), _(o(A), k(t, {
        "data-state": o(e).progressState.value,
        "data-value": ((s = o(e).modelValue) == null ? void 0 : s.value) ?? void 0,
        "data-max": o(e).max.value
      }), {
        default: h(() => [
          C(n.$slots, "default")
        ]),
        _: 3
      }, 16, ["data-state", "data-value", "data-max"]);
    };
  }
}), [lc, sc] = Q("RadioGroupRoot"), hh = /* @__PURE__ */ w({
  __name: "RadioGroupRoot",
  props: {
    modelValue: {},
    defaultValue: {},
    disabled: { type: Boolean, default: !1 },
    name: {},
    required: { type: Boolean, default: !1 },
    orientation: { default: void 0 },
    dir: {},
    loop: { type: Boolean, default: !0 },
    asChild: { type: Boolean },
    as: {}
  },
  emits: ["update:modelValue"],
  setup(a, { emit: t }) {
    const e = a, n = t, { forwardRef: l } = I(), s = ne(e, "modelValue", n, {
      defaultValue: e.defaultValue,
      passive: e.modelValue === void 0
    }), { disabled: r, loop: i, orientation: u, name: d, required: c, dir: f } = le(e), p = be(f);
    return sc({
      modelValue: s,
      changeModelValue: (v) => {
        s.value = v;
      },
      disabled: r,
      loop: i,
      orientation: u,
      name: d == null ? void 0 : d.value,
      required: c
    }), (v, y) => (b(), _(o(zt), {
      "as-child": "",
      orientation: o(u),
      dir: o(p),
      loop: o(i)
    }, {
      default: h(() => [
        G(o(A), {
          ref: o(l),
          role: "radiogroup",
          "data-disabled": o(r) ? "" : void 0,
          "as-child": v.asChild,
          as: v.as,
          required: o(c),
          "aria-orientation": o(u),
          "aria-required": o(c),
          dir: o(p),
          name: o(d)
        }, {
          default: h(() => [
            C(v.$slots, "default")
          ]),
          _: 3
        }, 8, ["data-disabled", "as-child", "as", "required", "aria-orientation", "aria-required", "dir", "name"])
      ]),
      _: 3
    }, 8, ["orientation", "dir", "loop"]));
  }
}), rc = ["value", "checked", "name", "disabled", "required"], ic = /* @__PURE__ */ w({
  __name: "Radio",
  props: {
    id: {},
    value: {},
    disabled: { type: Boolean, default: !1 },
    required: { type: Boolean },
    checked: { type: Boolean, default: void 0 },
    name: {},
    asChild: { type: Boolean },
    as: { default: "button" }
  },
  emits: ["update:checked"],
  setup(a, { emit: t }) {
    const e = a, l = ne(e, "checked", t, {
      passive: e.checked === void 0
    }), { value: s } = le(e), { forwardRef: r, currentElement: i } = I(), u = ct(i), d = T(() => {
      var f;
      return e.id && i.value ? ((f = document.querySelector(`[for="${e.id}"]`)) == null ? void 0 : f.innerText) ?? e.value : void 0;
    });
    function c(f) {
      l.value = !0, u.value && f.stopPropagation();
    }
    return (f, p) => (b(), _(o(A), k(f.$attrs, {
      id: f.id,
      ref: o(r),
      role: "radio",
      type: f.as === "button" ? "button" : void 0,
      as: f.as,
      "aria-checked": o(l),
      "aria-label": d.value,
      "as-child": f.asChild,
      disabled: f.disabled ? !0 : void 0,
      "data-state": o(l) ? "checked" : "unchecked",
      "data-disabled": f.disabled ? "" : void 0,
      value: o(s),
      required: f.required,
      name: f.name,
      onClick: ge(c, ["stop"])
    }), {
      default: h(() => [
        C(f.$slots, "default"),
        o(u) ? (b(), fe("input", {
          key: 0,
          type: "radio",
          tabindex: "-1",
          "aria-hidden": "",
          value: o(s),
          checked: !!o(l),
          name: f.name,
          disabled: f.disabled,
          required: f.required,
          style: Ce({
            transform: "translateX(-100%)",
            position: "absolute",
            pointerEvents: "none",
            opacity: 0,
            margin: 0
          })
        }, null, 12, rc)) : ue("", !0)
      ]),
      _: 3
    }, 16, ["id", "type", "as", "aria-checked", "aria-label", "as-child", "disabled", "data-state", "data-disabled", "value", "required", "name"]));
  }
}), [uc, dc] = Q("RadioGroupItem"), yh = /* @__PURE__ */ w({
  inheritAttrs: !1,
  __name: "RadioGroupItem",
  props: {
    id: {},
    value: {},
    disabled: { type: Boolean, default: !1 },
    required: { type: Boolean },
    name: {},
    asChild: { type: Boolean },
    as: { default: "button" }
  },
  setup(a) {
    const t = a, { forwardRef: e, currentElement: n } = I(), l = lc(), s = T(() => l.disabled.value || t.disabled), r = T(() => l.required.value || t.required), i = T(() => {
      var f;
      return ((f = l.modelValue) == null ? void 0 : f.value) === t.value;
    });
    dc({ disabled: s, checked: i });
    const u = B(!1), d = ["ArrowUp", "ArrowDown", "ArrowLeft", "ArrowRight"];
    it("keydown", (f) => {
      d.includes(f.key) && (u.value = !0);
    }), it("keyup", () => {
      u.value = !1;
    });
    function c() {
      setTimeout(() => {
        var f;
        u.value && ((f = n.value) == null || f.click());
      }, 0);
    }
    return (f, p) => (b(), _(o(Kt), {
      checked: i.value,
      disabled: s.value,
      "as-child": "",
      focusable: !s.value,
      active: i.value
    }, {
      default: h(() => [
        G(ic, k({ ...f.$attrs, ...t }, {
          ref: o(e),
          checked: i.value,
          required: r.value,
          "onUpdate:checked": p[0] || (p[0] = (v) => o(l).changeModelValue(f.value)),
          onKeydown: p[1] || (p[1] = he(ge(() => {
          }, ["prevent"]), ["enter"])),
          onFocus: c
        }), {
          default: h(() => [
            C(f.$slots, "default")
          ]),
          _: 3
        }, 16, ["checked", "required"])
      ]),
      _: 3
    }, 8, ["checked", "disabled", "focusable", "active"]));
  }
}), gh = /* @__PURE__ */ w({
  __name: "RadioGroupIndicator",
  props: {
    forceMount: { type: Boolean },
    asChild: { type: Boolean },
    as: { default: "span" }
  },
  setup(a) {
    const { forwardRef: t } = I(), e = uc();
    return (n, l) => (b(), _(o(Ee), {
      present: n.forceMount || o(e).checked.value
    }, {
      default: h(() => [
        G(o(A), k({
          ref: o(t),
          "data-state": o(e).checked.value ? "checked" : "unchecked",
          "data-disabled": o(e).disabled.value ? "" : void 0,
          "as-child": n.asChild,
          as: n.as
        }, n.$attrs), {
          default: h(() => [
            C(n.$slots, "default")
          ]),
          _: 3
        }, 16, ["data-state", "data-disabled", "as-child", "as"])
      ]),
      _: 3
    }, 8, ["present"]));
  }
});
function cc(a) {
  const t = T(() => a.start.value ? !!a.isDateDisabled(a.start.value) : !1), e = T(() => a.end.value ? !!a.isDateDisabled(a.end.value) : !1), n = T(
    () => t.value || e.value ? !1 : !!(a.start.value && a.end.value && Le(a.end.value, a.start.value))
  ), l = (u) => a.start.value ? Oe(a.start.value, u) : !1, s = (u) => a.end.value ? Oe(a.end.value, u) : !1, r = (u) => a.start.value && Oe(a.start.value, u) || a.end.value && Oe(a.end.value, u) ? !0 : a.end.value && a.start.value ? qs(u, a.start.value, a.end.value) : !1, i = T(() => {
    if (a.start.value && a.end.value || !a.start.value || !a.focusedValue.value)
      return null;
    const u = Le(a.start.value, a.focusedValue.value), d = u ? a.start.value : a.focusedValue.value, c = u ? a.focusedValue.value : a.start.value;
    return Oe(d.add({ days: 1 }), c) ? {
      start: d,
      end: c
    } : Jo(d, c, a.isDateUnavailable, a.isDateDisabled) ? {
      start: d,
      end: c
    } : null;
  });
  return {
    isInvalid: n,
    isSelected: r,
    highlightedRange: i,
    isSelectionStart: l,
    isSelectionEnd: s
  };
}
const fc = { style: { border: "0px", clip: "rect(0px, 0px, 0px, 0px)", "clip-path": "inset(50%)", height: "1px", margin: "-1px", overflow: "hidden", padding: "0px", position: "absolute", "white-space": "nowrap", width: "1px" } }, pc = {
  role: "heading",
  "aria-level": "2"
}, [Wt, vc] = Q("RangeCalendarRoot"), mc = /* @__PURE__ */ w({
  __name: "RangeCalendarRoot",
  props: {
    defaultPlaceholder: {},
    defaultValue: { default: () => ({ start: void 0, end: void 0 }) },
    modelValue: {},
    placeholder: { default: void 0 },
    pagedNavigation: { type: Boolean, default: !1 },
    preventDeselect: { type: Boolean, default: !1 },
    weekStartsOn: { default: 0 },
    weekdayFormat: { default: "narrow" },
    calendarLabel: {},
    fixedWeeks: { type: Boolean, default: !1 },
    maxValue: {},
    minValue: {},
    locale: { default: "en" },
    numberOfMonths: { default: 1 },
    disabled: { type: Boolean, default: !1 },
    readonly: { type: Boolean, default: !1 },
    initialFocus: { type: Boolean, default: !1 },
    isDateDisabled: { type: Function, default: void 0 },
    isDateUnavailable: { type: Function, default: void 0 },
    dir: {},
    asChild: { type: Boolean },
    as: { default: "div" }
  },
  emits: ["update:modelValue", "update:placeholder", "update:startValue"],
  setup(a, { emit: t }) {
    const e = a, n = t, {
      disabled: l,
      readonly: s,
      initialFocus: r,
      pagedNavigation: i,
      weekStartsOn: u,
      weekdayFormat: d,
      fixedWeeks: c,
      numberOfMonths: f,
      preventDeselect: p,
      isDateUnavailable: v,
      isDateDisabled: y,
      calendarLabel: m,
      maxValue: S,
      minValue: P,
      locale: D,
      dir: g
    } = le(e), { primitiveElement: x, currentElement: E } = qe(), $ = be(g), R = B(), M = B(), V = ne(e, "modelValue", n, {
      defaultValue: e.defaultValue,
      passive: e.modelValue === void 0
    }), O = Ot({
      defaultPlaceholder: e.placeholder,
      defaultValue: V.value.start
    }), L = B(V.value.start), j = B(V.value.end), J = ne(e, "placeholder", n, {
      defaultValue: e.defaultPlaceholder ?? O.copy(),
      passive: e.placeholder === void 0
    });
    function W(pe) {
      J.value = pe.copy();
    }
    const {
      fullCalendarLabel: X,
      headingValue: N,
      isDateDisabled: q,
      isDateUnavailable: F,
      isNextButtonDisabled: Z,
      isPrevButtonDisabled: U,
      grid: Y,
      weekdays: te,
      isOutsideVisibleView: de,
      nextPage: H,
      prevPage: oe,
      formatter: ce
    } = Cl({
      locale: D,
      placeholder: J,
      weekStartsOn: u,
      fixedWeeks: c,
      numberOfMonths: f,
      minValue: P,
      maxValue: S,
      disabled: l,
      weekdayFormat: d,
      pagedNavigation: i,
      isDateDisabled: y.value,
      isDateUnavailable: v.value,
      calendarLabel: m
    }), {
      isInvalid: xe,
      isSelected: ae,
      highlightedRange: we,
      isSelectionStart: De,
      isSelectionEnd: $e
    } = cc({
      start: L,
      end: j,
      isDateDisabled: q,
      isDateUnavailable: F,
      focusedValue: M
    });
    return ee(V, (pe) => {
      pe.start && pe.end && (L.value && !Se(L.value, pe.start) && (L.value = pe.start.copy()), j.value && !Se(j.value, pe.end) && (j.value = pe.end.copy()));
    }), ee(L, (pe) => {
      pe && !Se(pe, J.value) && W(pe), n("update:startValue", pe);
    }), ee([L, j], ([pe, Me]) => {
      const Ae = V.value;
      if (!(Ae && Ae.start && Ae.end && pe && Me && Se(Ae.start, pe) && Se(Ae.end, Me)))
        if (pe && Me) {
          if (Ae.start && Ae.end && Se(Ae.start, pe) && Se(Ae.end, Me))
            return;
          Le(Me, pe) ? V.value = {
            start: Me.copy(),
            end: pe.copy()
          } : V.value = {
            start: pe.copy(),
            end: Me.copy()
          };
        } else
          Ae.start && Ae.end && (V.value = {
            start: void 0,
            end: void 0
          });
    }), vc({
      isDateUnavailable: F,
      startValue: L,
      endValue: j,
      formatter: ce,
      modelValue: V,
      placeholder: J,
      disabled: l,
      initialFocus: r,
      pagedNavigation: i,
      weekStartsOn: u,
      weekdayFormat: d,
      fixedWeeks: c,
      numberOfMonths: f,
      readonly: s,
      preventDeselect: p,
      fullCalendarLabel: X,
      headingValue: N,
      isInvalid: xe,
      isDateDisabled: q,
      highlightedRange: we,
      focusedValue: M,
      lastPressedDateValue: R,
      isSelected: ae,
      isSelectionEnd: $e,
      isSelectionStart: De,
      isNextButtonDisabled: Z,
      isPrevButtonDisabled: U,
      isOutsideVisibleView: de,
      nextPage: H,
      prevPage: oe,
      parentElement: E,
      onPlaceholderChange: W,
      locale: D,
      dir: $
    }), se(() => {
      r.value && al(E.value);
    }), (pe, Me) => (b(), _(o(A), {
      ref_key: "primitiveElement",
      ref: x,
      as: pe.as,
      "as-child": pe.asChild,
      role: "application",
      "aria-label": o(X),
      "data-readonly": o(s) ? "" : void 0,
      "data-disabled": o(l) ? "" : void 0,
      "data-invalid": o(xe) ? "" : void 0,
      dir: o($)
    }, {
      default: h(() => [
        je("div", fc, [
          je("div", pc, ke(o(X)), 1)
        ]),
        C(pe.$slots, "default", {
          date: o(J),
          grid: o(Y),
          weekDays: o(te),
          weekStartsOn: o(u),
          locale: o(D),
          fixedWeeks: o(c)
        })
      ]),
      _: 3
    }, 8, ["as", "as-child", "aria-label", "data-readonly", "data-disabled", "data-invalid", "dir"]));
  }
}), hc = /* @__PURE__ */ w({
  __name: "RangeCalendarHeader",
  props: {
    asChild: { type: Boolean },
    as: { default: "div" }
  },
  setup(a) {
    const t = a;
    return (e, n) => (b(), _(o(A), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), yc = /* @__PURE__ */ w({
  __name: "RangeCalendarHeading",
  props: {
    asChild: { type: Boolean },
    as: { default: "div" }
  },
  setup(a) {
    const t = a, e = Wt();
    return (n, l) => (b(), _(o(A), k(t, {
      "data-disabled": o(e).disabled.value ? "" : void 0
    }), {
      default: h(() => [
        C(n.$slots, "default", {
          headingValue: o(e).headingValue.value
        }, () => [
          ye(ke(o(e).headingValue.value), 1)
        ])
      ]),
      _: 3
    }, 16, ["data-disabled"]));
  }
}), gc = /* @__PURE__ */ w({
  __name: "RangeCalendarGrid",
  props: {
    asChild: { type: Boolean },
    as: { default: "table" }
  },
  setup(a) {
    const t = a, e = Wt();
    return (n, l) => (b(), _(o(A), k(t, {
      tabindex: "-1",
      role: "grid",
      "aria-readonly": o(e).readonly ? !0 : void 0,
      "aria-disabled": o(e).disabled ? !0 : void 0,
      "data-readonly": o(e).readonly ? "" : void 0,
      "data-disabled": o(e).disabled ? "" : void 0
    }), {
      default: h(() => [
        C(n.$slots, "default")
      ]),
      _: 3
    }, 16, ["aria-readonly", "aria-disabled", "data-readonly", "data-disabled"]));
  }
}), bc = /* @__PURE__ */ w({
  __name: "RangeCalendarCell",
  props: {
    date: {},
    asChild: { type: Boolean },
    as: { default: "td" }
  },
  setup(a) {
    const t = Wt();
    return (e, n) => {
      var l, s;
      return b(), _(o(A), {
        as: e.as,
        "as-child": e.asChild,
        role: "gridcell",
        "aria-selected": o(t).isSelected(e.date) ? !0 : void 0,
        "aria-disabled": o(t).isDateDisabled(e.date) || ((s = (l = o(t)).isDateUnavailable) == null ? void 0 : s.call(l, e.date)),
        "data-disabled": o(t).isDateDisabled(e.date) ? "" : void 0
      }, {
        default: h(() => [
          C(e.$slots, "default")
        ]),
        _: 3
      }, 8, ["as", "as-child", "aria-selected", "aria-disabled", "data-disabled"]);
    };
  }
}), Cc = /* @__PURE__ */ w({
  __name: "RangeCalendarHeadCell",
  props: {
    asChild: { type: Boolean },
    as: { default: "th" }
  },
  setup(a) {
    const t = a;
    return (e, n) => (b(), _(o(A), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), wc = /* @__PURE__ */ w({
  __name: "RangeCalendarNext",
  props: {
    asChild: { type: Boolean },
    as: { default: "button" }
  },
  setup(a) {
    const t = a, e = Wt();
    return (n, l) => (b(), _(o(A), k(t, {
      "aria-label": "Next page",
      type: n.as === "button" ? "button" : void 0,
      "aria-disabled": o(e).isNextButtonDisabled.value || void 0,
      "data-disabled": o(e).isNextButtonDisabled.value || void 0,
      disabled: o(e).isNextButtonDisabled.value,
      onClick: o(e).nextPage
    }), {
      default: h(() => [
        C(n.$slots, "default", {}, () => [
          ye("Next page")
        ])
      ]),
      _: 3
    }, 16, ["type", "aria-disabled", "data-disabled", "disabled", "onClick"]));
  }
}), _c = /* @__PURE__ */ w({
  __name: "RangeCalendarPrev",
  props: {
    asChild: { type: Boolean },
    as: { default: "button" }
  },
  setup(a) {
    const t = a, e = Wt();
    return (n, l) => (b(), _(o(A), k(t, {
      "aria-label": "Previous page",
      type: n.as === "button" ? "button" : void 0,
      "aria-disabled": o(e).isPrevButtonDisabled.value || void 0,
      "data-disabled": o(e).isPrevButtonDisabled.value || void 0,
      disabled: o(e).isPrevButtonDisabled.value,
      onClick: o(e).prevPage
    }), {
      default: h(() => [
        C(n.$slots, "default", {}, () => [
          ye("Prev page")
        ])
      ]),
      _: 3
    }, 16, ["type", "aria-disabled", "data-disabled", "disabled", "onClick"]));
  }
}), xc = /* @__PURE__ */ w({
  __name: "RangeCalendarGridHead",
  props: {
    asChild: { type: Boolean },
    as: { default: "thead" }
  },
  setup(a) {
    const t = a;
    return (e, n) => (b(), _(o(A), k(t, { "aria-hidden": "true" }), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), Sc = /* @__PURE__ */ w({
  __name: "RangeCalendarGridBody",
  props: {
    asChild: { type: Boolean },
    as: { default: "tbody" }
  },
  setup(a) {
    const t = a;
    return (e, n) => (b(), _(o(A), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), Pc = /* @__PURE__ */ w({
  __name: "RangeCalendarGridRow",
  props: {
    asChild: { type: Boolean },
    as: { default: "tr" }
  },
  setup(a) {
    const t = a;
    return (e, n) => (b(), _(o(A), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), Ec = /* @__PURE__ */ w({
  __name: "RangeCalendarCellTrigger",
  props: {
    day: {},
    month: {},
    asChild: { type: Boolean },
    as: { default: "div" }
  },
  setup(a) {
    const t = a, e = Wt(), n = ft(), { primitiveElement: l, currentElement: s } = qe(), r = T(() => e.formatter.custom(Fe(t.day), {
      weekday: "long",
      month: "long",
      day: "numeric",
      year: "numeric"
    })), i = T(() => e.isDateDisabled(t.day)), u = T(() => {
      var $;
      return ($ = e.isDateUnavailable) == null ? void 0 : $.call(e, t.day);
    }), d = T(() => e.isSelected(t.day)), c = T(() => e.isSelectionStart(t.day)), f = T(() => e.isSelectionEnd(t.day)), p = T(() => e.highlightedRange.value ? Ys(t.day, e.highlightedRange.value.start, e.highlightedRange.value.end) : !1), v = "[data-radix-vue-calendar-cell-trigger]:not([data-disabled]):not([data-outside-month]):not([data-outside-visible-months])", y = T(() => Xo(t.day, Dn())), m = T(() => !wa(t.day, t.month)), S = T(
      () => e.isOutsideVisibleView(t.day)
    ), P = T(() => Oe(t.day, e.placeholder.value));
    function D($) {
      var R;
      if (!e.readonly.value && !(e.isDateDisabled($) || (R = e.isDateUnavailable) != null && R.call(e, $))) {
        if (e.lastPressedDateValue.value = $.copy(), e.startValue.value && e.highlightedRange.value === null) {
          if (Oe($, e.startValue.value) && !e.preventDeselect.value && !e.endValue.value) {
            e.startValue.value = void 0, e.onPlaceholderChange($);
            return;
          } else if (!e.endValue.value) {
            e.lastPressedDateValue.value && Oe(e.lastPressedDateValue.value, $) && (e.startValue.value = $.copy());
            return;
          }
        }
        if (e.startValue.value && Oe(e.startValue.value, $) && !e.preventDeselect.value && !e.endValue.value) {
          e.startValue.value = void 0, e.onPlaceholderChange($);
          return;
        }
        e.startValue.value ? e.endValue.value ? e.endValue.value && e.startValue.value && (e.endValue.value = void 0, e.startValue.value = $.copy()) : e.endValue.value = $.copy() : e.startValue.value = $.copy();
      }
    }
    function g($) {
      var M;
      const R = Xt($.target.getAttribute("data-value"), e.placeholder.value);
      e.isDateDisabled(R) || (M = e.isDateUnavailable) != null && M.call(e, R) || D(R);
    }
    function x($) {
      var M;
      const R = Xt($.target.getAttribute("data-value"), e.placeholder.value);
      e.isDateDisabled(R) || (M = e.isDateUnavailable) != null && M.call(e, R) || (e.focusedValue.value = R.copy());
    }
    function E($) {
      const R = $.target;
      $.preventDefault(), $.stopPropagation();
      const M = e.parentElement.value, V = M ? Array.from(M.querySelectorAll(v)) : [];
      let L = V.indexOf(s.value);
      const j = 7, J = e.dir.value === "rtl" ? -1 : 1;
      switch ($.code) {
        case n.ARROW_RIGHT:
          L += J;
          break;
        case n.ARROW_LEFT:
          L -= J;
          break;
        case n.ARROW_UP:
          L -= j;
          break;
        case n.ARROW_DOWN:
          L += j;
          break;
        case n.ENTER:
        case n.SPACE_CODE:
          D(Xt(R.getAttribute("data-value"), e.placeholder.value));
          return;
        default:
          return;
      }
      if (L >= 0 && L < V.length) {
        V[L].focus();
        return;
      }
      if (L < 0) {
        if (e.isPrevButtonDisabled.value)
          return;
        e.prevPage(), re(() => {
          const W = M ? Array.from(M.querySelectorAll(v)) : [];
          W[W.length - Math.abs(L)].focus();
        });
        return;
      }
      if (L >= V.length) {
        if (e.isNextButtonDisabled.value)
          return;
        e.nextPage(), re(() => {
          (M ? Array.from(M.querySelectorAll(v)) : [])[L - V.length].focus();
        });
      }
    }
    return ($, R) => (b(), _(o(A), k({
      ref_key: "primitiveElement",
      ref: l
    }, t, {
      role: "button",
      "aria-label": r.value,
      "data-radix-vue-calendar-cell-trigger": "",
      "aria-selected": d.value ? !0 : void 0,
      "aria-disabled": m.value || i.value || u.value ? !0 : void 0,
      "data-highlighted": p.value ? "" : void 0,
      "data-selection-start": c.value ? !0 : void 0,
      "data-selection-end": f.value ? !0 : void 0,
      "data-selected": d.value ? !0 : void 0,
      "data-outside-visible-view": S.value ? "" : void 0,
      "data-value": $.day.toString(),
      "data-disabled": i.value || m.value ? "" : void 0,
      "data-unavailable": u.value ? "" : void 0,
      "data-today": y.value ? "" : void 0,
      "data-outside-month": m.value ? "" : void 0,
      "data-focused": P.value ? "" : void 0,
      tabindex: P.value ? 0 : m.value || i.value ? void 0 : -1,
      onClick: g,
      onFocusin: x,
      onMouseenter: x,
      onKeydown: he(E, ["up", "down", "left", "right", "enter", "space"])
    }), {
      default: h(() => [
        C($.$slots, "default", {}, () => [
          ye(ke($.day.day.toLocaleString(o(e).locale.value)), 1)
        ])
      ]),
      _: 3
    }, 16, ["aria-label", "aria-selected", "aria-disabled", "data-highlighted", "data-selection-start", "data-selection-end", "data-selected", "data-outside-visible-view", "data-value", "data-disabled", "data-unavailable", "data-today", "data-outside-month", "data-focused", "tabindex"]));
  }
}), [ze, Dc] = Q("ScrollAreaRoot"), bh = /* @__PURE__ */ w({
  __name: "ScrollAreaRoot",
  props: {
    type: { default: "hover" },
    dir: {},
    scrollHideDelay: { default: 600 },
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a, { forwardRef: e, currentElement: n } = I(), l = B(0), s = B(0), r = B(), i = B(), u = B(), d = B(), c = B(!1), f = B(!1), { type: p, dir: v, scrollHideDelay: y } = le(t), m = be(v);
    return Dc({
      type: p,
      dir: m,
      scrollHideDelay: y,
      scrollArea: n,
      viewport: r,
      onViewportChange: (S) => {
        r.value = S || void 0;
      },
      content: i,
      onContentChange: (S) => {
        i.value = S;
      },
      scrollbarX: u,
      scrollbarXEnabled: c,
      scrollbarY: d,
      scrollbarYEnabled: f,
      onScrollbarXChange: (S) => {
        u.value = S || void 0;
      },
      onScrollbarYChange: (S) => {
        d.value = S || void 0;
      },
      onScrollbarXEnabledChange: (S) => {
        c.value = S;
      },
      onScrollbarYEnabledChange: (S) => {
        f.value = S;
      },
      onCornerWidthChange: (S) => {
        l.value = S;
      },
      onCornerHeightChange: (S) => {
        s.value = S;
      }
    }), (S, P) => (b(), _(o(A), {
      ref: o(e),
      "as-child": t.asChild,
      as: S.as,
      dir: o(m),
      style: Ce({
        position: "relative",
        // Pass corner sizes as CSS vars to reduce re-renders of context consumers
        "--radix-scroll-area-corner-width": `${l.value}px`,
        "--radix-scroll-area-corner-height": `${s.value}px`
      })
    }, {
      default: h(() => [
        C(S.$slots, "default")
      ]),
      _: 3
    }, 8, ["as-child", "as", "dir", "style"]));
  }
}), Ch = /* @__PURE__ */ w({
  inheritAttrs: !1,
  __name: "ScrollAreaViewport",
  props: {
    nonce: {},
    asChild: { type: Boolean },
    as: {}
  },
  setup(a, { expose: t }) {
    const e = a, n = ze(), l = B();
    se(() => {
      n.onViewportChange(l.value), n.onContentChange(r.value);
    }), t({
      viewportElement: l
    });
    const { forwardRef: s, currentElement: r } = I();
    return (i, u) => (b(), fe(Pe, null, [
      je("div", k({
        ref_key: "viewportElement",
        ref: l,
        "data-radix-scroll-area-viewport": "",
        style: {
          /**
           * We don't support `visible` because the intention is to have at least one scrollbar
           * if this component is used and `visible` will behave like `auto` in that case
           * https://developer.mozilla.org/en-US/docs/Web/CSS/overflowed#description
           *
           * We don't handle `auto` because the intention is for the native implementation
           * to be hidden if using this component. We just want to ensure the node is scrollable
           * so could have used either `scroll` or `auto` here. We picked `scroll` to prevent
           * the browser from having to work out whether to render native scrollbars or not,
           * we tell it to with the intention of hiding them in CSS.
           */
          overflowX: o(n).scrollbarXEnabled.value ? "scroll" : "hidden",
          overflowY: o(n).scrollbarYEnabled.value ? "scroll" : "hidden"
        }
      }, i.$attrs, { tabindex: 0 }), [
        G(o(A), {
          ref: o(s),
          style: { minWidth: "100%", display: "table" },
          "as-child": e.asChild,
          as: i.as
        }, {
          default: h(() => [
            C(i.$slots, "default")
          ]),
          _: 3
        }, 8, ["as-child", "as"])
      ], 16),
      G(o(A), {
        as: "style",
        nonce: i.nonce
      }, {
        default: h(() => [
          ye(" /* Hide scrollbars cross-browser and enable momentum scroll for touch devices */ [data-radix-scroll-area-viewport] { scrollbar-width:none; -ms-overflow-style:none; -webkit-overflow-scrolling:touch; } [data-radix-scroll-area-viewport]::-webkit-scrollbar { display:none; } ")
        ]),
        _: 1
      }, 8, ["nonce"])
    ], 64));
  }
});
function $c(a, [t, e]) {
  return Math.min(e, Math.max(t, a));
}
function Xl(a, t) {
  return (e) => {
    if (a[0] === a[1] || t[0] === t[1])
      return t[0];
    const n = (t[1] - t[0]) / (a[1] - a[0]);
    return t[0] + n * (e - a[0]);
  };
}
function Ka(a) {
  const t = Zl(a.viewport, a.content), e = a.scrollbar.paddingStart + a.scrollbar.paddingEnd, n = (a.scrollbar.size - e) * t;
  return Math.max(n, 18);
}
function Zl(a, t) {
  const e = a / t;
  return Number.isNaN(e) ? 0 : e;
}
function Bc(a, t = () => {
}) {
  let e = { left: a.scrollLeft, top: a.scrollTop }, n = 0;
  return function l() {
    const s = { left: a.scrollLeft, top: a.scrollTop }, r = e.left !== s.left, i = e.top !== s.top;
    (r || i) && t(), e = s, n = window.requestAnimationFrame(l);
  }(), () => window.cancelAnimationFrame(n);
}
function Io(a, t, e = "ltr") {
  const n = Ka(t), l = t.scrollbar.paddingStart + t.scrollbar.paddingEnd, s = t.scrollbar.size - l, r = t.content - t.viewport, i = s - n, u = e === "ltr" ? [0, r] : [r * -1, 0], d = $c(
    a,
    u
  );
  return Xl([0, r], [0, i])(d);
}
function va(a) {
  return a ? Number.parseInt(a, 10) : 0;
}
function Tc(a, t, e, n = "ltr") {
  const l = Ka(e), s = l / 2, r = t || s, i = l - r, u = e.scrollbar.paddingStart + r, d = e.scrollbar.size - e.scrollbar.paddingEnd - i, c = e.content - e.viewport, f = n === "ltr" ? [0, c] : [c * -1, 0];
  return Xl(
    [u, d],
    f
  )(a);
}
function Ro(a, t) {
  return a > 0 && a < t;
}
const Jl = /* @__PURE__ */ w({
  __name: "ScrollAreaScrollbarImpl",
  props: {
    isHorizontal: { type: Boolean }
  },
  emits: ["onDragScroll", "onWheelScroll", "onThumbPointerDown"],
  setup(a, { emit: t }) {
    const e = a, n = t, l = ze(), s = Ha(), r = Wa(), { forwardRef: i, currentElement: u } = I(), d = B(""), c = B();
    function f(P) {
      var D, g;
      if (c.value) {
        const x = P.clientX - ((D = c.value) == null ? void 0 : D.left), E = P.clientY - ((g = c.value) == null ? void 0 : g.top);
        n("onDragScroll", { x, y: E });
      }
    }
    function p(P) {
      P.button === 0 && (P.target.setPointerCapture(P.pointerId), c.value = u.value.getBoundingClientRect(), d.value = document.body.style.webkitUserSelect, document.body.style.webkitUserSelect = "none", l.viewport && (l.viewport.value.style.scrollBehavior = "auto"), f(P));
    }
    function v(P) {
      f(P);
    }
    function y(P) {
      const D = P.target;
      D.hasPointerCapture(P.pointerId) && D.releasePointerCapture(P.pointerId), document.body.style.webkitUserSelect = d.value, l.viewport && (l.viewport.value.style.scrollBehavior = ""), c.value = void 0;
    }
    function m(P) {
      var E;
      const D = P.target, g = (E = u.value) == null ? void 0 : E.contains(D), x = s.sizes.value.content - s.sizes.value.viewport;
      g && s.handleWheelScroll(P, x);
    }
    se(() => {
      document.addEventListener("wheel", m, { passive: !1 });
    }), Te(() => {
      document.removeEventListener("wheel", m);
    });
    function S() {
      var P, D, g, x, E;
      u.value && (e.isHorizontal ? s.handleSizeChange({
        content: ((P = l.viewport.value) == null ? void 0 : P.scrollWidth) ?? 0,
        viewport: ((D = l.viewport.value) == null ? void 0 : D.offsetWidth) ?? 0,
        scrollbar: {
          size: u.value.clientWidth ?? 0,
          paddingStart: va(getComputedStyle(u.value).paddingLeft),
          paddingEnd: va(getComputedStyle(u.value).paddingRight)
        }
      }) : s.handleSizeChange({
        content: ((g = l.viewport.value) == null ? void 0 : g.scrollHeight) ?? 0,
        viewport: ((x = l.viewport.value) == null ? void 0 : x.offsetHeight) ?? 0,
        scrollbar: {
          size: ((E = u.value) == null ? void 0 : E.clientHeight) ?? 0,
          paddingStart: va(getComputedStyle(u.value).paddingLeft),
          paddingEnd: va(getComputedStyle(u.value).paddingRight)
        }
      }));
    }
    return Ge(u, S), Ge(l.content, S), (P, D) => (b(), _(o(A), {
      ref: o(i),
      style: { position: "absolute" },
      "data-scrollbarimpl": "",
      as: o(r).as.value,
      "as-child": o(r).asChild.value,
      onPointerdown: p,
      onPointermove: v,
      onPointerup: y
    }, {
      default: h(() => [
        C(P.$slots, "default")
      ]),
      _: 3
    }, 8, ["as", "as-child"]));
  }
}), Ic = /* @__PURE__ */ w({
  __name: "ScrollAreaScrollbarX",
  setup(a) {
    const t = ze(), e = Ha(), { forwardRef: n, currentElement: l } = I();
    se(() => {
      l.value && t.onScrollbarXChange(l.value);
    });
    const s = T(() => e.sizes.value);
    return (r, i) => (b(), _(Jl, {
      ref: o(n),
      "is-horizontal": !0,
      "data-orientation": "horizontal",
      style: Ce({
        bottom: 0,
        left: o(t).dir.value === "rtl" ? "var(--radix-scroll-area-corner-width)" : 0,
        right: o(t).dir.value === "ltr" ? "var(--radix-scroll-area-corner-width)" : 0,
        "--radix-scroll-area-thumb-width": s.value ? `${o(Ka)(s.value)}px` : void 0
      }),
      onOnDragScroll: i[0] || (i[0] = (u) => o(e).onDragScroll(u.x))
    }, {
      default: h(() => [
        C(r.$slots, "default")
      ]),
      _: 3
    }, 8, ["style"]));
  }
}), Rc = /* @__PURE__ */ w({
  __name: "ScrollAreaScrollbarY",
  setup(a) {
    const t = ze(), e = Ha(), { forwardRef: n, currentElement: l } = I();
    se(() => {
      l.value && t.onScrollbarYChange(l.value);
    });
    const s = T(() => e.sizes.value);
    return (r, i) => (b(), _(Jl, {
      ref: o(n),
      "is-horizontal": !1,
      "data-orientation": "vertical",
      style: Ce({
        top: 0,
        right: o(t).dir.value === "ltr" ? 0 : void 0,
        left: o(t).dir.value === "rtl" ? 0 : void 0,
        bottom: "var(--radix-scroll-area-corner-height)",
        "--radix-scroll-area-thumb-height": s.value ? `${o(Ka)(s.value)}px` : void 0
      }),
      onOnDragScroll: i[0] || (i[0] = (u) => o(e).onDragScroll(u.y))
    }, {
      default: h(() => [
        C(r.$slots, "default")
      ]),
      _: 3
    }, 8, ["style"]));
  }
}), [Ha, Ac] = Q("ScrollAreaScrollbarVisible"), po = /* @__PURE__ */ w({
  __name: "ScrollAreaScrollbarVisible",
  setup(a) {
    const t = ze(), e = Wa(), { forwardRef: n } = I(), l = B({
      content: 0,
      viewport: 0,
      scrollbar: { size: 0, paddingStart: 0, paddingEnd: 0 }
    }), s = T(() => {
      const P = Zl(l.value.viewport, l.value.content);
      return P > 0 && P < 1;
    }), r = B(), i = B(0);
    function u(P, D) {
      if (v.value) {
        const g = t.viewport.value.scrollLeft + P.deltaY;
        t.viewport.value.scrollLeft = g, Ro(g, D) && P.preventDefault();
      } else {
        const g = t.viewport.value.scrollTop + P.deltaY;
        t.viewport.value.scrollTop = g, Ro(g, D) && P.preventDefault();
      }
    }
    function d(P, D) {
      v.value ? i.value = D.x : i.value = D.y;
    }
    function c(P) {
      i.value = 0;
    }
    function f(P) {
      l.value = P;
    }
    function p(P, D) {
      return Tc(
        P,
        i.value,
        l.value,
        D
      );
    }
    const v = T(
      () => e.isHorizontal.value
    );
    function y(P) {
      v.value ? t.viewport.value.scrollLeft = p(
        P,
        t.dir.value
      ) : t.viewport.value.scrollTop = p(P);
    }
    function m() {
      if (v.value) {
        if (t.viewport.value && r.value) {
          const P = t.viewport.value.scrollLeft, D = Io(
            P,
            l.value,
            t.dir.value
          );
          r.value.style.transform = `translate3d(${D}px, 0, 0)`;
        }
      } else if (t.viewport.value && r.value) {
        const P = t.viewport.value.scrollTop, D = Io(P, l.value);
        r.value.style.transform = `translate3d(0, ${D}px, 0)`;
      }
    }
    function S(P) {
      r.value = P;
    }
    return Ac({
      sizes: l,
      hasThumb: s,
      handleWheelScroll: u,
      handleThumbDown: d,
      handleThumbUp: c,
      handleSizeChange: f,
      onThumbPositionChange: m,
      onThumbChange: S,
      onDragScroll: y
    }), (P, D) => v.value ? (b(), _(Ic, k({ key: 0 }, P.$attrs, { ref: o(n) }), {
      default: h(() => [
        C(P.$slots, "default")
      ]),
      _: 3
    }, 16)) : (b(), _(Rc, k({ key: 1 }, P.$attrs, { ref: o(n) }), {
      default: h(() => [
        C(P.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), Ql = /* @__PURE__ */ w({
  __name: "ScrollAreaScrollbarAuto",
  props: {
    forceMount: { type: Boolean }
  },
  setup(a) {
    const t = ze(), e = Wa(), { forwardRef: n } = I(), l = B(!1), s = Bn(() => {
      if (t.viewport.value) {
        const r = t.viewport.value.offsetWidth < t.viewport.value.scrollWidth, i = t.viewport.value.offsetHeight < t.viewport.value.scrollHeight;
        l.value = e.isHorizontal.value ? r : i;
      }
    }, 10);
    return se(() => s()), Ge(t.viewport, s), Ge(t.content, s), (r, i) => (b(), _(o(Ee), {
      present: r.forceMount || l.value
    }, {
      default: h(() => [
        G(po, k(r.$attrs, {
          ref: o(n),
          "data-state": l.value ? "visible" : "hidden"
        }), {
          default: h(() => [
            C(r.$slots, "default")
          ]),
          _: 3
        }, 16, ["data-state"])
      ]),
      _: 3
    }, 8, ["present"]));
  }
}), Oc = /* @__PURE__ */ w({
  inheritAttrs: !1,
  __name: "ScrollAreaScrollbarHover",
  props: {
    forceMount: { type: Boolean }
  },
  setup(a) {
    const t = ze(), { forwardRef: e } = I();
    let n;
    const l = B(!1);
    function s() {
      window.clearTimeout(n), l.value = !0;
    }
    function r() {
      n = window.setTimeout(() => {
        l.value = !1;
      }, t.scrollHideDelay.value);
    }
    return se(() => {
      const i = t.scrollArea.value;
      i && (i.addEventListener("pointerenter", s), i.addEventListener("pointerleave", r));
    }), Te(() => {
      const i = t.scrollArea.value;
      i && (window.clearTimeout(n), i.removeEventListener("pointerenter", s), i.removeEventListener("pointerleave", r));
    }), (i, u) => (b(), _(o(Ee), {
      present: i.forceMount || l.value
    }, {
      default: h(() => [
        G(Ql, k(i.$attrs, {
          ref: o(e),
          "data-state": l.value ? "visible" : "hidden"
        }), {
          default: h(() => [
            C(i.$slots, "default")
          ]),
          _: 3
        }, 16, ["data-state"])
      ]),
      _: 3
    }, 8, ["present"]));
  }
}), kc = /* @__PURE__ */ w({
  __name: "ScrollAreaScrollbarScroll",
  props: {
    forceMount: { type: Boolean }
  },
  setup(a) {
    const t = ze(), e = Wa(), { forwardRef: n } = I(), { state: l, dispatch: s } = dl("hidden", {
      hidden: {
        SCROLL: "scrolling"
      },
      scrolling: {
        SCROLL_END: "idle",
        POINTER_ENTER: "interacting"
      },
      interacting: {
        SCROLL: "interacting",
        POINTER_LEAVE: "idle"
      },
      idle: {
        HIDE: "hidden",
        SCROLL: "scrolling",
        POINTER_ENTER: "interacting"
      }
    });
    ve((i) => {
      if (l.value === "idle") {
        const u = window.setTimeout(
          () => s("HIDE"),
          t.scrollHideDelay.value
        );
        i(() => {
          window.clearTimeout(u);
        });
      }
    });
    const r = Bn(() => s("SCROLL_END"), 100);
    return ve((i) => {
      const u = t.viewport.value, d = e.isHorizontal.value ? "scrollLeft" : "scrollTop";
      if (u) {
        let c = u[d];
        const f = () => {
          const p = u[d];
          c !== p && (s("SCROLL"), r()), c = p;
        };
        u.addEventListener("scroll", f), i(() => {
          u.removeEventListener("scroll", f);
        });
      }
    }), (i, u) => (b(), _(o(Ee), {
      present: i.forceMount || o(l) !== "hidden"
    }, {
      default: h(() => [
        G(po, k(i.$attrs, { ref: o(n) }), {
          default: h(() => [
            C(i.$slots, "default")
          ]),
          _: 3
        }, 16)
      ]),
      _: 3
    }, 8, ["present"]));
  }
}), [Wa, Mc] = Q("ScrollAreaScrollbar"), wh = /* @__PURE__ */ w({
  inheritAttrs: !1,
  __name: "ScrollAreaScrollbar",
  props: {
    orientation: { default: "vertical" },
    forceMount: { type: Boolean },
    asChild: { type: Boolean },
    as: { default: "div" }
  },
  setup(a) {
    const t = a, { forwardRef: e } = I(), n = ze(), l = T(() => t.orientation === "horizontal");
    ee(
      l,
      () => {
        l.value ? n.onScrollbarXEnabledChange(!0) : n.onScrollbarYEnabledChange(!0);
      },
      { immediate: !0 }
    ), Te(() => {
      n.onScrollbarXEnabledChange(!1), n.onScrollbarYEnabledChange(!1);
    });
    const { orientation: s, forceMount: r, asChild: i, as: u } = le(t);
    return Mc({
      orientation: s,
      forceMount: r,
      isHorizontal: l,
      as: u,
      asChild: i
    }), (d, c) => o(n).type.value === "hover" ? (b(), _(Oc, k({ key: 0 }, d.$attrs, {
      ref: o(e),
      "force-mount": o(r)
    }), {
      default: h(() => [
        C(d.$slots, "default")
      ]),
      _: 3
    }, 16, ["force-mount"])) : o(n).type.value === "scroll" ? (b(), _(kc, k({ key: 1 }, d.$attrs, {
      ref: o(e),
      "force-mount": o(r)
    }), {
      default: h(() => [
        C(d.$slots, "default")
      ]),
      _: 3
    }, 16, ["force-mount"])) : o(n).type.value === "auto" ? (b(), _(Ql, k({ key: 2 }, d.$attrs, {
      ref: o(e),
      "force-mount": o(r)
    }), {
      default: h(() => [
        C(d.$slots, "default")
      ]),
      _: 3
    }, 16, ["force-mount"])) : o(n).type.value === "always" ? (b(), _(po, k({ key: 3 }, d.$attrs, {
      ref: o(e),
      "data-state": "visible"
    }), {
      default: h(() => [
        C(d.$slots, "default")
      ]),
      _: 3
    }, 16)) : ue("", !0);
  }
}), _h = /* @__PURE__ */ w({
  __name: "ScrollAreaThumb",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a, e = ze(), n = Ha();
    function l(p) {
      const y = p.target.getBoundingClientRect(), m = p.clientX - y.left, S = p.clientY - y.top;
      n.handleThumbDown(p, { x: m, y: S });
    }
    function s(p) {
      n.handleThumbUp(p);
    }
    const { forwardRef: r, currentElement: i } = I(), u = B(), d = T(() => e.viewport.value);
    function c() {
      if (!u.value) {
        const p = Bc(
          d.value,
          n.onThumbPositionChange
        );
        u.value = p, n.onThumbPositionChange();
      }
    }
    const f = T(() => n.sizes.value);
    return Br(f, () => {
      n.onThumbChange(i.value), d.value && (n.onThumbPositionChange(), d.value.addEventListener("scroll", c));
    }), Te(() => {
      var p;
      d.value.removeEventListener("scroll", c), (p = e.viewport.value) == null || p.removeEventListener("scroll", c);
    }), (p, v) => (b(), _(o(A), {
      ref: o(r),
      "data-state": o(n).hasThumb ? "visible" : "hidden",
      style: Ce({
        width: "var(--radix-scroll-area-thumb-width)",
        height: "var(--radix-scroll-area-thumb-height)"
      }),
      "as-child": t.asChild,
      as: p.as,
      onPointerdown: l,
      onPointerup: s
    }, {
      default: h(() => [
        C(p.$slots, "default")
      ]),
      _: 3
    }, 8, ["data-state", "style", "as-child", "as"]));
  }
}), Vc = /* @__PURE__ */ w({
  __name: "ScrollAreaCornerImpl",
  setup(a) {
    const t = ze(), e = B(0), n = B(0), l = T(() => !!e.value && !!n.value);
    function s() {
      var u;
      const i = ((u = t.scrollbarX.value) == null ? void 0 : u.offsetHeight) || 0;
      t.onCornerHeightChange(i), n.value = i;
    }
    function r() {
      var u;
      const i = ((u = t.scrollbarY.value) == null ? void 0 : u.offsetWidth) || 0;
      t.onCornerWidthChange(i), e.value = i;
    }
    return Ge(t.scrollbarX.value, s), Ge(t.scrollbarY.value, r), ee(() => t.scrollbarX.value, s), ee(() => t.scrollbarY.value, r), (i, u) => {
      var d;
      return l.value ? (b(), _(o(A), k({
        key: 0,
        style: {
          width: `${e.value}px`,
          height: `${n.value}px`,
          position: "absolute",
          right: o(t).dir.value === "ltr" ? 0 : void 0,
          left: o(t).dir.value === "rtl" ? 0 : void 0,
          bottom: 0
        }
      }, (d = i.$parent) == null ? void 0 : d.$props), {
        default: h(() => [
          C(i.$slots, "default")
        ]),
        _: 3
      }, 16, ["style"])) : ue("", !0);
    };
  }
}), xh = /* @__PURE__ */ w({
  __name: "ScrollAreaCorner",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a, { forwardRef: e } = I(), n = ze(), l = T(
      () => !!n.scrollbarX.value && !!n.scrollbarY.value
    ), s = T(
      () => n.type.value !== "scroll" && l.value
    );
    return (r, i) => s.value ? (b(), _(Vc, k({ key: 0 }, t, { ref: o(e) }), {
      default: h(() => [
        C(r.$slots, "default")
      ]),
      _: 3
    }, 16)) : ue("", !0);
  }
}), Fc = ["default-value"], Lc = /* @__PURE__ */ w({
  __name: "BubbleSelect",
  props: {
    autocomplete: {},
    autofocus: { type: Boolean },
    disabled: { type: Boolean },
    form: {},
    multiple: { type: Boolean },
    name: {},
    required: { type: Boolean },
    size: {},
    value: {}
  },
  setup(a) {
    const t = a, { value: e } = le(t);
    Vr(e);
    const n = B();
    return (l, s) => (b(), _(o(Nt), { "as-child": "" }, {
      default: h(() => [
        Ea(je("select", k({
          ref_key: "selectElement",
          ref: n
        }, t, {
          "onUpdate:modelValue": s[0] || (s[0] = (r) => wt(e) ? e.value = r : null),
          "default-value": o(e)
        }), [
          C(l.$slots, "default")
        ], 16, Fc), [
          [Hs, o(e)]
        ])
      ]),
      _: 3
    }));
  }
}), Nc = {
  key: 0,
  value: ""
}, [ht, es] = Q("SelectRoot"), [zc, Kc] = Q("SelectRoot"), Sh = /* @__PURE__ */ w({
  __name: "SelectRoot",
  props: {
    open: { type: Boolean, default: void 0 },
    defaultOpen: { type: Boolean },
    defaultValue: { default: "" },
    modelValue: { default: void 0 },
    dir: {},
    name: {},
    autocomplete: {},
    disabled: { type: Boolean },
    required: { type: Boolean }
  },
  emits: ["update:modelValue", "update:open"],
  setup(a, { emit: t }) {
    const e = a, n = t, l = ne(e, "modelValue", n, {
      defaultValue: e.defaultValue,
      passive: e.modelValue === void 0
    }), s = ne(e, "open", n, {
      defaultValue: e.defaultOpen,
      passive: e.open === void 0
    }), r = B(), i = B(), u = B({
      x: 0,
      y: 0
    }), d = B(!1), { required: c, disabled: f, dir: p } = le(e), v = be(p);
    es({
      triggerElement: r,
      onTriggerChange: (P) => {
        r.value = P;
      },
      valueElement: i,
      onValueElementChange: (P) => {
        i.value = P;
      },
      valueElementHasChildren: d,
      onValueElementHasChildrenChange: (P) => {
        d.value = P;
      },
      contentId: "",
      modelValue: l,
      onValueChange: (P) => {
        l.value = P;
      },
      open: s,
      required: c,
      onOpenChange: (P) => {
        s.value = P;
      },
      dir: v,
      triggerPointerDownPosRef: u,
      disabled: f
    });
    const y = ct(r), m = B(/* @__PURE__ */ new Set()), S = T(() => Array.from(m.value).map((P) => {
      var D;
      return (D = P.props) == null ? void 0 : D.value;
    }).join(";"));
    return Kc({
      onNativeOptionAdd: (P) => {
        m.value.add(P);
      },
      onNativeOptionRemove: (P) => {
        m.value.delete(P);
      }
    }), (P, D) => (b(), _(o(xt), null, {
      default: h(() => [
        C(P.$slots, "default"),
        o(y) ? (b(), _(Lc, k({ key: S.value }, P.$attrs, {
          "aria-hidden": "",
          tabindex: "-1",
          required: o(c),
          name: P.name,
          autocomplete: P.autocomplete,
          disabled: o(f),
          value: o(l),
          onChange: D[0] || (D[0] = (g) => l.value = g.target.value)
        }), {
          default: h(() => [
            o(l) === void 0 ? (b(), fe("option", Nc)) : ue("", !0),
            (b(!0), fe(Pe, null, Da(Array.from(m.value), (g) => (b(), _(Ue(g), k(g.props, {
              key: g.key ?? ""
            }), null, 16))), 128))
          ]),
          _: 1
        }, 16, ["required", "name", "autocomplete", "disabled", "value"])) : ue("", !0)
      ]),
      _: 3
    }));
  }
}), Hc = [" ", "Enter", "ArrowUp", "ArrowDown"], Wc = [" ", "Enter"], Ye = 10;
function ts(a) {
  return a === "" || a === void 0;
}
const Ph = /* @__PURE__ */ w({
  __name: "SelectTrigger",
  props: {
    disabled: { type: Boolean },
    asChild: { type: Boolean },
    as: { default: "button" }
  },
  setup(a) {
    const t = a, e = ht(), n = T(() => {
      var v;
      return ((v = e.disabled) == null ? void 0 : v.value) || t.disabled;
    }), { forwardRef: l, currentElement: s } = I();
    e.contentId || (e.contentId = me(void 0, "radix-vue-select-content")), se(() => {
      e.triggerElement = s;
    });
    const { injectCollection: r } = Re(), i = r(), { search: u, handleTypeaheadSearch: d, resetTypeahead: c } = Ia(i);
    function f() {
      n.value || (e.onOpenChange(!0), c());
    }
    function p(v) {
      f(), e.triggerPointerDownPosRef.value = {
        x: Math.round(v.pageX),
        y: Math.round(v.pageY)
      };
    }
    return (v, y) => (b(), _(o(St), { "as-child": "" }, {
      default: h(() => {
        var m, S, P, D;
        return [
          G(o(A), {
            ref: o(l),
            role: "combobox",
            type: v.as === "button" ? "button" : void 0,
            "aria-controls": o(e).contentId,
            "aria-expanded": o(e).open.value || !1,
            "aria-required": (m = o(e).required) == null ? void 0 : m.value,
            "aria-autocomplete": "none",
            disabled: n.value,
            dir: (S = o(e)) == null ? void 0 : S.dir.value,
            "data-state": (P = o(e)) != null && P.open.value ? "open" : "closed",
            "data-disabled": n.value ? "" : void 0,
            "data-placeholder": o(ts)((D = o(e).modelValue) == null ? void 0 : D.value) ? "" : void 0,
            "as-child": v.asChild,
            as: v.as,
            onClick: y[0] || (y[0] = (g) => {
              var x;
              (x = g == null ? void 0 : g.currentTarget) == null || x.focus();
            }),
            onPointerdown: y[1] || (y[1] = (g) => {
              if (g.pointerType === "touch")
                return g.preventDefault();
              const x = g.target;
              x.hasPointerCapture(g.pointerId) && x.releasePointerCapture(g.pointerId), g.button === 0 && g.ctrlKey === !1 && (p(g), g.preventDefault());
            }),
            onPointerup: y[2] || (y[2] = ge(
              (g) => {
                g.pointerType === "touch" && p(g);
              },
              ["prevent"]
            )),
            onKeydown: y[3] || (y[3] = (g) => {
              const x = o(u) !== "";
              !(g.ctrlKey || g.altKey || g.metaKey) && g.key.length === 1 && x && g.key === " " || (o(d)(g.key), o(Hc).includes(g.key) && (f(), g.preventDefault()));
            })
          }, {
            default: h(() => [
              C(v.$slots, "default")
            ]),
            _: 3
          }, 8, ["type", "aria-controls", "aria-expanded", "aria-required", "disabled", "dir", "data-state", "data-disabled", "data-placeholder", "as-child", "as"])
        ];
      }),
      _: 3
    }));
  }
}), Eh = /* @__PURE__ */ w({
  __name: "SelectPortal",
  props: {
    to: {},
    disabled: { type: Boolean },
    forceMount: { type: Boolean }
  },
  setup(a) {
    const t = a;
    return (e, n) => (b(), _(o(pt), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), [vo, jc] = Q("SelectItemAlignedPosition"), Uc = /* @__PURE__ */ w({
  inheritAttrs: !1,
  __name: "SelectItemAlignedPosition",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  emits: ["placed"],
  setup(a, { emit: t }) {
    const e = a, n = t, { injectCollection: l } = Re(), s = ht(), r = yt(), i = l(), u = B(!1), d = B(!0), c = B(), { forwardRef: f, currentElement: p } = I(), { viewport: v, selectedItem: y, selectedItemText: m, focusSelectedItem: S } = r;
    function P() {
      if (s.triggerElement.value && s.valueElement.value && c.value && p.value && (v != null && v.value) && (y != null && y.value) && (m != null && m.value)) {
        const x = s.triggerElement.value.getBoundingClientRect(), E = p.value.getBoundingClientRect(), $ = s.valueElement.value.getBoundingClientRect(), R = m.value.getBoundingClientRect();
        if (s.dir.value !== "rtl") {
          const ae = R.left - E.left, we = $.left - ae, De = x.left - we, $e = x.width + De, pe = Math.max($e, E.width), Me = window.innerWidth - Ye, Ae = So(we, Ye, Me - pe);
          c.value.style.minWidth = `${$e}px`, c.value.style.left = `${Ae}px`;
        } else {
          const ae = E.right - R.right, we = window.innerWidth - $.right - ae, De = window.innerWidth - x.right - we, $e = x.width + De, pe = Math.max($e, E.width), Me = window.innerWidth - Ye, Ae = So(
            we,
            Ye,
            Me - pe
          );
          c.value.style.minWidth = `${$e}px`, c.value.style.right = `${Ae}px`;
        }
        const M = i.value, V = window.innerHeight - Ye * 2, O = v.value.scrollHeight, L = window.getComputedStyle(p.value), j = Number.parseInt(
          L.borderTopWidth,
          10
        ), J = Number.parseInt(L.paddingTop, 10), W = Number.parseInt(
          L.borderBottomWidth,
          10
        ), X = Number.parseInt(
          L.paddingBottom,
          10
        ), N = j + J + O + X + W, q = Math.min(
          y.value.offsetHeight * 5,
          N
        ), F = window.getComputedStyle(v.value), Z = Number.parseInt(F.paddingTop, 10), U = Number.parseInt(
          F.paddingBottom,
          10
        ), Y = x.top + x.height / 2 - Ye, te = V - Y, de = y.value.offsetHeight / 2, H = y.value.offsetTop + de, oe = j + J + H, ce = N - oe;
        if (oe <= Y) {
          const ae = y.value === M[M.length - 1];
          c.value.style.bottom = "0px";
          const we = p.value.clientHeight - v.value.offsetTop - v.value.offsetHeight, De = Math.max(
            te,
            de + (ae ? U : 0) + we + W
          ), $e = oe + De;
          c.value.style.height = `${$e}px`;
        } else {
          const ae = y.value === M[0];
          c.value.style.top = "0px";
          const De = Math.max(
            Y,
            j + v.value.offsetTop + (ae ? Z : 0) + de
          ) + ce;
          c.value.style.height = `${De}px`, v.value.scrollTop = oe - Y + v.value.offsetTop;
        }
        c.value.style.margin = `${Ye}px 0`, c.value.style.minHeight = `${q}px`, c.value.style.maxHeight = `${V}px`, n("placed"), requestAnimationFrame(() => u.value = !0);
      }
    }
    const D = B("");
    se(async () => {
      await re(), P(), p.value && (D.value = window.getComputedStyle(p.value).zIndex);
    });
    function g(x) {
      x && d.value === !0 && (P(), S == null || S(), d.value = !1);
    }
    return jc({
      contentWrapper: c,
      shouldExpandOnScrollRef: u,
      onScrollButtonChange: g
    }), (x, E) => (b(), fe("div", {
      ref_key: "contentWrapperElement",
      ref: c,
      style: Ce({
        display: "flex",
        flexDirection: "column",
        position: "fixed",
        zIndex: D.value
      })
    }, [
      G(o(A), k({
        ref: o(f),
        style: {
          // When we get the height of the content, it includes borders. If we were to set
          // the height without having `boxSizing: 'border-box'` it would be too big.
          boxSizing: "border-box",
          // We need to ensure the content doesn't get taller than the wrapper
          maxHeight: "100%"
        }
      }, { ...x.$attrs, ...e }), {
        default: h(() => [
          C(x.$slots, "default")
        ]),
        _: 3
      }, 16, ["style"])
    ], 4));
  }
}), Gc = /* @__PURE__ */ w({
  __name: "SelectPopperPosition",
  props: {
    side: {},
    sideOffset: {},
    align: { default: "start" },
    alignOffset: {},
    avoidCollisions: { type: Boolean },
    collisionBoundary: {},
    collisionPadding: { default: Ye },
    arrowPadding: {},
    sticky: {},
    hideWhenDetached: { type: Boolean },
    updatePositionStrategy: {},
    prioritizePosition: { type: Boolean },
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const e = _t(a);
    return (n, l) => (b(), _(o(Ct), k(o(e), { style: {
      // Ensure border-box for floating-ui calculations
      boxSizing: "border-box",
      "--radix-select-content-transform-origin": "var(--radix-popper-transform-origin)",
      "--radix-select-content-available-width": "var(--radix-popper-available-width)",
      "--radix-select-content-available-height": "var(--radix-popper-available-height)",
      "--radix-select-trigger-width": "var(--radix-popper-anchor-width)",
      "--radix-select-trigger-height": "var(--radix-popper-anchor-height)"
    } }), {
      default: h(() => [
        C(n.$slots, "default")
      ]),
      _: 3
    }, 16, ["style"]));
  }
}), jt = {
  onViewportChange: () => {
  },
  itemTextRefCallback: () => {
  },
  itemRefCallback: () => {
  }
}, [yt, qc] = Q("SelectContent"), Yc = /* @__PURE__ */ w({
  __name: "SelectContentImpl",
  props: {
    position: { default: "item-aligned" },
    side: {},
    sideOffset: {},
    align: { default: "start" },
    alignOffset: {},
    avoidCollisions: { type: Boolean },
    collisionBoundary: {},
    collisionPadding: {},
    arrowPadding: {},
    sticky: {},
    hideWhenDetached: { type: Boolean },
    updatePositionStrategy: {},
    prioritizePosition: { type: Boolean },
    asChild: { type: Boolean },
    as: {}
  },
  emits: ["closeAutoFocus", "escapeKeyDown", "pointerDownOutside"],
  setup(a, { emit: t }) {
    const e = a, n = t, l = ht();
    On(), sa(!0);
    const { createCollection: s } = Re(), r = B();
    ra(r);
    const i = s(r), { search: u, handleTypeaheadSearch: d } = Ia(i), c = B(), f = B(), p = B(), v = B(!1), y = B(!1);
    function m() {
      f.value && r.value && mn([f.value, r.value]);
    }
    ee(v, () => {
      m();
    });
    const { onOpenChange: S, triggerPointerDownPosRef: P } = l;
    ve((E) => {
      if (!r.value)
        return;
      let $ = { x: 0, y: 0 };
      const R = (V) => {
        var O, L;
        $ = {
          x: Math.abs(
            Math.round(V.pageX) - (((O = P.value) == null ? void 0 : O.x) ?? 0)
          ),
          y: Math.abs(
            Math.round(V.pageY) - (((L = P.value) == null ? void 0 : L.y) ?? 0)
          )
        };
      }, M = (V) => {
        var O;
        V.pointerType !== "touch" && ($.x <= 10 && $.y <= 10 ? V.preventDefault() : (O = r.value) != null && O.contains(V.target) || S(!1), document.removeEventListener("pointermove", R), P.value = null);
      };
      P.value !== null && (document.addEventListener("pointermove", R), document.addEventListener("pointerup", M, {
        capture: !0,
        once: !0
      })), E(() => {
        document.removeEventListener("pointermove", R), document.removeEventListener("pointerup", M, {
          capture: !0
        });
      });
    });
    function D(E) {
      const $ = E.ctrlKey || E.altKey || E.metaKey;
      if (E.key === "Tab" && E.preventDefault(), !$ && E.key.length === 1 && d(E.key), ["ArrowUp", "ArrowDown", "Home", "End"].includes(E.key)) {
        let R = i.value;
        if (["ArrowUp", "End"].includes(E.key) && (R = R.slice().reverse()), ["ArrowUp", "ArrowDown"].includes(E.key)) {
          const M = E.target, V = R.indexOf(M);
          R = R.slice(V + 1);
        }
        setTimeout(() => mn(R)), E.preventDefault();
      }
    }
    const g = T(() => e.position === "popper" ? e : {}), x = _t(g.value);
    return qc({
      content: r,
      viewport: c,
      onViewportChange: (E) => {
        c.value = E;
      },
      itemRefCallback: (E, $, R) => {
        var O, L;
        const M = !y.value && !R;
        (((O = l.modelValue) == null ? void 0 : O.value) !== void 0 && ((L = l.modelValue) == null ? void 0 : L.value) === $ || M) && (f.value = E, M && (y.value = !0));
      },
      selectedItem: f,
      selectedItemText: p,
      onItemLeave: () => {
        var E;
        (E = r.value) == null || E.focus();
      },
      itemTextRefCallback: (E, $, R) => {
        var O, L;
        const M = !y.value && !R;
        (((O = l.modelValue) == null ? void 0 : O.value) !== void 0 && ((L = l.modelValue) == null ? void 0 : L.value) === $ || M) && (p.value = E);
      },
      focusSelectedItem: m,
      position: e.position,
      isPositioned: v,
      searchRef: u
    }), (E, $) => (b(), _(o(Aa), {
      "as-child": "",
      onMountAutoFocus: $[6] || ($[6] = ge(() => {
      }, ["prevent"])),
      onUnmountAutoFocus: $[7] || ($[7] = (R) => {
        var M;
        n("closeAutoFocus", R), !R.defaultPrevented && ((M = o(l).triggerElement.value) == null || M.focus({ preventScroll: !0 }), R.preventDefault());
      })
    }, {
      default: h(() => [
        G(o(vt), {
          "as-child": "",
          "disable-outside-pointer-events": "",
          onFocusOutside: $[2] || ($[2] = ge(() => {
          }, ["prevent"])),
          onDismiss: $[3] || ($[3] = (R) => o(l).onOpenChange(!1)),
          onEscapeKeyDown: $[4] || ($[4] = (R) => n("escapeKeyDown", R)),
          onPointerDownOutside: $[5] || ($[5] = (R) => n("pointerDownOutside", R))
        }, {
          default: h(() => [
            (b(), _(Ue(
              E.position === "popper" ? Gc : Uc
            ), k({ ...E.$attrs, ...o(x) }, {
              id: o(l).contentId,
              ref: (R) => {
                r.value = o(Be)(R);
              },
              role: "listbox",
              "data-state": o(l).open.value ? "open" : "closed",
              dir: o(l).dir.value,
              style: {
                // flex layout so we can place the scroll buttons properly
                display: "flex",
                flexDirection: "column",
                // reset the outline by default as the content MAY get focused
                outline: "none"
              },
              onContextmenu: $[0] || ($[0] = ge(() => {
              }, ["prevent"])),
              onPlaced: $[1] || ($[1] = (R) => v.value = !0),
              onKeydown: D
            }), {
              default: h(() => [
                C(E.$slots, "default")
              ]),
              _: 3
            }, 16, ["id", "data-state", "dir", "onKeydown"]))
          ]),
          _: 3
        })
      ]),
      _: 3
    }));
  }
}), Xc = /* @__PURE__ */ w({
  __name: "SelectProvider",
  props: {
    context: {}
  },
  setup(a) {
    return es(a.context), (e, n) => C(e.$slots, "default");
  }
}), Zc = { key: 1 }, Dh = /* @__PURE__ */ w({
  inheritAttrs: !1,
  __name: "SelectContent",
  props: {
    forceMount: { type: Boolean },
    position: {},
    side: {},
    sideOffset: {},
    align: {},
    alignOffset: {},
    avoidCollisions: { type: Boolean },
    collisionBoundary: {},
    collisionPadding: {},
    arrowPadding: {},
    sticky: {},
    hideWhenDetached: { type: Boolean },
    updatePositionStrategy: {},
    prioritizePosition: { type: Boolean },
    asChild: { type: Boolean },
    as: {}
  },
  emits: ["closeAutoFocus", "escapeKeyDown", "pointerDownOutside"],
  setup(a, { emit: t }) {
    const e = a, l = _e(e, t), s = ht(), r = B();
    se(() => {
      r.value = new DocumentFragment();
    });
    const i = B(), u = T(() => e.forceMount || s.open.value);
    return (d, c) => {
      var f;
      return u.value ? (b(), _(o(Ee), {
        key: 0,
        ref_key: "presenceRef",
        ref: i,
        present: !0
      }, {
        default: h(() => [
          G(Yc, z(K({ ...o(l), ...d.$attrs })), {
            default: h(() => [
              C(d.$slots, "default")
            ]),
            _: 3
          }, 16)
        ]),
        _: 3
      }, 512)) : !((f = i.value) != null && f.present) && r.value ? (b(), fe("div", Zc, [
        (b(), _(At, { to: r.value }, [
          G(Xc, { context: o(s) }, {
            default: h(() => [
              C(d.$slots, "default")
            ]),
            _: 3
          }, 8, ["context"])
        ], 8, ["to"]))
      ])) : ue("", !0);
    };
  }
}), $h = /* @__PURE__ */ w({
  __name: "SelectArrow",
  props: {
    width: { default: 10 },
    height: { default: 5 },
    asChild: { type: Boolean },
    as: { default: "svg" }
  },
  setup(a) {
    const t = a, e = ht(), n = yt();
    return (l, s) => o(e).open.value && o(n).position === "popper" ? (b(), _(o(Lt), z(k({ key: 0 }, t)), {
      default: h(() => [
        C(l.$slots, "default")
      ]),
      _: 3
    }, 16)) : ue("", !0);
  }
}), Bh = /* @__PURE__ */ w({
  __name: "SelectSeparator",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    return (e, n) => (b(), _(o(A), k({ "aria-hidden": "" }, t), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), [as, Jc] = Q("SelectItem"), Th = /* @__PURE__ */ w({
  __name: "SelectItem",
  props: {
    value: {},
    disabled: { type: Boolean },
    textValue: {},
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a, { disabled: e } = le(t), n = ht(), l = yt(jt), { forwardRef: s, currentElement: r } = I(), i = T(() => {
      var m;
      return ((m = n.modelValue) == null ? void 0 : m.value) === t.value;
    }), u = B(!1), d = B(t.textValue ?? ""), c = me(void 0, "radix-vue-select-item-text");
    async function f(m) {
      await re(), !(m != null && m.defaultPrevented) && (e.value || (n.onValueChange(t.value), n.onOpenChange(!1)));
    }
    async function p(m) {
      var S;
      await re(), !m.defaultPrevented && (e.value ? (S = l.onItemLeave) == null || S.call(l) : m.currentTarget.focus({ preventScroll: !0 }));
    }
    async function v(m) {
      var S;
      await re(), !m.defaultPrevented && m.currentTarget === document.activeElement && ((S = l.onItemLeave) == null || S.call(l));
    }
    async function y(m) {
      var P;
      await re(), !(m.defaultPrevented || ((P = l.searchRef) == null ? void 0 : P.value) !== "" && m.key === " ") && (Wc.includes(m.key) && f(), m.key === " " && m.preventDefault());
    }
    if (t.value === "")
      throw new Error(
        "A <SelectItem /> must have a value prop that is not an empty string. This is because the Select value can be set to an empty string to clear the selection and show the placeholder."
      );
    return se(() => {
      r.value && l.itemRefCallback(
        r.value,
        t.value,
        t.disabled
      );
    }), Jc({
      value: t.value,
      disabled: e,
      textId: c,
      isSelected: i,
      onItemTextChange: (m) => {
        d.value = ((d.value || (m == null ? void 0 : m.textContent)) ?? "").trim();
      }
    }), (m, S) => (b(), _(o(A), {
      ref: o(s),
      role: "option",
      "data-radix-vue-collection-item": "",
      "aria-labelledby": o(c),
      "data-highlighted": u.value ? "" : void 0,
      "aria-selected": i.value && u.value,
      "data-state": i.value ? "checked" : "unchecked",
      "aria-disabled": o(e) || void 0,
      "data-disabled": o(e) ? "" : void 0,
      tabindex: o(e) ? void 0 : -1,
      as: m.as,
      "as-child": m.asChild,
      onFocus: S[0] || (S[0] = (P) => u.value = !0),
      onBlur: S[1] || (S[1] = (P) => u.value = !1),
      onPointerup: f,
      onPointerdown: S[2] || (S[2] = (P) => {
        P.currentTarget.focus({ preventScroll: !0 });
      }),
      onTouchend: S[3] || (S[3] = ge(() => {
      }, ["prevent", "stop"])),
      onPointermove: p,
      onPointerleave: v,
      onKeydown: y
    }, {
      default: h(() => [
        C(m.$slots, "default")
      ]),
      _: 3
    }, 8, ["aria-labelledby", "data-highlighted", "aria-selected", "data-state", "aria-disabled", "data-disabled", "tabindex", "as", "as-child"]));
  }
}), Ih = /* @__PURE__ */ w({
  __name: "SelectItemIndicator",
  props: {
    asChild: { type: Boolean },
    as: { default: "span" }
  },
  setup(a) {
    const t = a, e = as();
    return (n, l) => o(e).isSelected.value ? (b(), _(o(A), k({
      key: 0,
      "aria-hidden": ""
    }, t), {
      default: h(() => [
        C(n.$slots, "default")
      ]),
      _: 3
    }, 16)) : ue("", !0);
  }
}), [Qc, ef] = Q("SelectGroup"), Rh = /* @__PURE__ */ w({
  __name: "SelectGroup",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a, e = me(void 0, "radix-vue-select-group");
    return ef({ id: e }), (n, l) => (b(), _(o(A), k({ role: "group" }, t, { "aria-labelledby": o(e) }), {
      default: h(() => [
        C(n.$slots, "default")
      ]),
      _: 3
    }, 16, ["aria-labelledby"]));
  }
}), Ah = /* @__PURE__ */ w({
  __name: "SelectLabel",
  props: {
    for: {},
    asChild: { type: Boolean },
    as: { default: "div" }
  },
  setup(a) {
    const t = a, e = Qc({ id: "" });
    return (n, l) => (b(), _(o(A), k(t, {
      id: o(e).id
    }), {
      default: h(() => [
        C(n.$slots, "default")
      ]),
      _: 3
    }, 16, ["id"]));
  }
}), Oh = /* @__PURE__ */ w({
  inheritAttrs: !1,
  __name: "SelectItemText",
  props: {
    asChild: { type: Boolean },
    as: { default: "span" }
  },
  setup(a) {
    const t = a, e = ht(), n = yt(jt), l = zc(), s = as(), { forwardRef: r, currentElement: i } = I(), u = T(() => {
      var d;
      return rt("option", {
        key: s.value,
        value: s.value,
        disabled: s.disabled.value,
        innerHTML: (d = i.value) == null ? void 0 : d.textContent
      });
    });
    return se(() => {
      i.value && (s.onItemTextChange(i.value), n.itemTextRefCallback(
        i.value,
        s.value,
        s.disabled.value
      ), l.onNativeOptionAdd(u.value));
    }), xn(() => {
      l.onNativeOptionRemove(u.value);
    }), (d, c) => (b(), fe(Pe, null, [
      G(o(A), k({
        id: o(s).textId,
        ref: o(r)
      }, { ...t, ...d.$attrs }), {
        default: h(() => [
          C(d.$slots, "default")
        ]),
        _: 3
      }, 16, ["id"]),
      o(s).isSelected.value && o(e).valueElement.value && !o(e).valueElementHasChildren.value ? (b(), _(At, {
        key: 0,
        to: o(e).valueElement.value
      }, [
        C(d.$slots, "default")
      ], 8, ["to"])) : ue("", !0)
    ], 64));
  }
}), kh = /* @__PURE__ */ w({
  __name: "SelectViewport",
  props: {
    nonce: {},
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a, e = yt(jt), n = e.position === "item-aligned" ? vo() : void 0, { forwardRef: l, currentElement: s } = I();
    se(() => {
      e == null || e.onViewportChange(s.value);
    });
    const r = B(0);
    function i(u) {
      const d = u.currentTarget, { shouldExpandOnScrollRef: c, contentWrapper: f } = n ?? {};
      if (c != null && c.value && (f != null && f.value)) {
        const p = Math.abs(r.value - d.scrollTop);
        if (p > 0) {
          const v = window.innerHeight - Ye * 2, y = Number.parseFloat(
            f.value.style.minHeight
          ), m = Number.parseFloat(f.value.style.height), S = Math.max(y, m);
          if (S < v) {
            const P = S + p, D = Math.min(v, P), g = P - D;
            f.value.style.height = `${D}px`, f.value.style.bottom === "0px" && (d.scrollTop = g > 0 ? g : 0, f.value.style.justifyContent = "flex-end");
          }
        }
      }
      r.value = d.scrollTop;
    }
    return (u, d) => (b(), fe(Pe, null, [
      G(o(A), k({
        ref: o(l),
        "data-radix-select-viewport": "",
        role: "presentation"
      }, { ...u.$attrs, ...t }, {
        style: {
          // we use position: 'relative' here on the `viewport` so that when we call
          // `selectedItem.offsetTop` in calculations, the offset is relative to the viewport
          // (independent of the scrollUpButton).
          position: "relative",
          flex: 1,
          overflow: "auto"
        },
        onScroll: i
      }), {
        default: h(() => [
          C(u.$slots, "default")
        ]),
        _: 3
      }, 16, ["style"]),
      G(o(A), {
        as: "style",
        nonce: u.nonce
      }, {
        default: h(() => [
          ye(" /* Hide scrollbars cross-browser and enable momentum scroll for touch devices */ [data-radix-select-viewport] { scrollbar-width:none; -ms-overflow-style: none; -webkit-overflow-scrolling: touch; } [data-radix-select-viewport]::-webkit-scrollbar { display: none; } ")
        ]),
        _: 1
      }, 8, ["nonce"])
    ], 64));
  }
}), ns = /* @__PURE__ */ w({
  __name: "SelectScrollButtonImpl",
  emits: ["autoScroll"],
  setup(a, { emit: t }) {
    const e = t, { injectCollection: n } = Re(), l = n(), s = yt(jt), r = B(null);
    function i() {
      r.value !== null && (window.clearInterval(r.value), r.value = null);
    }
    ve(() => {
      const c = l.value.find(
        (f) => f === document.activeElement
      );
      c == null || c.scrollIntoView({ block: "nearest" });
    });
    function u() {
      r.value === null && (r.value = window.setInterval(() => {
        e("autoScroll");
      }, 50));
    }
    function d() {
      var c;
      (c = s.onItemLeave) == null || c.call(s), r.value === null && (r.value = window.setInterval(() => {
        e("autoScroll");
      }, 50));
    }
    return xn(() => i()), (c, f) => {
      var p;
      return b(), _(o(A), k({
        "aria-hidden": "",
        style: {
          flexShrink: 0
        }
      }, (p = c.$parent) == null ? void 0 : p.$props, {
        onPointerdown: u,
        onPointermove: d,
        onPointerleave: f[0] || (f[0] = () => {
          i();
        })
      }), {
        default: h(() => [
          C(c.$slots, "default")
        ]),
        _: 3
      }, 16);
    };
  }
}), Mh = /* @__PURE__ */ w({
  __name: "SelectScrollUpButton",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = yt(jt), e = t.position === "item-aligned" ? vo() : void 0, { forwardRef: n, currentElement: l } = I(), s = B(!1);
    return ve((r) => {
      var i, u;
      if ((i = t.viewport) != null && i.value && ((u = t.isPositioned) != null && u.value)) {
        let d = function() {
          s.value = c.scrollTop > 0;
        };
        const c = t.viewport.value;
        d(), c.addEventListener("scroll", d), r(() => c.removeEventListener("scroll", d));
      }
    }), ee(l, () => {
      l.value && (e == null || e.onScrollButtonChange(l.value));
    }), (r, i) => s.value ? (b(), _(ns, {
      key: 0,
      ref: o(n),
      onAutoScroll: i[0] || (i[0] = () => {
        const { viewport: u, selectedItem: d } = o(t);
        u != null && u.value && (d != null && d.value) && (u.value.scrollTop = u.value.scrollTop - d.value.offsetHeight);
      })
    }, {
      default: h(() => [
        C(r.$slots, "default")
      ]),
      _: 3
    }, 512)) : ue("", !0);
  }
}), Vh = /* @__PURE__ */ w({
  __name: "SelectScrollDownButton",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = yt(jt), e = t.position === "item-aligned" ? vo() : void 0, { forwardRef: n, currentElement: l } = I(), s = B(!1);
    return ve((r) => {
      var i, u;
      if ((i = t.viewport) != null && i.value && ((u = t.isPositioned) != null && u.value)) {
        let d = function() {
          const f = c.scrollHeight - c.clientHeight;
          s.value = Math.ceil(c.scrollTop) < f;
        };
        const c = t.viewport.value;
        d(), c.addEventListener("scroll", d), r(() => c.removeEventListener("scroll", d));
      }
    }), ee(l, () => {
      l.value && (e == null || e.onScrollButtonChange(l.value));
    }), (r, i) => s.value ? (b(), _(ns, {
      key: 0,
      ref: o(n),
      onAutoScroll: i[0] || (i[0] = () => {
        const { viewport: u, selectedItem: d } = o(t);
        u != null && u.value && (d != null && d.value) && (u.value.scrollTop = u.value.scrollTop + d.value.offsetHeight);
      })
    }, {
      default: h(() => [
        C(r.$slots, "default")
      ]),
      _: 3
    }, 512)) : ue("", !0);
  }
}), Fh = /* @__PURE__ */ w({
  __name: "SelectValue",
  props: {
    placeholder: { default: "" },
    asChild: { type: Boolean },
    as: { default: "span" }
  },
  setup(a) {
    const { forwardRef: t, currentElement: e } = I(), n = ht(), l = En();
    return Yo(() => {
      var r;
      const s = !!Ta((r = l == null ? void 0 : l.default) == null ? void 0 : r.call(l)).length;
      n.onValueElementHasChildrenChange(s);
    }), se(() => {
      n.valueElement = e;
    }), (s, r) => (b(), _(o(A), {
      ref: o(t),
      as: s.as,
      "as-child": s.asChild,
      style: { pointerEvents: "none" }
    }, {
      default: h(() => {
        var i;
        return [
          o(ts)((i = o(n).modelValue) == null ? void 0 : i.value) ? (b(), fe(Pe, { key: 0 }, [
            ye(ke(s.placeholder), 1)
          ], 64)) : C(s.$slots, "default", { key: 1 })
        ];
      }),
      _: 3
    }, 8, ["as", "as-child"]));
  }
}), Lh = /* @__PURE__ */ w({
  __name: "SelectIcon",
  props: {
    asChild: { type: Boolean },
    as: { default: "span" }
  },
  setup(a) {
    return (t, e) => (b(), _(o(A), {
      "aria-hidden": "",
      as: t.as,
      "as-child": t.asChild
    }, {
      default: h(() => [
        C(t.$slots, "default", {}, () => [
          ye("▼")
        ])
      ]),
      _: 3
    }, 8, ["as", "as-child"]));
  }
}), os = /* @__PURE__ */ w({
  __name: "BaseSeparator",
  props: {
    orientation: { default: "horizontal" },
    decorative: { type: Boolean },
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a, e = ["horizontal", "vertical"];
    function n(i) {
      return e.includes(i);
    }
    const l = T(
      () => n(t.orientation) ? t.orientation : "horizontal"
    ), s = T(
      () => l.value === "vertical" ? t.orientation : void 0
    ), r = T(
      () => t.decorative ? { role: "none" } : { "aria-orientation": s.value, role: "separator" }
    );
    return (i, u) => (b(), _(o(A), k({
      as: i.as,
      "as-child": i.asChild,
      "data-orientation": l.value
    }, r.value), {
      default: h(() => [
        C(i.$slots, "default")
      ]),
      _: 3
    }, 16, ["as", "as-child", "data-orientation"]));
  }
}), Nh = /* @__PURE__ */ w({
  __name: "Separator",
  props: {
    orientation: { default: "horizontal" },
    decorative: { type: Boolean },
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    return (e, n) => (b(), _(os, z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
});
function ls(a, [t, e]) {
  return Math.min(e, Math.max(t, a));
}
function tf(a = [], t, e) {
  const n = [...a];
  return n[e] = t, n.sort((l, s) => l - s);
}
function ss(a, t, e) {
  const s = 100 / (e - t) * (a - t);
  return ls(s, [0, 100]);
}
function af(a, t) {
  return t > 2 ? `Value ${a + 1} of ${t}` : t === 2 ? ["Minimum", "Maximum"][a] : void 0;
}
function nf(a, t) {
  if (a.length === 1)
    return 0;
  const e = a.map((l) => Math.abs(l - t)), n = Math.min(...e);
  return e.indexOf(n);
}
function of(a, t, e) {
  const n = a / 2, s = mo([0, 50], [0, n]);
  return (n - s(t) * e) * e;
}
function lf(a) {
  return a.slice(0, -1).map((t, e) => a[e + 1] - t);
}
function sf(a, t) {
  if (t > 0) {
    const e = lf(a);
    return Math.min(...e) >= t;
  }
  return !0;
}
function mo(a, t) {
  return (e) => {
    if (a[0] === a[1] || t[0] === t[1])
      return t[0];
    const n = (t[1] - t[0]) / (a[1] - a[0]);
    return t[0] + n * (e - a[0]);
  };
}
function rf(a) {
  return (String(a).split(".")[1] || "").length;
}
function uf(a, t) {
  const e = 10 ** t;
  return Math.round(a * e) / e;
}
const rs = ["PageUp", "PageDown"], is = ["ArrowUp", "ArrowDown", "ArrowLeft", "ArrowRight"], us = {
  "from-left": ["Home", "PageDown", "ArrowDown", "ArrowLeft"],
  "from-right": ["Home", "PageDown", "ArrowDown", "ArrowRight"],
  "from-bottom": ["Home", "PageDown", "ArrowDown", "ArrowLeft"],
  "from-top": ["Home", "PageDown", "ArrowUp", "ArrowLeft"]
}, [ds, cs] = Q(["SliderVertical", "SliderHorizontal"]), fs = /* @__PURE__ */ w({
  __name: "SliderImpl",
  props: {
    asChild: { type: Boolean },
    as: { default: "span" }
  },
  emits: ["slideStart", "slideMove", "slideEnd", "homeKeyDown", "endKeyDown", "stepKeyDown"],
  setup(a, { emit: t }) {
    const e = a, n = t, l = ja();
    return (s, r) => (b(), _(o(A), k({ "data-slider-impl": "" }, e, {
      onKeydown: r[0] || (r[0] = (i) => {
        i.key === "Home" ? (n("homeKeyDown", i), i.preventDefault()) : i.key === "End" ? (n("endKeyDown", i), i.preventDefault()) : o(rs).concat(o(is)).includes(i.key) && (n("stepKeyDown", i), i.preventDefault());
      }),
      onPointerdown: r[1] || (r[1] = (i) => {
        const u = i.target;
        u.setPointerCapture(i.pointerId), i.preventDefault(), o(l).thumbElements.value.includes(u) ? u.focus() : n("slideStart", i);
      }),
      onPointermove: r[2] || (r[2] = (i) => {
        i.target.hasPointerCapture(i.pointerId) && n("slideMove", i);
      }),
      onPointerup: r[3] || (r[3] = (i) => {
        const u = i.target;
        u.hasPointerCapture(i.pointerId) && (u.releasePointerCapture(i.pointerId), n("slideEnd", i));
      })
    }), {
      default: h(() => [
        C(s.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), df = /* @__PURE__ */ w({
  __name: "SliderHorizontal",
  props: {
    dir: {},
    min: {},
    max: {},
    inverted: { type: Boolean }
  },
  emits: ["slideEnd", "slideStart", "slideMove", "homeKeyDown", "endKeyDown", "stepKeyDown"],
  setup(a, { emit: t }) {
    const e = a, n = t, { max: l, min: s, dir: r, inverted: i } = le(e), { forwardRef: u, currentElement: d } = I(), c = B(), f = T(() => (r == null ? void 0 : r.value) === "ltr" && !i.value || (r == null ? void 0 : r.value) !== "ltr" && i.value);
    function p(v) {
      const y = c.value || d.value.getBoundingClientRect(), m = [0, y.width], S = f.value ? [s.value, l.value] : [l.value, s.value], P = mo(m, S);
      return c.value = y, P(v - y.left);
    }
    return cs({
      startEdge: f.value ? "left" : "right",
      endEdge: f.value ? "right" : "left",
      direction: f.value ? 1 : -1,
      size: "width"
    }), (v, y) => (b(), _(fs, {
      ref: o(u),
      dir: o(r),
      "data-orientation": "horizontal",
      style: Ce({
        "--radix-slider-thumb-transform": "translateX(-50%)"
      }),
      onSlideStart: y[0] || (y[0] = (m) => {
        const S = p(m.clientX);
        n("slideStart", S);
      }),
      onSlideMove: y[1] || (y[1] = (m) => {
        const S = p(m.clientX);
        n("slideMove", S);
      }),
      onSlideEnd: y[2] || (y[2] = () => {
        c.value = void 0, n("slideEnd");
      }),
      onStepKeyDown: y[3] || (y[3] = (m) => {
        const S = f.value ? "from-left" : "from-right", P = o(us)[S].includes(m.key);
        n("stepKeyDown", m, P ? -1 : 1);
      }),
      onEndKeyDown: y[4] || (y[4] = (m) => n("endKeyDown", m)),
      onHomeKeyDown: y[5] || (y[5] = (m) => n("homeKeyDown", m))
    }, {
      default: h(() => [
        C(v.$slots, "default")
      ]),
      _: 3
    }, 8, ["dir", "style"]));
  }
}), cf = /* @__PURE__ */ w({
  __name: "SliderVertical",
  props: {
    min: {},
    max: {},
    inverted: { type: Boolean }
  },
  emits: ["slideEnd", "slideStart", "slideMove", "homeKeyDown", "endKeyDown", "stepKeyDown"],
  setup(a, { emit: t }) {
    const e = a, n = t, { max: l, min: s, inverted: r } = le(e), { forwardRef: i, currentElement: u } = I(), d = B(), c = T(() => !r.value);
    function f(p) {
      const v = d.value || u.value.getBoundingClientRect(), y = [0, v.height], m = c.value ? [l.value, s.value] : [s.value, l.value], S = mo(y, m);
      return d.value = v, S(p - v.top);
    }
    return cs({
      startEdge: c.value ? "bottom" : "top",
      endEdge: c.value ? "top" : "bottom",
      size: "height",
      direction: c.value ? 1 : -1
    }), (p, v) => (b(), _(fs, {
      ref: o(i),
      "data-orientation": "vertical",
      style: Ce({
        "--radix-slider-thumb-transform": "translateY(50%)"
      }),
      onSlideStart: v[0] || (v[0] = (y) => {
        const m = f(y.clientY);
        n("slideStart", m);
      }),
      onSlideMove: v[1] || (v[1] = (y) => {
        const m = f(y.clientY);
        n("slideMove", m);
      }),
      onSlideEnd: v[2] || (v[2] = () => {
        d.value = void 0, n("slideEnd");
      }),
      onStepKeyDown: v[3] || (v[3] = (y) => {
        const m = c.value ? "from-bottom" : "from-top", S = o(us)[m].includes(y.key);
        n("stepKeyDown", y, S ? -1 : 1);
      }),
      onEndKeyDown: v[4] || (v[4] = (y) => n("endKeyDown", y)),
      onHomeKeyDown: v[5] || (v[5] = (y) => n("homeKeyDown", y))
    }, {
      default: h(() => [
        C(p.$slots, "default")
      ]),
      _: 3
    }, 8, ["style"]));
  }
}), ff = ["value", "name", "disabled", "step"], [ja, pf] = Q("SliderRoot"), zh = /* @__PURE__ */ w({
  inheritAttrs: !1,
  __name: "SliderRoot",
  props: {
    name: {},
    defaultValue: { default: () => [0] },
    modelValue: {},
    disabled: { type: Boolean, default: !1 },
    orientation: { default: "horizontal" },
    dir: {},
    inverted: { type: Boolean, default: !1 },
    min: { default: 0 },
    max: { default: 100 },
    step: { default: 1 },
    minStepsBetweenThumbs: { default: 0 },
    asChild: { type: Boolean },
    as: {}
  },
  emits: ["update:modelValue", "valueCommit"],
  setup(a, { emit: t }) {
    const e = a, n = t, { min: l, max: s, step: r, minStepsBetweenThumbs: i, orientation: u, disabled: d, dir: c } = le(e), f = be(c), { forwardRef: p, currentElement: v } = I(), y = ct(v);
    Oa();
    const m = ne(e, "modelValue", n, {
      defaultValue: e.defaultValue,
      passive: e.modelValue === void 0
    }), S = B(0), P = B(m.value);
    function D(R) {
      const M = nf(m.value, R);
      E(R, M);
    }
    function g(R) {
      E(R, S.value);
    }
    function x() {
      const R = P.value[S.value];
      m.value[S.value] !== R && n("valueCommit", Ws(m.value));
    }
    function E(R, M, { commit: V } = { commit: !1 }) {
      var W;
      const O = rf(r.value), L = uf(Math.round((R - l.value) / r.value) * r.value + l.value, O), j = ls(L, [l.value, s.value]), J = tf(m.value, j, M);
      if (sf(J, i.value * r.value)) {
        S.value = J.indexOf(j);
        const X = String(J) !== String(m.value);
        X && V && n("valueCommit", J), X && ((W = $.value[S.value]) == null || W.focus(), m.value = J);
      }
    }
    const $ = B([]);
    return pf({
      modelValue: m,
      valueIndexToChangeRef: S,
      thumbElements: $,
      orientation: u,
      min: l,
      max: s,
      disabled: d
    }), (R, M) => (b(), fe(Pe, null, [
      G(o(ka), null, {
        default: h(() => [
          (b(), _(Ue(o(u) === "horizontal" ? df : cf), k(R.$attrs, {
            ref: o(p),
            "as-child": R.asChild,
            as: R.as,
            min: o(l),
            max: o(s),
            dir: o(f),
            inverted: R.inverted,
            "aria-disabled": o(d),
            "data-disabled": o(d) ? "" : void 0,
            onPointerdown: M[0] || (M[0] = () => {
              o(d) || (P.value = o(m));
            }),
            onSlideStart: M[1] || (M[1] = (V) => !o(d) && D(V)),
            onSlideMove: M[2] || (M[2] = (V) => !o(d) && g(V)),
            onSlideEnd: M[3] || (M[3] = (V) => !o(d) && x()),
            onHomeKeyDown: M[4] || (M[4] = (V) => !o(d) && E(o(l), 0, { commit: !0 })),
            onEndKeyDown: M[5] || (M[5] = (V) => !o(d) && E(o(s), o(m).length - 1, { commit: !0 })),
            onStepKeyDown: M[6] || (M[6] = (V, O) => {
              if (!o(d)) {
                const J = o(rs).includes(V.key) || V.shiftKey && o(is).includes(V.key) ? 10 : 1, W = S.value, X = o(m)[W], N = o(r) * J * O;
                E(X + N, W, { commit: !0 });
              }
            })
          }), {
            default: h(() => [
              C(R.$slots, "default", { modelValue: o(m) })
            ]),
            _: 3
          }, 16, ["as-child", "as", "min", "max", "dir", "inverted", "aria-disabled", "data-disabled"]))
        ]),
        _: 3
      }),
      o(y) ? (b(!0), fe(Pe, { key: 0 }, Da(o(m), (V, O) => (b(), fe("input", {
        key: O,
        value: V,
        type: "number",
        style: { display: "none" },
        name: R.name ? R.name + (o(m).length > 1 ? "[]" : "") : void 0,
        disabled: o(d),
        step: o(r)
      }, null, 8, ff))), 128)) : ue("", !0)
    ], 64));
  }
}), vf = /* @__PURE__ */ w({
  inheritAttrs: !1,
  __name: "SliderThumbImpl",
  props: {
    index: {},
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a, e = ja(), n = ds(), { forwardRef: l, currentElement: s } = I(), r = T(() => {
      var v, y;
      return (y = (v = e.modelValue) == null ? void 0 : v.value) == null ? void 0 : y[t.index];
    }), i = T(() => r.value === void 0 ? 0 : ss(r.value, e.min.value ?? 0, e.max.value ?? 100)), u = T(() => {
      var v, y;
      return af(t.index, ((y = (v = e.modelValue) == null ? void 0 : v.value) == null ? void 0 : y.length) ?? 0);
    }), d = ul(s), c = T(() => d[n.size].value), f = T(() => c.value ? of(c.value, i.value, n.direction) : 0), p = Ba();
    return se(() => {
      e.thumbElements.value.push(s.value);
    }), Te(() => {
      const v = e.thumbElements.value.findIndex((y) => y === s.value) ?? -1;
      e.thumbElements.value.splice(v, 1);
    }), (v, y) => (b(), _(o(Ma), null, {
      default: h(() => [
        G(o(A), k(v.$attrs, {
          ref: o(l),
          role: "slider",
          "data-radix-vue-collection-item": "",
          tabindex: o(e).disabled.value ? void 0 : 0,
          "aria-label": v.$attrs["aria-label"] || u.value,
          "data-disabled": o(e).disabled.value ? "" : void 0,
          "data-orientation": o(e).orientation.value,
          "aria-valuenow": r.value,
          "aria-valuemin": o(e).min.value,
          "aria-valuemax": o(e).max.value,
          "aria-orientation": o(e).orientation.value,
          "as-child": v.asChild,
          as: v.as,
          style: {
            transform: "var(--radix-slider-thumb-transform)",
            position: "absolute",
            [o(n).startEdge]: `calc(${i.value}% + ${f.value}px)`,
            /**
             * There will be no value on initial render while we work out the index so we hide thumbs
             * without a value, otherwise SSR will render them in the wrong position before they
             * snap into the correct position during hydration which would be visually jarring for
             * slower connections.
             */
            display: !o(p) && r.value === void 0 ? "none" : void 0
          },
          onFocus: y[0] || (y[0] = () => {
            o(e).valueIndexToChangeRef.value = v.index;
          })
        }), {
          default: h(() => [
            C(v.$slots, "default")
          ]),
          _: 3
        }, 16, ["tabindex", "aria-label", "data-disabled", "data-orientation", "aria-valuenow", "aria-valuemin", "aria-valuemax", "aria-orientation", "as-child", "as", "style"])
      ]),
      _: 3
    }));
  }
}), Kh = /* @__PURE__ */ w({
  __name: "SliderThumb",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a, { getItems: e } = Hn(), { forwardRef: n, currentElement: l } = I(), s = T(() => l.value ? e().findIndex((r) => r.ref === l.value) : -1);
    return (r, i) => (b(), _(vf, k({ ref: o(n) }, t, { index: s.value }), {
      default: h(() => [
        C(r.$slots, "default")
      ]),
      _: 3
    }, 16, ["index"]));
  }
}), Hh = /* @__PURE__ */ w({
  __name: "SliderTrack",
  props: {
    asChild: { type: Boolean },
    as: { default: "span" }
  },
  setup(a) {
    const t = ja();
    return I(), (e, n) => (b(), _(o(A), {
      "as-child": e.asChild,
      as: e.as,
      "data-disabled": o(t).disabled.value ? "" : void 0,
      "data-orientation": o(t).orientation.value
    }, {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 8, ["as-child", "as", "data-disabled", "data-orientation"]));
  }
}), Wh = /* @__PURE__ */ w({
  __name: "SliderRange",
  props: {
    asChild: { type: Boolean },
    as: { default: "span" }
  },
  setup(a) {
    const t = ja(), e = ds();
    I();
    const n = T(() => {
      var r, i;
      return (i = (r = t.modelValue) == null ? void 0 : r.value) == null ? void 0 : i.map(
        (u) => ss(u, t.min.value, t.max.value)
      );
    }), l = T(() => t.modelValue.value.length > 1 ? Math.min(...n.value) : 0), s = T(() => 100 - Math.max(...n.value));
    return (r, i) => (b(), _(o(A), {
      "data-disabled": o(t).disabled.value ? "" : void 0,
      "data-orientation": o(t).orientation.value,
      "as-child": r.asChild,
      as: r.as,
      style: Ce({
        [o(e).startEdge]: `${l.value}%`,
        [o(e).endEdge]: `${s.value}%`
      })
    }, {
      default: h(() => [
        C(r.$slots, "default")
      ]),
      _: 3
    }, 8, ["data-disabled", "data-orientation", "as-child", "as", "style"]));
  }
});
let bn = null, bt = null;
function mf(a, t) {
  if (t) {
    const e = (t & gs) !== 0, n = (t & bs) !== 0, l = (t & Cs) !== 0, s = (t & ws) !== 0;
    if (e)
      return l ? "se-resize" : s ? "ne-resize" : "e-resize";
    if (n)
      return l ? "sw-resize" : s ? "nw-resize" : "w-resize";
    if (l)
      return "s-resize";
    if (s)
      return "n-resize";
  }
  switch (a) {
    case "horizontal":
      return "ew-resize";
    case "intersection":
      return "move";
    case "vertical":
      return "ns-resize";
  }
}
function hf() {
  bt !== null && (document.head.removeChild(bt), bn = null, bt = null);
}
function un(a, t) {
  const e = mf(a, t);
  bn !== e && (bn = e, bt === null && (bt = document.createElement("style"), document.head.appendChild(bt)), bt.innerHTML = `*{cursor: ${e}!important;}`);
}
function yf({
  defaultSize: a,
  dragState: t,
  layout: e,
  panelData: n,
  panelIndex: l,
  precision: s = 3
}) {
  const r = e[l];
  let i;
  return r == null ? i = a !== void 0 ? a.toPrecision(s) : "1" : n.length === 1 ? i = "1" : i = r.toPrecision(s), {
    flexBasis: 0,
    flexGrow: i,
    flexShrink: 1,
    // Without this, Panel sizes may be unintentionally overridden by their content
    overflow: "hidden",
    // Disable pointer events inside of a panel during resize
    // This avoid edge cases like nested iframes
    pointerEvents: t !== null ? "none" : void 0
  };
}
function ps(a) {
  return a.type === "keydown";
}
function vs(a) {
  return a.type.startsWith("mouse");
}
function ms(a) {
  return a.type.startsWith("touch");
}
function Ua(a) {
  if (vs(a))
    return {
      x: a.clientX,
      y: a.clientY
    };
  if (ms(a)) {
    const t = a.touches[0];
    if (t && t.clientX && t.clientY)
      return {
        x: t.clientX,
        y: t.clientY
      };
  }
  return {
    x: Number.POSITIVE_INFINITY,
    y: Number.POSITIVE_INFINITY
  };
}
function hs(a, t) {
  const e = a === "horizontal", { x: n, y: l } = Ua(t);
  return e ? n : l;
}
function gf(a, t, e) {
  return e ? a.x < t.x + t.width && a.x + a.width > t.x && a.y < t.y + t.height && a.y + a.height > t.y : a.x <= t.x + t.width && a.x + a.width >= t.x && a.y <= t.y + t.height && a.y + a.height >= t.y;
}
function ie(a, t = "Assertion failed!") {
  if (!a)
    throw console.error(t), new Error(t);
}
function bf(a, t) {
  if (a === t)
    throw new Error("Cannot compare node with itself");
  const e = {
    a: ko(a),
    b: ko(t)
  };
  let n;
  for (; e.a.at(-1) === e.b.at(-1); )
    a = e.a.pop(), t = e.b.pop(), n = a;
  ie(n);
  const l = {
    a: Oo(Ao(e.a)),
    b: Oo(Ao(e.b))
  };
  if (l.a === l.b) {
    const s = n.childNodes, r = {
      a: e.a.at(-1),
      b: e.b.at(-1)
    };
    let i = s.length;
    for (; i--; ) {
      const u = s[i];
      if (u === r.a)
        return 1;
      if (u === r.b)
        return -1;
    }
  }
  return Math.sign(l.a - l.b);
}
const Cf = /\b(?:position|zIndex|opacity|transform|webkitTransform|mixBlendMode|filter|webkitFilter|isolation)\b/;
function wf(a) {
  const t = getComputedStyle(ys(a)).display;
  return t === "flex" || t === "inline-flex";
}
function _f(a) {
  const t = getComputedStyle(a);
  return !!(t.position === "fixed" || t.zIndex !== "auto" && (t.position !== "static" || wf(a)) || +t.opacity < 1 || "transform" in t && t.transform !== "none" || "webkitTransform" in t && t.webkitTransform !== "none" || "mixBlendMode" in t && t.mixBlendMode !== "normal" || "filter" in t && t.filter !== "none" || "webkitFilter" in t && t.webkitFilter !== "none" || "isolation" in t && t.isolation === "isolate" || Cf.test(t.willChange) || t.webkitOverflowScrolling === "touch");
}
function Ao(a) {
  let t = a.length;
  for (; t--; ) {
    const e = a[t];
    if (ie(e), _f(e))
      return e;
  }
  return null;
}
function Oo(a) {
  return a && Number(getComputedStyle(a).zIndex) || 0;
}
function ko(a) {
  const t = [];
  for (; a; )
    t.push(a), a = ys(a);
  return t;
}
function ys(a) {
  var t;
  return ((t = a.parentNode) == null ? void 0 : t.host) || a.parentNode;
}
const gs = 1, bs = 2, Cs = 4, ws = 8;
function xf() {
  if (typeof matchMedia == "function")
    return matchMedia("(pointer:coarse)").matches ? "coarse" : "fine";
}
const Sf = xf() === "coarse", ut = [];
let Ga = !1;
const st = /* @__PURE__ */ new Map(), qa = /* @__PURE__ */ new Map(), ta = /* @__PURE__ */ new Set();
function Pf(a, t, e, n, l) {
  const { ownerDocument: s } = t, r = {
    direction: e,
    element: t,
    hitAreaMargins: n,
    setResizeHandlerState: l
  }, i = st.get(s) ?? 0;
  return st.set(s, i + 1), ta.add(r), Sa(), function() {
    qa.delete(a), ta.delete(r);
    const d = st.get(s) ?? 1;
    st.set(s, d - 1), Sa(), d === 1 && st.delete(s);
  };
}
function ma(a) {
  const { target: t } = a, { x: e, y: n } = Ua(a);
  Ga = !0, ho({ target: t, x: e, y: n }), Sa(), ut.length > 0 && (yo("down", a), a.preventDefault());
}
function nt(a) {
  const { x: t, y: e } = Ua(a);
  if (!Ga) {
    const { target: n } = a;
    ho({ target: n, x: t, y: e });
  }
  yo("move", a), _s(), ut.length > 0 && a.preventDefault();
}
function ot(a) {
  const { target: t } = a, { x: e, y: n } = Ua(a);
  qa.clear(), Ga = !1, ut.length > 0 && a.preventDefault(), yo("up", a), ho({ target: t, x: e, y: n }), _s(), Sa();
}
function ho({
  target: a,
  x: t,
  y: e
}) {
  ut.splice(0);
  let n = null;
  a instanceof HTMLElement && (n = a), ta.forEach((l) => {
    const { element: s, hitAreaMargins: r } = l, i = s.getBoundingClientRect(), { bottom: u, left: d, right: c, top: f } = i, p = Sf ? r.coarse : r.fine;
    if (t >= d - p && t <= c + p && e >= f - p && e <= u + p) {
      if (n !== null && s !== n && !s.contains(n) && !n.contains(s) && bf(n, s) > 0) {
        let y = n, m = !1;
        for (; y && !y.contains(s); ) {
          if (gf(
            y.getBoundingClientRect(),
            i,
            !0
          )) {
            m = !0;
            break;
          }
          y = y.parentElement;
        }
        if (m)
          return;
      }
      ut.push(l);
    }
  });
}
function dn(a, t) {
  qa.set(a, t);
}
function _s() {
  let a = !1, t = !1;
  ut.forEach((n) => {
    const { direction: l } = n;
    l === "horizontal" ? a = !0 : t = !0;
  });
  let e = 0;
  qa.forEach((n) => {
    e |= n;
  }), a && t ? un("intersection", e) : a ? un("horizontal", e) : t ? un("vertical", e) : hf();
}
function Sa() {
  st.forEach((a, t) => {
    const { body: e } = t;
    e.removeEventListener("contextmenu", ot), e.removeEventListener("mousedown", ma), e.removeEventListener("mouseleave", nt), e.removeEventListener("mousemove", nt), e.removeEventListener("touchmove", nt), e.removeEventListener("touchstart", ma);
  }), window.removeEventListener("mouseup", ot), window.removeEventListener("touchcancel", ot), window.removeEventListener("touchend", ot), ta.size > 0 && (Ga ? (ut.length > 0 && st.forEach((a, t) => {
    const { body: e } = t;
    a > 0 && (e.addEventListener("contextmenu", ot), e.addEventListener("mouseleave", nt), e.addEventListener("mousemove", nt), e.addEventListener("touchmove", nt, {
      passive: !1
    }));
  }), window.addEventListener("mouseup", ot), window.addEventListener("touchcancel", ot), window.addEventListener("touchend", ot)) : st.forEach((a, t) => {
    const { body: e } = t;
    a > 0 && (e.addEventListener("mousedown", ma), e.addEventListener("mousemove", nt), e.addEventListener("touchmove", nt, {
      passive: !1
    }), e.addEventListener("touchstart", ma));
  }));
}
function yo(a, t) {
  ta.forEach((e) => {
    const { setResizeHandlerState: n } = e, l = ut.includes(e);
    n(a, l, t);
  });
}
const xs = 10;
function aa(a, t, e = xs) {
  a = Number.parseFloat(a.toFixed(e)), t = Number.parseFloat(t.toFixed(e));
  const n = a - t;
  return n === 0 ? 0 : n > 0 ? 1 : -1;
}
function Ve(a, t, e) {
  return aa(a, t, e) === 0;
}
function It({
  panelConstraints: a,
  panelIndex: t,
  size: e
}) {
  const n = a[t];
  ie(n != null);
  const { collapsedSize: l = 0, collapsible: s, maxSize: r = 100, minSize: i = 0 } = n;
  if (aa(e, i) < 0)
    if (s) {
      const u = (l + i) / 2;
      aa(e, u) < 0 ? e = l : e = i;
    } else
      e = i;
  return e = Math.min(r, e), e = Number.parseFloat(e.toFixed(xs)), e;
}
function ha(a, t) {
  if (a.length !== t.length)
    return !1;
  for (let e = 0; e < a.length; e++)
    if (a[e] !== t[e])
      return !1;
  return !0;
}
function qt({
  delta: a,
  layout: t,
  panelConstraints: e,
  pivotIndices: n,
  trigger: l
}) {
  if (Ve(a, 0))
    return t;
  const s = [...t], [r, i] = n;
  ie(r != null), ie(i != null);
  let u = 0;
  if (l === "keyboard") {
    {
      const c = a < 0 ? i : r, f = e[c];
      if (ie(f), f.collapsible) {
        const p = t[c];
        ie(p != null);
        const v = e[c];
        ie(v);
        const { collapsedSize: y = 0, minSize: m = 0 } = v;
        if (Ve(p, y)) {
          const S = m - p;
          aa(S, Math.abs(a)) > 0 && (a = a < 0 ? 0 - S : S);
        }
      }
    }
    {
      const c = a < 0 ? r : i, f = e[c];
      ie(f);
      const { collapsible: p } = f;
      if (p) {
        const v = t[c];
        ie(v != null);
        const y = e[c];
        ie(y);
        const { collapsedSize: m = 0, minSize: S = 0 } = y;
        if (Ve(v, S)) {
          const P = v - m;
          aa(P, Math.abs(a)) > 0 && (a = a < 0 ? 0 - P : P);
        }
      }
    }
  }
  {
    const c = a < 0 ? 1 : -1;
    let f = a < 0 ? i : r, p = 0;
    for (; ; ) {
      const y = t[f];
      ie(y != null);
      const S = It({
        panelConstraints: e,
        panelIndex: f,
        size: 100
      }) - y;
      if (p += S, f += c, f < 0 || f >= e.length)
        break;
    }
    const v = Math.min(Math.abs(a), Math.abs(p));
    a = a < 0 ? 0 - v : v;
  }
  {
    let f = a < 0 ? r : i;
    for (; f >= 0 && f < e.length; ) {
      const p = Math.abs(a) - Math.abs(u), v = t[f];
      ie(v != null);
      const y = v - p, m = It({
        panelConstraints: e,
        panelIndex: f,
        size: y
      });
      if (!Ve(v, m) && (u += v - m, s[f] = m, u.toPrecision(3).localeCompare(Math.abs(a).toPrecision(3), void 0, {
        numeric: !0
      }) >= 0))
        break;
      a < 0 ? f-- : f++;
    }
  }
  if (Ve(u, 0))
    return t;
  {
    const c = a < 0 ? i : r, f = t[c];
    ie(f != null);
    const p = f + u, v = It({
      panelConstraints: e,
      panelIndex: c,
      size: p
    });
    if (s[c] = v, !Ve(v, p)) {
      let y = p - v, S = a < 0 ? i : r;
      for (; S >= 0 && S < e.length; ) {
        const P = s[S];
        ie(P != null);
        const D = P + y, g = It({
          panelConstraints: e,
          panelIndex: S,
          size: D
        });
        if (Ve(P, g) || (y -= g - P, s[S] = g), Ve(y, 0))
          break;
        a > 0 ? S-- : S++;
      }
    }
  }
  const d = s.reduce((c, f) => f + c, 0);
  return Ve(d, 100) ? s : t;
}
function Ss(a, t = document) {
  var n;
  if (!la)
    return null;
  if (t instanceof HTMLElement && ((n = t == null ? void 0 : t.dataset) == null ? void 0 : n.panelGroupId) === a)
    return t;
  const e = t.querySelector(
    `[data-panel-group][data-panel-group-id="${a}"]`
  );
  return e || null;
}
function Ya(a, t = document) {
  if (!la)
    return null;
  const e = t.querySelector(`[data-panel-resize-handle-id="${a}"]`);
  return e || null;
}
function Ps(a, t, e = document) {
  return la ? na(a, e).findIndex(
    (s) => s.getAttribute("data-panel-resize-handle-id") === t
  ) ?? null : null;
}
function na(a, t = document) {
  return la ? Array.from(
    t.querySelectorAll(
      `[data-panel-resize-handle-id][data-panel-group-id="${a}"]`
    )
  ) : [];
}
function Ef(a, t, e, n = document) {
  var d, c;
  const l = Ya(t, n), s = na(a, n), r = l ? s.indexOf(l) : -1, i = ((d = e[r]) == null ? void 0 : d.id) ?? null, u = ((c = e[r + 1]) == null ? void 0 : c.id) ?? null;
  return [i, u];
}
function Df(a, t, e, n, l) {
  const s = e === "horizontal", r = Ya(t, l);
  ie(r);
  const i = r.getAttribute("data-panel-group-id");
  ie(i);
  const { initialCursorPosition: u } = n, d = hs(e, a), c = Ss(i, l);
  ie(c);
  const f = c.getBoundingClientRect(), p = s ? f.width : f.height;
  return (d - u) / p * 100;
}
function $f(a, t, e, n, l, s) {
  if (ps(a)) {
    const r = e === "horizontal";
    let i = 0;
    a.shiftKey ? i = 100 : i = l ?? 10;
    let u = 0;
    switch (a.key) {
      case "ArrowDown":
        u = r ? 0 : i;
        break;
      case "ArrowLeft":
        u = r ? -i : 0;
        break;
      case "ArrowRight":
        u = r ? i : 0;
        break;
      case "ArrowUp":
        u = r ? 0 : -i;
        break;
      case "End":
        u = 100;
        break;
      case "Home":
        u = -100;
        break;
    }
    return u;
  } else
    return n == null ? 0 : Df(
      a,
      t,
      e,
      n,
      s
    );
}
function Bf({
  layout: a,
  panelsArray: t,
  pivotIndices: e
}) {
  let n = 0, l = 100, s = 0, r = 0;
  const i = e[0];
  ie(i != null), t.forEach((f, p) => {
    const { constraints: v } = f, { maxSize: y = 100, minSize: m = 0 } = v;
    p === i ? (n = m, l = y) : (s += m, r += y);
  });
  const u = Math.min(l, 100 - s), d = Math.max(n, 100 - r), c = a[i];
  return {
    valueMax: u,
    valueMin: d,
    valueNow: c
  };
}
function Tf({
  panelDataArray: a
}) {
  const t = Array(a.length), e = a.map(
    (s) => s.constraints
  );
  let n = 0, l = 100;
  for (let s = 0; s < a.length; s++) {
    const r = e[s];
    ie(r);
    const { defaultSize: i } = r;
    i != null && (n++, t[s] = i, l -= i);
  }
  for (let s = 0; s < a.length; s++) {
    const r = e[s];
    ie(r);
    const { defaultSize: i } = r;
    if (i != null)
      continue;
    const u = a.length - n, d = l / u;
    n++, t[s] = d, l -= d;
  }
  return t;
}
function Gt(a, t, e) {
  t.forEach((n, l) => {
    const s = a[l];
    ie(s);
    const { callbacks: r, constraints: i, id: u } = s, { collapsedSize: d = 0, collapsible: c } = i, f = e[u];
    if (f == null || n !== f) {
      e[u] = n;
      const { onCollapse: p, onExpand: v, onResize: y } = r;
      y && y(n, f), c && (p || v) && (v && (f == null || f === d) && n !== d && v(), p && (f == null || f !== d) && n === d && p());
    }
  });
}
function If(a, t = 10) {
  let e = null;
  return (...l) => {
    e !== null && clearTimeout(e), e = setTimeout(() => {
      a(...l);
    }, t);
  };
}
function Es(a, t, e) {
  const n = Ps(
    a,
    t,
    e
  );
  return n != null ? [n, n + 1] : [-1, -1];
}
function Rf({
  layout: a,
  panelConstraints: t
}) {
  const e = [...a], n = e.reduce(
    (s, r) => s + r,
    0
  );
  if (e.length !== t.length)
    throw new Error(
      `Invalid ${t.length} panel layout: ${e.map((s) => `${s}%`).join(", ")}`
    );
  if (!Ve(n, 100)) {
    console.warn(
      `WARNING: Invalid layout total size: ${e.map((s) => `${s}%`).join(", ")}. Layout normalization will be applied.`
    );
    for (let s = 0; s < t.length; s++) {
      const r = e[s];
      ie(r != null);
      const i = 100 / n * r;
      e[s] = i;
    }
  }
  let l = 0;
  for (let s = 0; s < t.length; s++) {
    const r = e[s];
    ie(r != null);
    const i = It({
      panelConstraints: t,
      panelIndex: s,
      size: r
    });
    r !== i && (l += r - i, e[s] = i);
  }
  if (!Ve(l, 0))
    for (let s = 0; s < t.length; s++) {
      const r = e[s];
      ie(r != null);
      const i = r + l, u = It({
        panelConstraints: t,
        panelIndex: s,
        size: i
      });
      if (r !== u && (l -= u - r, e[s] = u, Ve(l, 0)))
        break;
    }
  return e;
}
function Mo(a) {
  try {
    if (typeof localStorage < "u")
      a.getItem = (t) => localStorage.getItem(t), a.setItem = (t, e) => {
        localStorage.setItem(t, e);
      };
    else
      throw new TypeError("localStorage not supported in this environment");
  } catch (t) {
    console.error(t), a.getItem = () => null, a.setItem = () => {
    };
  }
}
function Ds(a) {
  return `radix-vue:${a}`;
}
function $s(a) {
  return a.map((t) => {
    const { constraints: e, id: n, idIsFromProps: l, order: s } = t;
    return l ? n : s ? `${s}:${JSON.stringify(e)}` : JSON.stringify(e);
  }).sort((t, e) => t.localeCompare(e)).join(",");
}
function Bs(a, t) {
  try {
    const e = Ds(a), n = t.getItem(e);
    if (n) {
      const l = JSON.parse(n);
      if (typeof l == "object" && l != null)
        return l;
    }
  } catch {
  }
  return null;
}
function Af(a, t, e) {
  const n = Bs(a, e) ?? {}, l = $s(t);
  return n[l] ?? null;
}
function Of(a, t, e, n, l) {
  const s = Ds(a), r = $s(t), i = Bs(a, l) ?? {};
  i[r] = {
    expandToSizes: Object.fromEntries(e.entries()),
    layout: n
  };
  try {
    l.setItem(s, JSON.stringify(i));
  } catch (u) {
    console.error(u);
  }
}
function kf({
  eagerValuesRef: a,
  groupId: t,
  layout: e,
  panelDataArray: n,
  panelGroupElement: l,
  setLayout: s
}) {
  ve((r) => {
    const i = l.value;
    if (!i)
      return;
    const u = na(
      t,
      i
    );
    for (let d = 0; d < n.length - 1; d++) {
      const { valueMax: c, valueMin: f, valueNow: p } = Bf({
        layout: e.value,
        panelsArray: n,
        pivotIndices: [d, d + 1]
      }), v = u[d];
      if (v != null) {
        const y = n[d];
        ie(y), v.setAttribute("aria-controls", y.id), v.setAttribute(
          "aria-valuemax",
          `${Math.round(c)}`
        ), v.setAttribute(
          "aria-valuemin",
          `${Math.round(f)}`
        ), v.setAttribute(
          "aria-valuenow",
          p != null ? `${Math.round(p)}` : ""
        );
      }
    }
    r(() => {
      u.forEach((d) => {
        d.removeAttribute("aria-controls"), d.removeAttribute("aria-valuemax"), d.removeAttribute("aria-valuemin"), d.removeAttribute("aria-valuenow");
      });
    });
  }), ve((r) => {
    const i = l.value;
    if (!i)
      return;
    const u = a.value;
    ie(u);
    const { panelDataArray: d } = u, c = Ss(t, i);
    ie(c != null, `No group found for id "${t}"`);
    const f = na(t, i);
    ie(f);
    const p = f.map((v) => {
      const y = v.getAttribute("data-panel-resize-handle-id");
      ie(y);
      const [m, S] = Ef(
        t,
        y,
        d,
        i
      );
      if (m == null || S == null)
        return () => {
        };
      const P = (D) => {
        if (!D.defaultPrevented)
          switch (D.key) {
            case "Enter": {
              D.preventDefault();
              const g = d.findIndex(
                (x) => x.id === m
              );
              if (g >= 0) {
                const x = d[g];
                ie(x);
                const E = e.value[g], {
                  collapsedSize: $ = 0,
                  collapsible: R,
                  minSize: M = 0
                } = x.constraints;
                if (E != null && R) {
                  const V = qt({
                    delta: Ve(E, $) ? M - $ : $ - E,
                    layout: e.value,
                    panelConstraints: d.map(
                      (O) => O.constraints
                    ),
                    pivotIndices: Es(
                      t,
                      y,
                      i
                    ),
                    trigger: "keyboard"
                  });
                  e.value !== V && s(V);
                }
              }
              break;
            }
          }
      };
      return v.addEventListener("keydown", P), () => {
        v.removeEventListener("keydown", P);
      };
    });
    r(() => {
      p.forEach((v) => v());
    });
  });
}
const Mf = 100, Yt = {
  getItem: (a) => (Mo(Yt), Yt.getItem(a)),
  setItem: (a, t) => {
    Mo(Yt), Yt.setItem(a, t);
  }
}, [Ts, Vf] = Q("PanelGroup"), jh = /* @__PURE__ */ w({
  __name: "SplitterGroup",
  props: {
    id: {},
    autoSaveId: { default: null },
    direction: {},
    keyboardResizeBy: { default: 10 },
    storage: { default: () => Yt },
    asChild: { type: Boolean },
    as: {}
  },
  emits: ["layout"],
  setup(a, { emit: t }) {
    const e = a, n = t, l = {}, s = me(e.id, "radix-vue-splitter-group"), r = be(), { forwardRef: i, currentElement: u } = I(), d = B(null), c = B([]), f = B({}), p = B(/* @__PURE__ */ new Map()), v = B(0), y = T(() => ({
      autoSaveId: e.autoSaveId,
      direction: e.direction,
      dragState: d.value,
      id: s,
      keyboardResizeBy: e.keyboardResizeBy,
      storage: e.storage
    })), m = B({
      layout: c.value,
      panelDataArray: [],
      panelDataArrayChanged: !1
    }), S = (N) => c.value = N;
    kf({
      eagerValuesRef: m,
      groupId: s,
      layout: c,
      panelDataArray: m.value.panelDataArray,
      setLayout: S,
      panelGroupElement: u
    }), ve(() => {
      const { panelDataArray: N } = m.value, { autoSaveId: q } = e;
      if (q) {
        if (c.value.length === 0 || c.value.length !== N.length)
          return;
        let F = l[q];
        F || (F = If(
          Of,
          Mf
        ), l[q] = F);
        const Z = [...N], U = new Map(
          p.value
        );
        F(
          q,
          Z,
          U,
          c.value,
          e.storage
        );
      }
    });
    function P(N, q) {
      const { panelDataArray: F } = m.value, Z = W(F, N);
      return yf({
        defaultSize: q,
        dragState: d.value,
        layout: c.value,
        panelData: F,
        panelIndex: Z
      });
    }
    function D(N) {
      const { panelDataArray: q } = m.value;
      q.push(N), q.sort((F, Z) => {
        const U = F.order, Y = Z.order;
        return U == null && Y == null ? 0 : U == null ? -1 : Y == null ? 1 : U - Y;
      }), m.value.panelDataArrayChanged = !0;
    }
    ee(() => m.value.panelDataArrayChanged, () => {
      if (m.value.panelDataArrayChanged) {
        m.value.panelDataArrayChanged = !1;
        const { autoSaveId: N, storage: q } = y.value, { layout: F, panelDataArray: Z } = m.value;
        let U = null;
        if (N) {
          const te = Af(N, Z, q);
          te && (p.value = new Map(
            Object.entries(te.expandToSizes)
          ), U = te.layout);
        }
        U === null && (U = Tf({
          panelDataArray: Z
        }));
        const Y = Rf({
          layout: U,
          panelConstraints: Z.map(
            (te) => te.constraints
          )
        });
        or(F, Y) || (S(Y), m.value.layout = Y, n("layout", Y), Gt(
          Z,
          Y,
          f.value
        ));
      }
    });
    function g(N) {
      return function(F) {
        F.preventDefault();
        const Z = u.value;
        if (!Z)
          return () => null;
        const { direction: U, dragState: Y, id: te, keyboardResizeBy: de } = y.value, { layout: H, panelDataArray: oe } = m.value, { initialLayout: ce } = Y ?? {}, xe = Es(
          te,
          N,
          Z
        );
        let ae = $f(
          F,
          N,
          U,
          Y,
          de,
          Z
        );
        if (ae === 0)
          return;
        const we = U === "horizontal";
        r.value === "rtl" && we && (ae = -ae);
        const De = oe.map((Me) => Me.constraints), $e = qt({
          delta: ae,
          layout: ce ?? H,
          panelConstraints: De,
          pivotIndices: xe,
          trigger: ps(F) ? "keyboard" : "mouse-or-touch"
        }), pe = !ha(H, $e);
        (vs(F) || ms(F)) && v.value !== ae && (v.value = ae, pe ? dn(N, 0) : we ? dn(
          N,
          ae < 0 ? gs : bs
        ) : dn(
          N,
          ae < 0 ? Cs : ws
        )), pe && (S($e), m.value.layout = $e, n("layout", $e), Gt(
          oe,
          $e,
          f.value
        ));
      };
    }
    function x(N, q) {
      const { layout: F, panelDataArray: Z } = m.value, U = Z.map((ce) => ce.constraints), { panelSize: Y, pivotIndices: te } = X(
        Z,
        N,
        F
      );
      ie(Y != null);
      const H = W(Z, N) === Z.length - 1 ? Y - q : q - Y, oe = qt({
        delta: H,
        layout: F,
        panelConstraints: U,
        pivotIndices: te,
        trigger: "imperative-api"
      });
      ha(F, oe) || (S(oe), m.value.layout = oe, n("layout", oe), Gt(
        Z,
        oe,
        f.value
      ));
    }
    function E(N, q) {
      const { layout: F, panelDataArray: Z } = m.value, {
        collapsedSize: U = 0,
        collapsible: Y
      } = q, {
        collapsedSize: te = 0,
        collapsible: de,
        maxSize: H = 100,
        minSize: oe = 0
      } = N.constraints, { panelSize: ce } = X(
        Z,
        N,
        F
      );
      ce !== null && (Y && de && ce === U ? U !== te && x(N, te) : ce < oe ? x(N, oe) : ce > H && x(N, H));
    }
    function $(N, q) {
      const { direction: F } = y.value, { layout: Z } = m.value;
      if (!u.value)
        return;
      const U = Ya(
        N,
        u.value
      );
      ie(U);
      const Y = hs(
        F,
        q
      );
      d.value = {
        dragHandleId: N,
        dragHandleRect: U.getBoundingClientRect(),
        initialCursorPosition: Y,
        initialLayout: Z
      };
    }
    function R() {
      d.value = null;
    }
    function M(N) {
      const { panelDataArray: q } = m.value, F = W(q, N);
      F >= 0 && (q.splice(F, 1), delete f.value[N.id], m.value.panelDataArrayChanged = !0);
    }
    function V(N) {
      const { layout: q, panelDataArray: F } = m.value;
      if (N.constraints.collapsible) {
        const Z = F.map(
          (de) => de.constraints
        ), {
          collapsedSize: U = 0,
          panelSize: Y,
          pivotIndices: te
        } = X(F, N, q);
        if (ie(
          Y != null,
          `Panel size not found for panel "${N.id}"`
        ), Y !== U) {
          p.value.set(N.id, Y);
          const H = W(F, N) === F.length - 1 ? Y - U : U - Y, oe = qt({
            delta: H,
            layout: q,
            panelConstraints: Z,
            pivotIndices: te,
            trigger: "imperative-api"
          });
          ha(q, oe) || (S(oe), m.value.layout = oe, n("layout", oe), Gt(
            F,
            oe,
            f.value
          ));
        }
      }
    }
    function O(N) {
      const { layout: q, panelDataArray: F } = m.value;
      if (N.constraints.collapsible) {
        const Z = F.map(
          (H) => H.constraints
        ), {
          collapsedSize: U = 0,
          panelSize: Y,
          minSize: te = 0,
          pivotIndices: de
        } = X(F, N, q);
        if (Y === U) {
          const H = p.value.get(
            N.id
          ), oe = H != null && H >= te ? H : te, xe = W(F, N) === F.length - 1 ? Y - oe : oe - Y, ae = qt({
            delta: xe,
            layout: q,
            panelConstraints: Z,
            pivotIndices: de,
            trigger: "imperative-api"
          });
          ha(q, ae) || (S(ae), m.value.layout = ae, n("layout", ae), Gt(
            F,
            ae,
            f.value
          ));
        }
      }
    }
    function L(N) {
      const { layout: q, panelDataArray: F } = m.value, { panelSize: Z } = X(F, N, q);
      return ie(
        Z != null,
        `Panel size not found for panel "${N.id}"`
      ), Z;
    }
    function j(N) {
      const { layout: q, panelDataArray: F } = m.value, {
        collapsedSize: Z = 0,
        collapsible: U,
        panelSize: Y
      } = X(F, N, q);
      return U === !0 && Y === Z;
    }
    function J(N) {
      const { layout: q, panelDataArray: F } = m.value, {
        collapsedSize: Z = 0,
        collapsible: U,
        panelSize: Y
      } = X(F, N, q);
      return ie(
        Y != null,
        `Panel size not found for panel "${N.id}"`
      ), !U || Y > Z;
    }
    Vf({
      direction: e.direction,
      dragState: d.value,
      groupId: s,
      reevaluatePanelConstraints: E,
      registerPanel: D,
      registerResizeHandle: g,
      resizePanel: x,
      startDragging: $,
      stopDragging: R,
      unregisterPanel: M,
      panelGroupElement: u,
      collapsePanel: V,
      expandPanel: O,
      isPanelCollapsed: j,
      isPanelExpanded: J,
      getPanelSize: L,
      getPanelStyle: P
    });
    function W(N, q) {
      return N.findIndex(
        (F) => F === q || F.id === q.id
      );
    }
    function X(N, q, F) {
      const Z = W(N, q), Y = Z === N.length - 1 ? [Z - 1, Z] : [Z, Z + 1], te = F[Z];
      return {
        ...q.constraints,
        panelSize: te,
        pivotIndices: Y
      };
    }
    return (N, q) => (b(), _(o(A), {
      ref: o(i),
      style: Ce({
        display: "flex",
        flexDirection: N.direction === "horizontal" ? "row" : "column",
        height: "100%",
        overflow: "hidden",
        width: "100%"
      }),
      "data-panel-group": "",
      "data-orientation": N.direction,
      "data-panel-group-id": o(s)
    }, {
      default: h(() => [
        C(N.$slots, "default", { layout: c.value })
      ]),
      _: 3
    }, 8, ["style", "data-orientation", "data-panel-group-id"]));
  }
}), Uh = /* @__PURE__ */ w({
  __name: "SplitterPanel",
  props: {
    collapsedSize: {},
    collapsible: { type: Boolean },
    defaultSize: {},
    id: {},
    maxSize: {},
    minSize: {},
    order: {},
    asChild: { type: Boolean },
    as: {}
  },
  emits: ["collapse", "expand", "resize"],
  setup(a, { expose: t, emit: e }) {
    const n = a, l = e, s = Ts();
    if (s === null)
      throw new Error(
        "SplitterPanel components must be rendered within a SplitterGroup container"
      );
    const { collapsePanel: r, expandPanel: i, getPanelSize: u, getPanelStyle: d, isPanelCollapsed: c, resizePanel: f, groupId: p, reevaluatePanelConstraints: v, registerPanel: y, unregisterPanel: m } = s, S = me(n.id, "radix-vue-splitter-panel"), P = T(() => ({
      callbacks: {
        onCollapse: () => l("collapse"),
        onExpand: () => l("expand"),
        onResize: (...E) => l("resize", ...E)
      },
      constraints: {
        collapsedSize: n.collapsedSize,
        collapsible: n.collapsible,
        defaultSize: n.defaultSize,
        /** Panel id (unique within group); falls back to useId when not provided */
        /** Panel id (unique within group); falls back to useId when not provided */
        maxSize: n.maxSize,
        minSize: n.minSize
      },
      id: S,
      idIsFromProps: n.id !== void 0,
      order: n.order
    }));
    ee(() => P.value.constraints, (E, $) => {
      (E.collapsedSize !== $.collapsedSize || E.collapsible !== $.collapsible || E.maxSize !== $.maxSize || E.minSize !== $.minSize) && v(P.value, E);
    }, { deep: !0 }), se(() => {
      const E = P.value;
      y(E), Te(() => {
        m(E);
      });
    });
    const D = T(() => d(P.value, n.defaultSize)), g = T(() => c(P.value)), x = T(() => !g.value);
    return t({
      /** If panel is `collapsible`, collapse it fully. */
      collapse: () => {
        r(P.value);
      },
      /** If panel is currently collapsed, expand it to its most recent size. */
      expand: () => {
        i(P.value);
      },
      /** Gets the current size of the panel as a percentage (1 - 100). */
      getSize() {
        return u(P.value);
      },
      /** Resize panel to the specified percentage (1 - 100). */
      resize: (E) => {
        f(P.value, E);
      },
      /** Returns `true` if the panel is currently collapsed */
      isCollapsed: g,
      /** Returns `true` if the panel is currently not collapsed */
      isExpanded: x
    }), (E, $) => (b(), _(o(A), {
      id: o(S),
      style: Ce(D.value),
      "data-panel": "",
      "data-panel-collapsible": E.collapsible || void 0,
      "data-panel-group-id": o(p),
      "data-panel-id": o(S),
      "data-panel-size": Number.parseFloat(`${D.value.flexGrow}`).toFixed(1),
      "data-state": E.collapsible ? g.value ? "collapsed" : "expanded" : void 0
    }, {
      default: h(() => [
        C(E.$slots, "default", {
          isCollapsed: g.value,
          isExpanded: x.value
        })
      ]),
      _: 3
    }, 8, ["id", "style", "data-panel-collapsible", "data-panel-group-id", "data-panel-id", "data-panel-size", "data-state"]));
  }
});
function Ff({
  disabled: a,
  handleId: t,
  resizeHandler: e,
  panelGroupElement: n
}) {
  ve((l) => {
    const s = n.value;
    if (a.value || e.value === null || s === null)
      return;
    const r = Ya(t, s);
    if (r == null)
      return;
    const i = (u) => {
      var d;
      if (!u.defaultPrevented)
        switch (u.key) {
          case "ArrowDown":
          case "ArrowLeft":
          case "ArrowRight":
          case "ArrowUp":
          case "End":
          case "Home": {
            u.preventDefault(), (d = e.value) == null || d.call(e, u);
            break;
          }
          case "F6": {
            u.preventDefault();
            const c = r.getAttribute("data-panel-group-id");
            ie(c);
            const f = na(
              c,
              s
            ), p = Ps(
              c,
              t,
              s
            );
            ie(p !== null);
            const v = u.shiftKey ? p > 0 ? p - 1 : f.length - 1 : p + 1 < f.length ? p + 1 : 0;
            f[v].focus();
            break;
          }
        }
    };
    r.addEventListener("keydown", i), l(() => {
      r.removeEventListener("keydown", i);
    });
  });
}
const Gh = /* @__PURE__ */ w({
  __name: "SplitterResizeHandle",
  props: {
    id: {},
    hitAreaMargins: {},
    tabindex: { default: 0 },
    disabled: { type: Boolean },
    asChild: { type: Boolean },
    as: {}
  },
  emits: ["dragging"],
  setup(a, { emit: t }) {
    const e = a, n = t, { forwardRef: l, currentElement: s } = I(), { disabled: r } = le(e), i = Ts();
    if (i === null)
      throw new Error(
        "PanelResizeHandle components must be rendered within a PanelGroup container"
      );
    const {
      direction: u,
      groupId: d,
      registerResizeHandle: c,
      startDragging: f,
      stopDragging: p,
      panelGroupElement: v
    } = i, y = me(e.id, "radix-vue-splitter-resize-handle"), m = B("inactive"), S = B(!1), P = B(null);
    return ee(r, () => {
      la && (r.value ? P.value = null : P.value = c(y));
    }, { immediate: !0 }), ve((D) => {
      var E, $;
      if (r.value || P.value === null)
        return;
      const g = s.value;
      if (!g)
        return;
      ie(g);
      const x = (R, M, V) => {
        var O;
        if (M)
          switch (R) {
            case "down": {
              m.value = "drag", f(y, V), n("dragging", !0);
              break;
            }
            case "move": {
              m.value !== "drag" && (m.value = "hover"), (O = P.value) == null || O.call(P, V);
              break;
            }
            case "up": {
              m.value = "hover", p(), n("dragging", !1);
              break;
            }
          }
        else
          m.value = "inactive";
      };
      D(Pf(
        y,
        g,
        u,
        {
          // Coarse inputs (e.g. finger/touch)
          coarse: ((E = e.hitAreaMargins) == null ? void 0 : E.coarse) ?? 15,
          // Fine inputs (e.g. mouse)
          fine: (($ = e.hitAreaMargins) == null ? void 0 : $.fine) ?? 5
        },
        x
      ));
    }), Ff({
      disabled: r,
      resizeHandler: P,
      handleId: y,
      panelGroupElement: v
    }), (D, g) => (b(), _(o(A), {
      id: o(y),
      ref: o(l),
      style: {
        touchAction: "none",
        userSelect: "none"
      },
      role: "separator",
      "data-resize-handle": "",
      tabindex: D.tabindex,
      "data-state": m.value,
      "data-disabled": o(r) ? "" : void 0,
      "data-orientation": o(u),
      "data-panel-group-id": o(d),
      "data-resize-handle-active": m.value === "drag" ? "pointer" : S.value ? "keyboard" : void 0,
      "data-resize-handle-state": m.value,
      "data-panel-resize-handle-enabled": !o(r),
      "data-panel-resize-handle-id": o(y),
      onBlur: g[0] || (g[0] = (x) => S.value = !1),
      onFocus: g[1] || (g[1] = (x) => S.value = !1)
    }, {
      default: h(() => [
        C(D.$slots, "default")
      ]),
      _: 3
    }, 8, ["id", "tabindex", "data-state", "data-disabled", "data-orientation", "data-panel-group-id", "data-resize-handle-active", "data-resize-handle-state", "data-panel-resize-handle-enabled", "data-panel-resize-handle-id"]));
  }
}), Lf = ["name", "disabled", "required", "value", "checked", "data-state", "data-disabled"], [Nf, zf] = Q("SwitchRoot"), qh = /* @__PURE__ */ w({
  __name: "SwitchRoot",
  props: {
    defaultChecked: { type: Boolean },
    checked: { type: Boolean, default: void 0 },
    disabled: { type: Boolean },
    required: { type: Boolean },
    name: {},
    id: {},
    value: { default: "on" },
    asChild: { type: Boolean },
    as: { default: "button" }
  },
  emits: ["update:checked"],
  setup(a, { emit: t }) {
    const e = a, n = t, { disabled: l } = le(e), s = ne(e, "checked", n, {
      defaultValue: e.defaultChecked,
      passive: e.checked === void 0
    });
    function r() {
      l.value || (s.value = !s.value);
    }
    const { forwardRef: i, currentElement: u } = I(), d = ct(u), c = T(() => {
      var f;
      return e.id && u.value ? (f = document.querySelector(`[for="${e.id}"]`)) == null ? void 0 : f.innerText : void 0;
    });
    return zf({
      checked: s,
      toggleCheck: r,
      disabled: l
    }), (f, p) => (b(), fe(Pe, null, [
      G(o(A), k(f.$attrs, {
        id: f.id,
        ref: o(i),
        role: "switch",
        type: f.as === "button" ? "button" : void 0,
        value: f.value,
        "aria-label": f.$attrs["aria-label"] || c.value,
        "aria-checked": o(s),
        "aria-required": f.required,
        "data-state": o(s) ? "checked" : "unchecked",
        "data-disabled": o(l) ? "" : void 0,
        "as-child": f.asChild,
        as: f.as,
        disabled: o(l),
        onClick: r,
        onKeydown: he(ge(r, ["prevent"]), ["enter"])
      }), {
        default: h(() => [
          C(f.$slots, "default")
        ]),
        _: 3
      }, 16, ["id", "type", "value", "aria-label", "aria-checked", "aria-required", "data-state", "data-disabled", "as-child", "as", "disabled", "onKeydown"]),
      o(d) ? (b(), fe("input", {
        key: 0,
        type: "checkbox",
        name: f.name,
        tabindex: "-1",
        "aria-hidden": "",
        disabled: o(l),
        required: f.required,
        value: f.value,
        checked: !!o(s),
        "data-state": o(s) ? "checked" : "unchecked",
        "data-disabled": o(l) ? "" : void 0,
        style: Ce({
          transform: "translateX(-100%)",
          position: "absolute",
          pointerEvents: "none",
          opacity: 0,
          margin: 0
        })
      }, null, 12, Lf)) : ue("", !0)
    ], 64));
  }
}), Yh = /* @__PURE__ */ w({
  __name: "SwitchThumb",
  props: {
    asChild: { type: Boolean },
    as: { default: "span" }
  },
  setup(a) {
    const t = Nf();
    return I(), (e, n) => {
      var l;
      return b(), _(o(A), {
        "data-state": (l = o(t).checked) != null && l.value ? "checked" : "unchecked",
        "data-disabled": o(t).disabled.value ? "" : void 0,
        "as-child": e.asChild,
        as: e.as
      }, {
        default: h(() => [
          C(e.$slots, "default")
        ]),
        _: 3
      }, 8, ["data-state", "data-disabled", "as-child", "as"]);
    };
  }
}), [Xa, Kf] = Q("TabsRoot"), Xh = /* @__PURE__ */ w({
  __name: "TabsRoot",
  props: {
    defaultValue: {},
    orientation: { default: "horizontal" },
    dir: {},
    activationMode: { default: "automatic" },
    modelValue: {},
    asChild: { type: Boolean },
    as: {}
  },
  emits: ["update:modelValue"],
  setup(a, { emit: t }) {
    const e = a, n = t, { orientation: l, dir: s } = le(e), r = be(s);
    I();
    const i = ne(e, "modelValue", n, {
      defaultValue: e.defaultValue,
      passive: e.modelValue === void 0
    }), u = B();
    return Kf({
      modelValue: i,
      changeModelValue: (d) => {
        i.value = d;
      },
      orientation: l,
      dir: r,
      activationMode: e.activationMode,
      baseId: me(void 0, "radix-vue-tabs"),
      tabsList: u
    }), (d, c) => (b(), _(o(A), {
      dir: o(r),
      "data-orientation": o(l),
      "as-child": d.asChild,
      as: d.as
    }, {
      default: h(() => [
        C(d.$slots, "default")
      ]),
      _: 3
    }, 8, ["dir", "data-orientation", "as-child", "as"]));
  }
}), Zh = /* @__PURE__ */ w({
  __name: "TabsList",
  props: {
    loop: { type: Boolean, default: !0 },
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a, { loop: e } = le(t), { forwardRef: n, currentElement: l } = I(), s = Xa();
    return s.tabsList = l, (r, i) => (b(), _(o(zt), {
      "as-child": "",
      orientation: o(s).orientation.value,
      dir: o(s).dir.value,
      loop: o(e)
    }, {
      default: h(() => [
        G(o(A), {
          ref: o(n),
          role: "tablist",
          "as-child": r.asChild,
          as: r.as,
          "aria-orientation": o(s).orientation.value
        }, {
          default: h(() => [
            C(r.$slots, "default")
          ]),
          _: 3
        }, 8, ["as-child", "as", "aria-orientation"])
      ]),
      _: 3
    }, 8, ["orientation", "dir", "loop"]));
  }
});
function Is(a, t) {
  return `${a}-trigger-${t}`;
}
function Rs(a, t) {
  return `${a}-content-${t}`;
}
const Jh = /* @__PURE__ */ w({
  __name: "TabsContent",
  props: {
    value: {},
    forceMount: { type: Boolean },
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a, { forwardRef: e } = I(), n = Xa(), l = T(() => Is(n.baseId, t.value)), s = T(() => Rs(n.baseId, t.value)), r = T(() => t.value === n.modelValue.value), i = B(r.value);
    return se(() => {
      requestAnimationFrame(() => {
        i.value = !1;
      });
    }), (u, d) => (b(), _(o(Ee), {
      present: r.value,
      "force-mount": ""
    }, {
      default: h(({ present: c }) => [
        G(o(A), {
          id: s.value,
          ref: o(e),
          "as-child": u.asChild,
          as: u.as,
          role: "tabpanel",
          "data-state": r.value ? "active" : "inactive",
          "data-orientation": o(n).orientation.value,
          "aria-labelledby": l.value,
          hidden: !c.value,
          tabindex: "0",
          style: Ce({
            animationDuration: i.value ? "0s" : void 0
          })
        }, {
          default: h(() => [
            u.forceMount || r.value ? C(u.$slots, "default", { key: 0 }) : ue("", !0)
          ]),
          _: 2
        }, 1032, ["id", "as-child", "as", "data-state", "data-orientation", "aria-labelledby", "hidden", "style"])
      ]),
      _: 3
    }, 8, ["present"]));
  }
}), Qh = /* @__PURE__ */ w({
  __name: "TabsTrigger",
  props: {
    value: {},
    disabled: { type: Boolean, default: !1 },
    asChild: { type: Boolean },
    as: { default: "button" }
  },
  setup(a) {
    const t = a, { forwardRef: e } = I(), n = Xa(), l = T(() => Is(n.baseId, t.value)), s = T(() => Rs(n.baseId, t.value)), r = T(() => t.value === n.modelValue.value);
    return (i, u) => (b(), _(o(Kt), {
      "as-child": "",
      focusable: !i.disabled,
      active: r.value
    }, {
      default: h(() => [
        G(o(A), {
          id: l.value,
          ref: o(e),
          role: "tab",
          type: i.as === "button" ? "button" : void 0,
          as: i.as,
          "as-child": i.asChild,
          "aria-selected": r.value ? "true" : "false",
          "aria-controls": s.value,
          "data-state": r.value ? "active" : "inactive",
          disabled: i.disabled,
          "data-disabled": i.disabled ? "" : void 0,
          "data-orientation": o(n).orientation.value,
          onMousedown: u[0] || (u[0] = ge((d) => {
            !i.disabled && d.ctrlKey === !1 ? o(n).changeModelValue(i.value) : d.preventDefault();
          }, ["left"])),
          onKeydown: u[1] || (u[1] = he((d) => o(n).changeModelValue(i.value), ["enter", "space"])),
          onFocus: u[2] || (u[2] = () => {
            const d = o(n).activationMode !== "manual";
            !r.value && !i.disabled && d && o(n).changeModelValue(i.value);
          })
        }, {
          default: h(() => [
            C(i.$slots, "default")
          ]),
          _: 3
        }, 8, ["id", "type", "as", "as-child", "aria-selected", "aria-controls", "data-state", "disabled", "data-disabled", "data-orientation"])
      ]),
      _: 3
    }, 8, ["focusable", "active"]));
  }
}), ey = /* @__PURE__ */ w({
  __name: "TabsIndicator",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a, e = Xa();
    I();
    const n = B(), l = B({
      size: null,
      position: null
    });
    ee(() => e.modelValue.value, async (r) => {
      await re(), s();
    }, { immediate: !0 }), Ge([e.tabsList, n], s);
    function s() {
      var r;
      n.value = (r = e.tabsList.value) == null ? void 0 : r.querySelector('[role="tab"][data-state="active"]'), n.value && (e.orientation.value === "horizontal" ? l.value = {
        size: n.value.offsetWidth,
        position: n.value.offsetLeft
      } : l.value = {
        size: n.value.offsetHeight,
        position: n.value.offsetTop
      });
    }
    return (r, i) => typeof l.value.size == "number" ? (b(), _(o(A), k({ key: 0 }, t, {
      style: {
        "--radix-tabs-indicator-size": `${l.value.size}px`,
        "--radix-tabs-indicator-position": `${l.value.position}px`
      }
    }), {
      default: h(() => [
        C(r.$slots, "default")
      ]),
      _: 3
    }, 16, ["style"])) : ue("", !0);
  }
}), [Za, Hf] = Q("TagsInputRoot"), ty = /* @__PURE__ */ w({
  __name: "TagsInputRoot",
  props: {
    modelValue: {},
    defaultValue: { default: () => [] },
    addOnPaste: { type: Boolean },
    addOnTab: { type: Boolean },
    addOnBlur: { type: Boolean },
    duplicate: { type: Boolean },
    disabled: { type: Boolean },
    delimiter: { default: "," },
    dir: {},
    max: { default: 0 },
    required: { type: Boolean },
    name: {},
    id: {},
    asChild: { type: Boolean },
    as: {}
  },
  emits: ["update:modelValue", "invalid"],
  setup(a, { emit: t }) {
    const e = a, n = t, { addOnPaste: l, disabled: s, delimiter: r, max: i, id: u, dir: d, addOnBlur: c, addOnTab: f } = le(e), p = be(d), v = ne(e, "modelValue", n, {
      defaultValue: e.defaultValue,
      passive: !0,
      deep: !0
    }), { forwardRef: y, currentElement: m } = I(), { focused: S } = kr(m), P = ct(m), { getItems: D } = Oa(), g = B(), x = B(!1);
    return Hf({
      modelValue: v,
      onAddValue: (E) => {
        if (v.value.length >= i.value && i.value)
          return n("invalid", E), !1;
        if (e.duplicate)
          return v.value.push(E), !0;
        if (v.value.includes(E))
          x.value = !0;
        else
          return v.value.push(E), !0;
        return n("invalid", E), !1;
      },
      onRemoveValue: (E) => {
        E !== -1 && v.value.splice(E, 1);
      },
      onInputKeydown: (E) => {
        const $ = E.target, R = D().map((V) => V.ref).filter((V) => V.dataset.disabled !== "");
        if (!R.length)
          return;
        const M = R.at(-1);
        switch (E.key) {
          case "Delete":
          case "Backspace": {
            if ($.selectionStart !== 0 || $.selectionEnd !== 0)
              break;
            if (g.value) {
              const V = R.findIndex((O) => O === g.value);
              v.value.splice(V, 1), g.value = g.value === M ? R.at(V - 1) : R.at(V + 1), E.preventDefault();
            } else
              E.key === "Backspace" && (g.value = M, E.preventDefault());
            break;
          }
          case "Home":
          case "End":
          case "ArrowRight":
          case "ArrowLeft": {
            const V = E.key === "ArrowRight" && p.value === "ltr" || E.key === "ArrowLeft" && p.value === "rtl", O = !V;
            if ($.selectionStart !== 0 || $.selectionEnd !== 0)
              break;
            if (O && !g.value)
              g.value = M, E.preventDefault();
            else if (V && M && g.value === M)
              g.value = void 0, E.preventDefault();
            else if (g.value) {
              const L = Vt(E, g.value, void 0, {
                itemsArray: R,
                loop: !1,
                dir: p.value
              });
              L && (g.value = L), E.preventDefault();
            }
            break;
          }
          case "ArrowUp":
          case "ArrowDown": {
            g.value && E.preventDefault();
            break;
          }
          default:
            g.value = void 0;
        }
      },
      selectedElement: g,
      isInvalidInput: x,
      addOnPaste: l,
      addOnBlur: c,
      addOnTab: f,
      dir: p,
      disabled: s,
      delimiter: r,
      max: i,
      id: u
    }), (E, $) => (b(), _(o(ka), null, {
      default: h(() => [
        G(o(A), {
          ref: o(y),
          dir: o(p),
          as: E.as,
          "as-child": E.asChild,
          "data-invalid": x.value ? "" : void 0,
          "data-disabled": o(s) ? "" : void 0,
          "data-focused": o(S) ? "" : void 0
        }, {
          default: h(() => [
            C(E.$slots, "default", { modelValue: o(v) }),
            o(P) && E.name ? (b(), _(o(zn), {
              key: 0,
              name: E.name,
              value: o(v),
              required: E.required,
              disabled: o(s)
            }, null, 8, ["name", "value", "required", "disabled"])) : ue("", !0)
          ]),
          _: 3
        }, 8, ["dir", "as", "as-child", "data-invalid", "data-disabled", "data-focused"])
      ]),
      _: 3
    }));
  }
}), ay = /* @__PURE__ */ w({
  __name: "TagsInputInput",
  props: {
    placeholder: {},
    autoFocus: { type: Boolean },
    maxLength: {},
    asChild: { type: Boolean },
    as: { default: "input" }
  },
  setup(a) {
    const t = a, e = Za(), { forwardRef: n, currentElement: l } = I();
    function s(c) {
      if (!e.addOnBlur.value)
        return;
      const f = c.target;
      if (!f.value)
        return;
      e.onAddValue(f.value) && (f.value = "");
    }
    function r(c) {
      e.addOnTab.value && i(c);
    }
    async function i(c) {
      if (await re(), c.defaultPrevented)
        return;
      const f = c.target;
      if (!f.value)
        return;
      e.onAddValue(f.value) && (f.value = ""), c.preventDefault();
    }
    function u(c) {
      e.isInvalidInput.value = !1;
      const f = e.delimiter.value;
      if (f === c.data) {
        const p = c.target;
        p.value = p.value.replaceAll(f, ""), e.onAddValue(p.value) && (p.value = "");
      }
    }
    function d(c) {
      if (e.addOnPaste.value) {
        c.preventDefault();
        const f = c.clipboardData;
        if (!f)
          return;
        const p = f.getData("text");
        e.delimiter.value ? p.split(e.delimiter.value).forEach((y) => {
          e.onAddValue(y);
        }) : e.onAddValue(p);
      }
    }
    return se(() => {
      const c = l.value.nodeName === "INPUT" ? l.value : l.value.querySelector("input");
      c && setTimeout(() => {
        t.autoFocus && (c == null || c.focus());
      }, 1);
    }), (c, f) => {
      var p;
      return b(), _(o(A), {
        id: (p = o(e).id) == null ? void 0 : p.value,
        ref: o(n),
        type: "text",
        autocomplete: "off",
        autocorrect: "off",
        autocapitalize: "off",
        as: c.as,
        "as-child": c.asChild,
        maxlength: c.maxLength,
        placeholder: c.placeholder,
        disabled: o(e).disabled.value,
        "data-invalid": o(e).isInvalidInput.value ? "" : void 0,
        onInput: u,
        onKeydown: [
          he(i, ["enter"]),
          he(r, ["tab"]),
          o(e).onInputKeydown
        ],
        onBlur: s,
        onPaste: d
      }, {
        default: h(() => [
          C(c.$slots, "default")
        ]),
        _: 3
      }, 8, ["id", "as", "as-child", "maxlength", "placeholder", "disabled", "data-invalid", "onKeydown"]);
    };
  }
}), [As, Wf] = Q("TagsInputItem"), ny = /* @__PURE__ */ w({
  __name: "TagsInputItem",
  props: {
    value: {},
    disabled: { type: Boolean },
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a, { value: e } = le(t), n = Za(), { forwardRef: l, currentElement: s } = I(), r = T(() => n.selectedElement.value === s.value), i = T(() => t.disabled || n.disabled.value), u = Wf({
      value: e,
      isSelected: r,
      disabled: i,
      textId: ""
    });
    return (d, c) => (b(), _(o(Ma), null, {
      default: h(() => [
        G(o(A), {
          ref: o(l),
          as: d.as,
          "as-child": d.asChild,
          "aria-labelledby": o(u).textId,
          "aria-current": r.value,
          "data-disabled": i.value ? "" : void 0,
          "data-state": r.value ? "active" : "inactive"
        }, {
          default: h(() => [
            C(d.$slots, "default")
          ]),
          _: 3
        }, 8, ["as", "as-child", "aria-labelledby", "aria-current", "data-disabled", "data-state"])
      ]),
      _: 3
    }));
  }
}), oy = /* @__PURE__ */ w({
  __name: "TagsInputItemText",
  props: {
    asChild: { type: Boolean },
    as: { default: "span" }
  },
  setup(a) {
    const t = a, e = As();
    return I(), e.textId || (e.textId = me(void 0, "radix-vue-tags-input-item-text")), (n, l) => (b(), _(o(A), k(t, {
      id: o(e).textId
    }), {
      default: h(() => [
        C(n.$slots, "default", {}, () => [
          ye(ke(o(e).value.value), 1)
        ])
      ]),
      _: 3
    }, 16, ["id"]));
  }
}), ly = /* @__PURE__ */ w({
  __name: "TagsInputItemDelete",
  props: {
    asChild: { type: Boolean },
    as: { default: "button" }
  },
  setup(a) {
    const t = a;
    I();
    const e = Za(), n = As(), l = T(() => {
      var r;
      return ((r = n.disabled) == null ? void 0 : r.value) || e.disabled.value;
    });
    function s() {
      if (l.value)
        return;
      const r = e.modelValue.value.findIndex((i) => i === n.value.value);
      e.onRemoveValue(r);
    }
    return (r, i) => (b(), _(o(A), k({ tabindex: "-1" }, t, {
      "aria-labelledby": o(n).textId,
      "aria-current": o(n).isSelected.value,
      "data-state": o(n).isSelected.value ? "active" : "inactive",
      "data-disabled": l.value ? "" : void 0,
      type: r.as === "button" ? "button" : void 0,
      onClick: s
    }), {
      default: h(() => [
        C(r.$slots, "default")
      ]),
      _: 3
    }, 16, ["aria-labelledby", "aria-current", "data-state", "data-disabled", "type"]));
  }
}), sy = /* @__PURE__ */ w({
  __name: "TagsInputClear",
  props: {
    asChild: { type: Boolean },
    as: { default: "button" }
  },
  setup(a) {
    const t = a;
    I();
    const e = Za();
    function n() {
      e.disabled.value || (e.modelValue.value = []);
    }
    return (l, s) => (b(), _(o(A), k(t, {
      type: l.as === "button" ? "button" : void 0,
      "data-disabled": o(e).disabled.value ? "" : void 0,
      onClick: n
    }), {
      default: h(() => [
        C(l.$slots, "default")
      ]),
      _: 3
    }, 16, ["type", "data-disabled"]));
  }
}), [Ja, jf] = Q("ToastProvider"), ry = /* @__PURE__ */ w({
  __name: "ToastProvider",
  props: {
    label: { default: "Notification" },
    duration: { default: 5e3 },
    swipeDirection: { default: "right" },
    swipeThreshold: { default: 50 }
  },
  setup(a) {
    const t = a, { label: e, duration: n, swipeDirection: l, swipeThreshold: s } = le(t), r = B(), i = B(0), u = B(!1), d = B(!1);
    if (t.label && typeof t.label == "string" && !t.label.trim()) {
      const c = "Invalid prop `label` supplied to `ToastProvider`. Expected non-empty `string`.";
      throw new Error(c);
    }
    return jf({
      label: e,
      duration: n,
      swipeDirection: l,
      swipeThreshold: s,
      toastCount: i,
      viewport: r,
      onViewportChange(c) {
        r.value = c;
      },
      onToastAdd() {
        i.value++;
      },
      onToastRemove() {
        i.value--;
      },
      isFocusedToastEscapeKeyDownRef: u,
      isClosePausedRef: d
    }), (c, f) => C(c.$slots, "default");
  }
}), Uf = "toast.swipeStart", Gf = "toast.swipeMove", qf = "toast.swipeCancel", Yf = "toast.swipeEnd", Cn = "toast.viewportPause", wn = "toast.viewportResume";
function ya(a, t, e) {
  const n = e.originalEvent.currentTarget, l = new CustomEvent(a, {
    bubbles: !1,
    cancelable: !0,
    detail: e
  });
  t && n.addEventListener(a, t, { once: !0 }), n.dispatchEvent(l);
}
function Vo(a, t, e = 0) {
  const n = Math.abs(a.x), l = Math.abs(a.y), s = n > l;
  return t === "left" || t === "right" ? s && n > e : !s && l > e;
}
function Xf(a) {
  return a.nodeType === a.ELEMENT_NODE;
}
function Os(a) {
  const t = [];
  return Array.from(a.childNodes).forEach((n) => {
    if (n.nodeType === n.TEXT_NODE && n.textContent && t.push(n.textContent), Xf(n)) {
      const l = n.ariaHidden || n.hidden || n.style.display === "none", s = n.dataset.radixToastAnnounceExclude === "";
      if (!l)
        if (s) {
          const r = n.dataset.radixToastAnnounceAlt;
          r && t.push(r);
        } else
          t.push(...Os(n));
    }
  }), t;
}
const Zf = /* @__PURE__ */ w({
  __name: "ToastAnnounce",
  setup(a) {
    const t = Ja(), e = $r(1e3), n = B(!1);
    return ll(() => {
      n.value = !0;
    }), (l, s) => o(e) || n.value ? (b(), _(o(Nt), { key: 0 }, {
      default: h(() => [
        ye(ke(o(t).label.value) + " ", 1),
        C(l.$slots, "default")
      ]),
      _: 3
    })) : ue("", !0);
  }
}), [Jf, Qf] = Q("ToastRoot"), ep = /* @__PURE__ */ w({
  inheritAttrs: !1,
  __name: "ToastRootImpl",
  props: {
    type: {},
    open: { type: Boolean, default: !1 },
    duration: {},
    asChild: { type: Boolean },
    as: { default: "li" }
  },
  emits: ["close", "escapeKeyDown", "pause", "resume", "swipeStart", "swipeMove", "swipeCancel", "swipeEnd"],
  setup(a, { emit: t }) {
    const e = a, n = t, { forwardRef: l, currentElement: s } = I(), r = Ja(), i = B(null), u = B(null), d = T(() => e.duration || r.duration.value), c = B(0), f = B(d.value), p = B(0), v = B(d.value), y = ll(() => {
      const D = (/* @__PURE__ */ new Date()).getTime() - c.value;
      v.value = Math.max(f.value - D, 0);
    }, { fpsLimit: 60 });
    function m(D) {
      !D || D === Number.POSITIVE_INFINITY || (window.clearTimeout(p.value), c.value = (/* @__PURE__ */ new Date()).getTime(), p.value = window.setTimeout(S, D));
    }
    function S() {
      var g, x;
      ((g = s.value) == null ? void 0 : g.contains(document.activeElement)) && ((x = r.viewport.value) == null || x.focus()), r.isClosePausedRef.value = !1, n("close");
    }
    const P = T(() => s.value ? Os(s.value) : null);
    if (e.type && !["foreground", "background"].includes(e.type)) {
      const D = "Invalid prop `type` supplied to `Toast`. Expected `foreground | background`.";
      throw new Error(D);
    }
    return ve((D) => {
      const g = r.viewport.value;
      if (g) {
        const x = () => {
          m(f.value), y.resume(), n("resume");
        }, E = () => {
          const $ = (/* @__PURE__ */ new Date()).getTime() - c.value;
          f.value = f.value - $, window.clearTimeout(p.value), y.pause(), n("pause");
        };
        return g.addEventListener(Cn, E), g.addEventListener(wn, x), () => {
          g.removeEventListener(Cn, E), g.removeEventListener(wn, x);
        };
      }
    }), ee(() => [e.open, d.value], () => {
      f.value = d.value, e.open && !r.isClosePausedRef.value && m(d.value);
    }, { immediate: !0 }), In("Escape", (D) => {
      n("escapeKeyDown", D), D.defaultPrevented || (r.isFocusedToastEscapeKeyDownRef.value = !0, S());
    }), se(() => {
      r.onToastAdd();
    }), Te(() => {
      r.onToastRemove();
    }), Qf({ onClose: S }), (D, g) => (b(), fe(Pe, null, [
      P.value ? (b(), _(Zf, {
        key: 0,
        role: "status",
        "aria-live": D.type === "foreground" ? "assertive" : "polite",
        "aria-atomic": ""
      }, {
        default: h(() => [
          ye(ke(P.value), 1)
        ]),
        _: 1
      }, 8, ["aria-live"])) : ue("", !0),
      (b(), _(At, {
        to: o(r).viewport.value
      }, [
        G(o(A), k({
          ref: o(l),
          role: "status",
          "aria-live": "off",
          "aria-atomic": "",
          tabindex: "0",
          "data-radix-vue-collection-item": ""
        }, D.$attrs, {
          as: D.as,
          "as-child": D.asChild,
          "data-state": D.open ? "open" : "closed",
          "data-swipe-direction": o(r).swipeDirection.value,
          style: { userSelect: "none", touchAction: "none" },
          onPointerdown: g[0] || (g[0] = ge((x) => {
            i.value = { x: x.clientX, y: x.clientY };
          }, ["left"])),
          onPointermove: g[1] || (g[1] = (x) => {
            if (!i.value)
              return;
            const E = x.clientX - i.value.x, $ = x.clientY - i.value.y, R = !!u.value, M = ["left", "right"].includes(o(r).swipeDirection.value), V = ["left", "up"].includes(o(r).swipeDirection.value) ? Math.min : Math.max, O = M ? V(0, E) : 0, L = M ? 0 : V(0, $), j = x.pointerType === "touch" ? 10 : 2, J = { x: O, y: L }, W = { originalEvent: x, delta: J };
            R ? (u.value = J, o(ya)(o(Gf), (X) => n("swipeMove", X), W)) : o(Vo)(J, o(r).swipeDirection.value, j) ? (u.value = J, o(ya)(o(Uf), (X) => n("swipeStart", X), W), x.target.setPointerCapture(x.pointerId)) : (Math.abs(E) > j || Math.abs($) > j) && (i.value = null);
          }),
          onPointerup: g[2] || (g[2] = (x) => {
            const E = u.value, $ = x.target;
            if ($.hasPointerCapture(x.pointerId) && $.releasePointerCapture(x.pointerId), u.value = null, i.value = null, E) {
              const R = x.currentTarget, M = { originalEvent: x, delta: E };
              o(Vo)(E, o(r).swipeDirection.value, o(r).swipeThreshold.value) ? o(ya)(o(Yf), (V) => n("swipeEnd", V), M) : o(ya)(o(qf), (V) => n("swipeCancel", V), M), R == null || R.addEventListener("click", (V) => V.preventDefault(), {
                once: !0
              });
            }
          })
        }), {
          default: h(() => [
            C(D.$slots, "default", { remaining: v.value })
          ]),
          _: 3
        }, 16, ["as", "as-child", "data-state", "data-swipe-direction"])
      ], 8, ["to"]))
    ], 64));
  }
}), iy = /* @__PURE__ */ w({
  __name: "ToastRoot",
  props: {
    defaultOpen: { type: Boolean, default: !0 },
    forceMount: { type: Boolean },
    type: { default: "foreground" },
    open: { type: Boolean, default: void 0 },
    duration: {},
    asChild: { type: Boolean },
    as: { default: "li" }
  },
  emits: ["escapeKeyDown", "pause", "resume", "swipeStart", "swipeMove", "swipeCancel", "swipeEnd", "update:open"],
  setup(a, { emit: t }) {
    const e = a, n = t, { forwardRef: l } = I(), s = ne(e, "open", n, {
      defaultValue: e.defaultOpen,
      passive: e.open === void 0
    });
    return (r, i) => (b(), _(o(Ee), {
      present: r.forceMount || o(s)
    }, {
      default: h(() => [
        G(ep, k({
          ref: o(l),
          open: o(s),
          type: r.type,
          as: r.as,
          "as-child": r.asChild,
          duration: r.duration
        }, r.$attrs, {
          onClose: i[0] || (i[0] = (u) => s.value = !1),
          onPause: i[1] || (i[1] = (u) => n("pause")),
          onResume: i[2] || (i[2] = (u) => n("resume")),
          onEscapeKeyDown: i[3] || (i[3] = (u) => n("escapeKeyDown", u)),
          onSwipeStart: i[4] || (i[4] = (u) => {
            n("swipeStart", u), u.currentTarget.setAttribute("data-swipe", "start");
          }),
          onSwipeMove: i[5] || (i[5] = (u) => {
            const { x: d, y: c } = u.detail.delta, f = u.currentTarget;
            f.setAttribute("data-swipe", "move"), f.style.setProperty("--radix-toast-swipe-move-x", `${d}px`), f.style.setProperty("--radix-toast-swipe-move-y", `${c}px`);
          }),
          onSwipeCancel: i[6] || (i[6] = (u) => {
            const d = u.currentTarget;
            d.setAttribute("data-swipe", "cancel"), d.style.removeProperty("--radix-toast-swipe-move-x"), d.style.removeProperty("--radix-toast-swipe-move-y"), d.style.removeProperty("--radix-toast-swipe-end-x"), d.style.removeProperty("--radix-toast-swipe-end-y");
          }),
          onSwipeEnd: i[7] || (i[7] = (u) => {
            const { x: d, y: c } = u.detail.delta, f = u.currentTarget;
            f.setAttribute("data-swipe", "end"), f.style.removeProperty("--radix-toast-swipe-move-x"), f.style.removeProperty("--radix-toast-swipe-move-y"), f.style.setProperty("--radix-toast-swipe-end-x", `${d}px`), f.style.setProperty("--radix-toast-swipe-end-y", `${c}px`), s.value = !1;
          })
        }), {
          default: h(({ remaining: u }) => [
            C(r.$slots, "default", { remaining: u })
          ]),
          _: 3
        }, 16, ["open", "type", "as", "as-child", "duration"])
      ]),
      _: 3
    }, 8, ["present"]));
  }
}), ks = /* @__PURE__ */ w({
  __name: "ToastAnnounceExclude",
  props: {
    altText: {},
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    return (t, e) => (b(), _(o(A), {
      as: t.as,
      "as-child": t.asChild,
      "data-radix-toast-announce-exclude": "",
      "data-radix-toast-announce-alt": t.altText || void 0
    }, {
      default: h(() => [
        C(t.$slots, "default")
      ]),
      _: 3
    }, 8, ["as", "as-child", "data-radix-toast-announce-alt"]));
  }
}), tp = /* @__PURE__ */ w({
  __name: "ToastClose",
  props: {
    asChild: { type: Boolean },
    as: { default: "button" }
  },
  setup(a) {
    const t = a, e = Jf(), { forwardRef: n } = I();
    return (l, s) => (b(), _(ks, { "as-child": "" }, {
      default: h(() => [
        G(o(A), k(t, {
          ref: o(n),
          type: l.as === "button" ? "button" : void 0,
          onClick: s[0] || (s[0] = (r) => o(e).onClose())
        }), {
          default: h(() => [
            C(l.$slots, "default")
          ]),
          _: 3
        }, 16, ["type"])
      ]),
      _: 3
    }));
  }
}), uy = /* @__PURE__ */ w({
  __name: "ToastAction",
  props: {
    altText: {},
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    if (!a.altText)
      throw new Error("Missing prop `altText` expected on `ToastAction`");
    const { forwardRef: e } = I();
    return (n, l) => n.altText ? (b(), _(ks, {
      key: 0,
      "alt-text": n.altText,
      "as-child": ""
    }, {
      default: h(() => [
        G(tp, {
          ref: o(e),
          as: n.as,
          "as-child": n.asChild
        }, {
          default: h(() => [
            C(n.$slots, "default")
          ]),
          _: 3
        }, 8, ["as", "as-child"])
      ]),
      _: 3
    }, 8, ["alt-text"])) : ue("", !0);
  }
}), Fo = /* @__PURE__ */ w({
  __name: "FocusProxy",
  emits: ["focusFromOutsideViewport"],
  setup(a, { emit: t }) {
    const e = t, n = Ja();
    return (l, s) => (b(), _(o(Nt), {
      "aria-hidden": "",
      tabindex: "0",
      style: { position: "fixed" },
      onFocus: s[0] || (s[0] = (r) => {
        var d;
        const i = r.relatedTarget;
        !((d = o(n).viewport.value) != null && d.contains(i)) && e("focusFromOutsideViewport");
      })
    }, {
      default: h(() => [
        C(l.$slots, "default")
      ]),
      _: 3
    }));
  }
}), dy = /* @__PURE__ */ w({
  inheritAttrs: !1,
  __name: "ToastViewport",
  props: {
    hotkey: { default: () => ["F8"] },
    label: { type: [String, Function], default: "Notifications ({hotkey})" },
    asChild: { type: Boolean },
    as: { default: "ol" }
  },
  setup(a) {
    const t = a, { hotkey: e, label: n } = le(t), { forwardRef: l, currentElement: s } = I(), { createCollection: r } = Re(), i = r(s), u = Ja(), d = T(() => u.toastCount.value > 0), c = B(), f = B(), p = T(() => e.value.join("+").replace(/Key/g, "").replace(/Digit/g, ""));
    In(e.value, () => {
      s.value.focus();
    }), se(() => {
      u.onViewportChange(s.value);
    }), ve((y) => {
      const m = s.value;
      if (d.value && m) {
        const S = () => {
          if (!u.isClosePausedRef.value) {
            const E = new CustomEvent(Cn);
            m.dispatchEvent(E), u.isClosePausedRef.value = !0;
          }
        }, P = () => {
          if (u.isClosePausedRef.value) {
            const E = new CustomEvent(wn);
            m.dispatchEvent(E), u.isClosePausedRef.value = !1;
          }
        }, D = (E) => {
          !m.contains(E.relatedTarget) && P();
        }, g = () => {
          m.contains(document.activeElement) || P();
        }, x = (E) => {
          var M, V, O;
          const $ = E.altKey || E.ctrlKey || E.metaKey;
          if (E.key === "Tab" && !$) {
            const L = document.activeElement, j = E.shiftKey;
            if (E.target === m && j) {
              (M = c.value) == null || M.focus();
              return;
            }
            const X = v({ tabbingDirection: j ? "backwards" : "forwards" }), N = X.findIndex((q) => q === L);
            ga(X.slice(N + 1)) ? E.preventDefault() : j ? (V = c.value) == null || V.focus() : (O = f.value) == null || O.focus();
          }
        };
        m.addEventListener("focusin", S), m.addEventListener("focusout", D), m.addEventListener("pointermove", S), m.addEventListener("pointerleave", g), m.addEventListener("keydown", x), window.addEventListener("blur", S), window.addEventListener("focus", P), y(() => {
          m.removeEventListener("focusin", S), m.removeEventListener("focusout", D), m.removeEventListener("pointermove", S), m.removeEventListener("pointerleave", g), m.removeEventListener("keydown", x), window.removeEventListener("blur", S), window.removeEventListener("focus", P);
        });
      }
    });
    function v({ tabbingDirection: y }) {
      const S = i.value.map((P) => {
        const D = [P, ...Fn(P)];
        return y === "forwards" ? D : D.reverse();
      });
      return (y === "forwards" ? S.reverse() : S).flat();
    }
    return (y, m) => (b(), _(o(bi), {
      role: "region",
      "aria-label": typeof o(n) == "string" ? o(n).replace("{hotkey}", p.value) : o(n)(p.value),
      tabindex: "-1",
      style: Ce({
        // incase list has size when empty (e.g. padding), we remove pointer events so
        // it doesn't prevent interactions with page elements that it overlays
        pointerEvents: d.value ? void 0 : "none"
      })
    }, {
      default: h(() => [
        d.value ? (b(), _(Fo, {
          key: 0,
          ref: (S) => {
            c.value = o(Be)(S);
          },
          onFocusFromOutsideViewport: m[0] || (m[0] = () => {
            const S = v({
              tabbingDirection: "forwards"
            });
            o(ga)(S);
          })
        }, null, 512)) : ue("", !0),
        G(o(A), k({
          ref: o(l),
          tabindex: "-1",
          as: y.as,
          "as-child": y.asChild
        }, y.$attrs), {
          default: h(() => [
            C(y.$slots, "default")
          ]),
          _: 3
        }, 16, ["as", "as-child"]),
        d.value ? (b(), _(Fo, {
          key: 1,
          ref: (S) => {
            f.value = o(Be)(S);
          },
          onFocusFromOutsideViewport: m[1] || (m[1] = () => {
            const S = v({
              tabbingDirection: "backwards"
            });
            o(ga)(S);
          })
        }, null, 512)) : ue("", !0)
      ]),
      _: 3
    }, 8, ["aria-label", "style"]));
  }
}), cy = /* @__PURE__ */ w({
  __name: "ToastTitle",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    return I(), (e, n) => (b(), _(o(A), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), fy = /* @__PURE__ */ w({
  __name: "ToastDescription",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a;
    return I(), (e, n) => (b(), _(o(A), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), ap = /* @__PURE__ */ w({
  __name: "Toggle",
  props: {
    defaultValue: { type: Boolean },
    pressed: { type: Boolean, default: void 0 },
    disabled: { type: Boolean, default: !1 },
    asChild: { type: Boolean },
    as: { default: "button" }
  },
  emits: ["update:pressed"],
  setup(a, { emit: t }) {
    const e = a, n = t;
    I();
    const l = ne(e, "pressed", n, {
      defaultValue: e.defaultValue,
      passive: e.pressed === void 0
    });
    function s() {
      l.value = !l.value;
    }
    const r = T(() => l.value ? "on" : "off");
    return (i, u) => (b(), _(o(A), {
      type: i.as === "button" ? "button" : void 0,
      "as-child": e.asChild,
      as: i.as,
      "aria-pressed": o(l),
      "data-state": r.value,
      "data-disabled": i.disabled ? "" : void 0,
      disabled: i.disabled,
      onClick: s
    }, {
      default: h(() => [
        C(i.$slots, "default")
      ]),
      _: 3
    }, 8, ["type", "as-child", "as", "aria-pressed", "data-state", "data-disabled", "disabled"]));
  }
}), [np, op] = Q("ToggleGroupRoot"), lp = /* @__PURE__ */ w({
  __name: "ToggleGroupRoot",
  props: {
    rovingFocus: { type: Boolean, default: !0 },
    disabled: { type: Boolean, default: !1 },
    orientation: {},
    dir: {},
    loop: { type: Boolean, default: !0 },
    asChild: { type: Boolean },
    as: {},
    type: { default: "single" },
    modelValue: {},
    defaultValue: {}
  },
  emits: ["update:modelValue"],
  setup(a, { emit: t }) {
    const e = a, n = t, { loop: l, rovingFocus: s, disabled: r, dir: i } = le(e), u = be(i), { forwardRef: d } = I(), { modelValue: c, changeModelValue: f, isSingle: p } = vl(e, n);
    return op({
      isSingle: p,
      modelValue: c,
      changeModelValue: f,
      dir: u,
      orientation: e.orientation,
      loop: l,
      rovingFocus: s,
      disabled: r
    }), (v, y) => (b(), _(Ue(o(s) ? o(zt) : o(A)), {
      "as-child": "",
      orientation: o(s) ? v.orientation : void 0,
      dir: o(u),
      loop: o(s) ? o(l) : void 0
    }, {
      default: h(() => [
        G(o(A), {
          ref: o(d),
          role: "group",
          "as-child": v.asChild,
          as: v.as
        }, {
          default: h(() => [
            C(v.$slots, "default", { modelValue: o(c) })
          ]),
          _: 3
        }, 8, ["as-child", "as"])
      ]),
      _: 3
    }, 8, ["orientation", "dir", "loop"]));
  }
}), sp = /* @__PURE__ */ w({
  __name: "ToggleGroupItem",
  props: {
    value: {},
    defaultValue: { type: Boolean },
    pressed: { type: Boolean },
    disabled: { type: Boolean },
    asChild: { type: Boolean },
    as: { default: "button" }
  },
  setup(a) {
    const t = a, e = np(), n = T(() => {
      var i;
      return ((i = e.disabled) == null ? void 0 : i.value) || t.disabled;
    }), l = T(() => {
      var i;
      return (i = e.modelValue.value) == null ? void 0 : i.includes(t.value);
    }), s = T(() => {
      var i;
      return e.isSingle.value ? e.modelValue.value === t.value : (i = e.modelValue.value) == null ? void 0 : i.includes(t.value);
    }), { forwardRef: r } = I();
    return (i, u) => (b(), _(Ue(o(e).rovingFocus.value ? o(Kt) : o(A)), {
      "as-child": "",
      focusable: !n.value,
      active: l.value
    }, {
      default: h(() => [
        G(o(ap), k(t, {
          ref: o(r),
          disabled: n.value,
          pressed: s.value,
          "onUpdate:pressed": u[0] || (u[0] = (d) => o(e).changeModelValue(i.value))
        }), {
          default: h(() => [
            C(i.$slots, "default")
          ]),
          _: 3
        }, 16, ["disabled", "pressed"])
      ]),
      _: 3
    }, 8, ["focusable", "active"]));
  }
}), [Ms, rp] = Q("ToolbarRoot"), py = /* @__PURE__ */ w({
  __name: "ToolbarRoot",
  props: {
    orientation: { default: "horizontal" },
    dir: {},
    loop: { type: Boolean },
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a, { orientation: e, dir: n } = le(t), l = be(n), { forwardRef: s } = I();
    return rp({ orientation: e, dir: l }), (r, i) => (b(), _(o(zt), {
      "as-child": "",
      orientation: o(e),
      dir: o(l),
      loop: r.loop
    }, {
      default: h(() => [
        G(o(A), {
          ref: o(s),
          role: "toolbar",
          "aria-orientation": o(e),
          "as-child": r.asChild,
          as: r.as
        }, {
          default: h(() => [
            C(r.$slots, "default")
          ]),
          _: 3
        }, 8, ["aria-orientation", "as-child", "as"])
      ]),
      _: 3
    }, 8, ["orientation", "dir", "loop"]));
  }
}), ip = /* @__PURE__ */ w({
  __name: "ToolbarButton",
  props: {
    disabled: { type: Boolean },
    asChild: { type: Boolean },
    as: { default: "button" }
  },
  setup(a) {
    const t = a, { forwardRef: e } = I();
    return (n, l) => (b(), _(o(Kt), {
      "as-child": "",
      focusable: !n.disabled
    }, {
      default: h(() => [
        G(o(A), k({
          ref: o(e),
          type: n.as === "button" ? "button" : void 0
        }, t), {
          default: h(() => [
            C(n.$slots, "default")
          ]),
          _: 3
        }, 16, ["type"])
      ]),
      _: 3
    }, 8, ["focusable"]));
  }
}), vy = /* @__PURE__ */ w({
  __name: "ToolbarLink",
  props: {
    asChild: { type: Boolean },
    as: { default: "a" }
  },
  setup(a) {
    const t = a, { forwardRef: e } = I();
    return (n, l) => (b(), _(o(Kt), {
      "as-child": "",
      focusable: ""
    }, {
      default: h(() => [
        G(o(A), k(t, {
          ref: o(e),
          onKeydown: l[0] || (l[0] = (s) => {
            var r;
            s.key === " " && ((r = s.currentTarget) == null || r.click());
          })
        }), {
          default: h(() => [
            C(n.$slots, "default")
          ]),
          _: 3
        }, 16)
      ]),
      _: 3
    }));
  }
}), my = /* @__PURE__ */ w({
  __name: "ToolbarToggleGroup",
  props: {
    rovingFocus: { type: Boolean },
    disabled: { type: Boolean },
    orientation: {},
    dir: {},
    loop: { type: Boolean },
    asChild: { type: Boolean },
    as: {},
    type: {},
    modelValue: {},
    defaultValue: {}
  },
  emits: ["update:modelValue"],
  setup(a, { emit: t }) {
    const e = a, n = t, l = Ms(), s = Ie(n);
    return I(), (r, i) => (b(), _(o(lp), k({ ...e, ...o(s) }, {
      "data-orientation": o(l).orientation.value,
      dir: o(l).dir.value,
      "roving-focus": !1
    }), {
      default: h(() => [
        C(r.$slots, "default")
      ]),
      _: 3
    }, 16, ["data-orientation", "dir"]));
  }
}), hy = /* @__PURE__ */ w({
  __name: "ToolbarToggleItem",
  props: {
    value: {},
    defaultValue: { type: Boolean },
    pressed: { type: Boolean },
    disabled: { type: Boolean },
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a, { forwardRef: e } = I();
    return (n, l) => (b(), _(ip, { "as-child": "" }, {
      default: h(() => [
        G(o(sp), k(t, { ref: o(e) }), {
          default: h(() => [
            C(n.$slots, "default")
          ]),
          _: 3
        }, 16)
      ]),
      _: 3
    }));
  }
}), yy = /* @__PURE__ */ w({
  __name: "ToolbarSeparator",
  props: {
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a, e = Ms();
    return I(), (n, l) => (b(), _(os, {
      orientation: o(e).orientation.value,
      "as-child": t.asChild,
      as: n.as
    }, {
      default: h(() => [
        C(n.$slots, "default")
      ]),
      _: 3
    }, 8, ["orientation", "as-child", "as"]));
  }
}), Vs = "tooltip.open", [go, up] = Q("TooltipProvider"), gy = /* @__PURE__ */ w({
  __name: "TooltipProvider",
  props: {
    delayDuration: { default: 700 },
    skipDelayDuration: { default: 300 },
    disableHoverableContent: { type: Boolean, default: !1 },
    disableClosingTrigger: { type: Boolean },
    disabled: { type: Boolean },
    ignoreNonKeyboardFocus: { type: Boolean, default: !1 }
  },
  setup(a) {
    const t = a, { delayDuration: e, skipDelayDuration: n, disableHoverableContent: l, disableClosingTrigger: s, ignoreNonKeyboardFocus: r, disabled: i } = le(t);
    I();
    const u = B(!0), d = B(!1), { start: c, stop: f } = Tn(() => {
      u.value = !0;
    }, n, { immediate: !1 });
    return up({
      isOpenDelayed: u,
      delayDuration: e,
      onOpen() {
        f(), u.value = !1;
      },
      onClose() {
        c();
      },
      isPointerInTransitRef: d,
      disableHoverableContent: l,
      disableClosingTrigger: s,
      disabled: i,
      ignoreNonKeyboardFocus: r
    }), (p, v) => C(p.$slots, "default");
  }
}), [Qa, dp] = Q("TooltipRoot"), by = /* @__PURE__ */ w({
  __name: "TooltipRoot",
  props: {
    defaultOpen: { type: Boolean, default: !1 },
    open: { type: Boolean, default: void 0 },
    delayDuration: { default: void 0 },
    disableHoverableContent: { type: Boolean, default: void 0 },
    disableClosingTrigger: { type: Boolean, default: void 0 },
    disabled: { type: Boolean, default: void 0 },
    ignoreNonKeyboardFocus: { type: Boolean, default: void 0 }
  },
  emits: ["update:open"],
  setup(a, { emit: t }) {
    const e = a, n = t;
    I();
    const l = go(), s = T(() => e.disableHoverableContent ?? l.disableHoverableContent.value), r = T(() => e.disableClosingTrigger ?? l.disableClosingTrigger.value), i = T(() => e.disabled ?? l.disabled.value), u = T(() => e.delayDuration ?? l.delayDuration.value), d = T(() => e.ignoreNonKeyboardFocus ?? l.ignoreNonKeyboardFocus.value), c = ne(e, "open", n, {
      defaultValue: e.defaultOpen,
      passive: e.open === void 0
    });
    ee(c, (g) => {
      l.onClose && (g ? (l.onOpen(), document.dispatchEvent(new CustomEvent(Vs))) : l.onClose());
    });
    const f = B(!1), p = B(), v = T(() => c.value ? f.value ? "delayed-open" : "instant-open" : "closed"), { start: y, stop: m } = Tn(() => {
      f.value = !0, c.value = !0;
    }, u, { immediate: !1 });
    function S() {
      m(), f.value = !1, c.value = !0;
    }
    function P() {
      m(), c.value = !1;
    }
    function D() {
      y();
    }
    return dp({
      contentId: "",
      open: c,
      stateAttribute: v,
      trigger: p,
      onTriggerChange(g) {
        p.value = g;
      },
      onTriggerEnter() {
        l.isOpenDelayed.value ? D() : S();
      },
      onTriggerLeave() {
        s.value ? P() : m();
      },
      onOpen: S,
      onClose: P,
      disableHoverableContent: s,
      disableClosingTrigger: r,
      disabled: i,
      ignoreNonKeyboardFocus: d
    }), (g, x) => (b(), _(o(xt), null, {
      default: h(() => [
        C(g.$slots, "default")
      ]),
      _: 3
    }));
  }
}), Cy = /* @__PURE__ */ w({
  __name: "TooltipTrigger",
  props: {
    asChild: { type: Boolean },
    as: { default: "button" }
  },
  setup(a) {
    const t = a, e = Qa(), n = go();
    e.contentId || (e.contentId = me(void 0, "radix-vue-tooltip-content"));
    const { forwardRef: l, currentElement: s } = I(), r = B(!1), i = B(!1), u = T(() => e.disabled.value ? {} : {
      click: m,
      focus: v,
      pointermove: f,
      pointerleave: p,
      pointerdown: c,
      blur: y
    });
    se(() => {
      e.onTriggerChange(s.value);
    });
    function d() {
      r.value = !1;
    }
    function c() {
      r.value = !0, document.addEventListener("pointerup", d, { once: !0 });
    }
    function f(S) {
      S.pointerType !== "touch" && !i.value && !n.isPointerInTransitRef.value && (e.onTriggerEnter(), i.value = !0);
    }
    function p() {
      e.onTriggerLeave(), i.value = !1;
    }
    function v(S) {
      var P, D;
      r.value || e.ignoreNonKeyboardFocus.value && !((D = (P = S.target).matches) != null && D.call(P, ":focus-visible")) || e.onOpen();
    }
    function y() {
      e.onClose();
    }
    function m() {
      e.disableClosingTrigger.value || e.onClose();
    }
    return (S, P) => (b(), _(o(St), { "as-child": "" }, {
      default: h(() => [
        G(o(A), k({
          ref: o(l),
          "aria-describedby": o(e).open.value ? o(e).contentId : void 0,
          "data-state": o(e).stateAttribute.value,
          as: S.as,
          "as-child": t.asChild
        }, Pn(u.value)), {
          default: h(() => [
            C(S.$slots, "default")
          ]),
          _: 3
        }, 16, ["aria-describedby", "data-state", "as", "as-child"])
      ]),
      _: 3
    }));
  }
}), Fs = /* @__PURE__ */ w({
  __name: "TooltipContentImpl",
  props: {
    ariaLabel: {},
    asChild: { type: Boolean },
    as: {},
    side: { default: "top" },
    sideOffset: { default: 0 },
    align: { default: "center" },
    alignOffset: {},
    avoidCollisions: { type: Boolean, default: !0 },
    collisionBoundary: { default: () => [] },
    collisionPadding: { default: 0 },
    arrowPadding: { default: 0 },
    sticky: { default: "partial" },
    hideWhenDetached: { type: Boolean, default: !1 }
  },
  emits: ["escapeKeyDown", "pointerDownOutside"],
  setup(a, { emit: t }) {
    const e = a, n = t, l = Qa(), { forwardRef: s } = I(), r = En(), i = T(() => {
      var c;
      return (c = r.default) == null ? void 0 : c.call(r);
    }), u = T(() => {
      var p;
      if (e.ariaLabel)
        return e.ariaLabel;
      let c = "";
      function f(v) {
        typeof v.children == "string" ? c += v.children : Array.isArray(v.children) && v.children.forEach((y) => f(y));
      }
      return (p = i.value) == null || p.forEach((v) => f(v)), c;
    }), d = T(() => {
      const { ariaLabel: c, ...f } = e;
      return f;
    });
    return se(() => {
      it(window, "scroll", (c) => {
        const f = c.target;
        f != null && f.contains(l.trigger.value) && l.onClose();
      }), it(window, Vs, l.onClose);
    }), (c, f) => (b(), _(o(vt), {
      "as-child": "",
      "disable-outside-pointer-events": !1,
      onEscapeKeyDown: f[0] || (f[0] = (p) => n("escapeKeyDown", p)),
      onPointerDownOutside: f[1] || (f[1] = (p) => {
        var v;
        o(l).disableClosingTrigger.value && ((v = o(l).trigger.value) != null && v.contains(p.target)) && p.preventDefault(), n("pointerDownOutside", p);
      }),
      onFocusOutside: f[2] || (f[2] = ge(() => {
      }, ["prevent"])),
      onDismiss: f[3] || (f[3] = (p) => o(l).onClose())
    }, {
      default: h(() => [
        G(o(Ct), k({
          ref: o(s),
          "data-state": o(l).stateAttribute.value
        }, { ...c.$attrs, ...d.value }, { style: {
          "--radix-tooltip-content-transform-origin": "var(--radix-popper-transform-origin)",
          "--radix-tooltip-content-available-width": "var(--radix-popper-available-width)",
          "--radix-tooltip-content-available-height": "var(--radix-popper-available-height)",
          "--radix-tooltip-trigger-width": "var(--radix-popper-anchor-width)",
          "--radix-tooltip-trigger-height": "var(--radix-popper-anchor-height)"
        } }), {
          default: h(() => [
            C(c.$slots, "default"),
            G(o(Nt), {
              id: o(l).contentId,
              role: "tooltip"
            }, {
              default: h(() => [
                ye(ke(u.value), 1)
              ]),
              _: 1
            }, 8, ["id"])
          ]),
          _: 3
        }, 16, ["data-state", "style"])
      ]),
      _: 3
    }));
  }
}), cp = /* @__PURE__ */ w({
  __name: "TooltipContentHoverable",
  props: {
    ariaLabel: {},
    asChild: { type: Boolean },
    as: {},
    side: {},
    sideOffset: {},
    align: {},
    alignOffset: {},
    avoidCollisions: { type: Boolean },
    collisionBoundary: {},
    collisionPadding: {},
    arrowPadding: {},
    sticky: {},
    hideWhenDetached: { type: Boolean }
  },
  setup(a) {
    const e = _t(a), { forwardRef: n, currentElement: l } = I(), { trigger: s, onClose: r } = Qa(), i = go(), { isPointerInTransit: u, onPointerExit: d } = rl(s, l);
    return i.isPointerInTransitRef = u, d(() => {
      r();
    }), (c, f) => (b(), _(Fs, k({ ref: o(n) }, o(e)), {
      default: h(() => [
        C(c.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), wy = /* @__PURE__ */ w({
  __name: "TooltipContent",
  props: {
    ariaLabel: {},
    asChild: { type: Boolean },
    as: {},
    side: { default: "top" },
    sideOffset: {},
    align: {},
    alignOffset: {},
    avoidCollisions: { type: Boolean },
    collisionBoundary: {},
    collisionPadding: {},
    arrowPadding: {},
    sticky: {},
    hideWhenDetached: { type: Boolean }
  },
  emits: ["escapeKeyDown", "pointerDownOutside"],
  setup(a, { emit: t }) {
    const e = a, n = t, l = Qa(), s = _e(e, n), { forwardRef: r } = I();
    return (i, u) => o(l).open.value ? (b(), _(Ue(o(l).disableHoverableContent.value ? Fs : cp), k({
      key: 0,
      ref: o(r)
    }, o(s)), {
      default: h(() => [
        C(i.$slots, "default")
      ]),
      _: 3
    }, 16)) : ue("", !0);
  }
}), _y = /* @__PURE__ */ w({
  __name: "TooltipArrow",
  props: {
    width: { default: 10 },
    height: { default: 5 },
    asChild: { type: Boolean },
    as: { default: "svg" }
  },
  setup(a) {
    const t = a;
    return I(), (e, n) => (b(), _(o(Lt), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), xy = /* @__PURE__ */ w({
  __name: "TooltipPortal",
  props: {
    to: {},
    disabled: { type: Boolean },
    forceMount: { type: Boolean }
  },
  setup(a) {
    const t = a;
    return (e, n) => (b(), _(o(pt), z(K(t)), {
      default: h(() => [
        C(e.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), Sy = /* @__PURE__ */ w({
  __name: "Viewport",
  props: {
    nonce: {},
    asChild: { type: Boolean },
    as: {}
  },
  setup(a) {
    const t = a, { forwardRef: e } = I();
    return (n, l) => (b(), fe(Pe, null, [
      G(o(A), k({ ...n.$attrs, ...t }, {
        ref: o(e),
        "data-radix-viewport": "",
        role: "presentation",
        style: {
          // we use position: 'relative' here on the `viewport` so that when we call
          // `selectedItem.offsetTop` in calculations, the offset is relative to the viewport
          // (independent of the scrollUpButton).
          position: "relative",
          flex: 1,
          overflow: "auto"
        }
      }), {
        default: h(() => [
          C(n.$slots, "default")
        ]),
        _: 3
      }, 16, ["style"]),
      G(o(A), {
        as: "style",
        nonce: n.nonce
      }, {
        default: h(() => [
          ye(" /* Hide scrollbars cross-browser and enable momentum scroll for touch devices */ [data-radix-viewport] { scrollbar-width:none; -ms-overflow-style: none; -webkit-overflow-scrolling: touch; } [data-radix-viewport]::-webkit-scrollbar { display: none; } ")
        ]),
        _: 1
      }, 8, ["nonce"])
    ], 64));
  }
});
export {
  Cp as AccordionContent,
  wp as AccordionHeader,
  bp as AccordionItem,
  gp as AccordionRoot,
  _p as AccordionTrigger,
  Rp as AlertDialogAction,
  Bp as AlertDialogCancel,
  Dp as AlertDialogContent,
  Ip as AlertDialogDescription,
  $p as AlertDialogOverlay,
  Ep as AlertDialogPortal,
  Sp as AlertDialogRoot,
  Tp as AlertDialogTitle,
  Pp as AlertDialogTrigger,
  Ap as AspectRatio,
  Mp as AvatarFallback,
  kp as AvatarImage,
  Op as AvatarRoot,
  Qi as CalendarCell,
  su as CalendarCellTrigger,
  Ji as CalendarGrid,
  ou as CalendarGridBody,
  nu as CalendarGridHead,
  lu as CalendarGridRow,
  eu as CalendarHeadCell,
  Xi as CalendarHeader,
  Zi as CalendarHeading,
  tu as CalendarNext,
  au as CalendarPrev,
  Yi as CalendarRoot,
  Fp as CheckboxIndicator,
  Vp as CheckboxRoot,
  ri as CollapsibleContent,
  oi as CollapsibleRoot,
  li as CollapsibleTrigger,
  zp as ComboboxAnchor,
  Jp as ComboboxArrow,
  Hp as ComboboxCancel,
  Up as ComboboxContent,
  Gp as ComboboxEmpty,
  Wp as ComboboxGroup,
  Np as ComboboxInput,
  Yp as ComboboxItem,
  Xp as ComboboxItemIndicator,
  jp as ComboboxLabel,
  Qp as ComboboxPortal,
  Lp as ComboboxRoot,
  Zp as ComboboxSeparator,
  Kp as ComboboxTrigger,
  qp as ComboboxViewport,
  hp as ConfigProvider,
  ov as ContextMenuArrow,
  iv as ContextMenuCheckboxItem,
  nv as ContextMenuContent,
  sv as ContextMenuGroup,
  lv as ContextMenuItem,
  uv as ContextMenuItemIndicator,
  dv as ContextMenuLabel,
  av as ContextMenuPortal,
  cv as ContextMenuRadioGroup,
  fv as ContextMenuRadioItem,
  ev as ContextMenuRoot,
  rv as ContextMenuSeparator,
  pv as ContextMenuSub,
  vv as ContextMenuSubContent,
  mv as ContextMenuSubTrigger,
  tv as ContextMenuTrigger,
  id as DateFieldInput,
  Zu as DateFieldRoot,
  Iv as DatePickerAnchor,
  Rv as DatePickerArrow,
  Bv as DatePickerCalendar,
  bv as DatePickerCell,
  Ev as DatePickerCellTrigger,
  Av as DatePickerClose,
  kv as DatePickerContent,
  Tv as DatePickerField,
  gv as DatePickerGrid,
  Sv as DatePickerGridBody,
  xv as DatePickerGridHead,
  Pv as DatePickerGridRow,
  Cv as DatePickerHeadCell,
  hv as DatePickerHeader,
  yv as DatePickerHeading,
  Dv as DatePickerInput,
  wv as DatePickerNext,
  _v as DatePickerPrev,
  $v as DatePickerRoot,
  Ov as DatePickerTrigger,
  md as DateRangeFieldInput,
  vd as DateRangeFieldRoot,
  Zv as DateRangePickerAnchor,
  Jv as DateRangePickerArrow,
  Yv as DateRangePickerCalendar,
  Lv as DateRangePickerCell,
  Uv as DateRangePickerCellTrigger,
  Qv as DateRangePickerClose,
  tm as DateRangePickerContent,
  Xv as DateRangePickerField,
  Fv as DateRangePickerGrid,
  Wv as DateRangePickerGridBody,
  Hv as DateRangePickerGridHead,
  jv as DateRangePickerGridRow,
  Nv as DateRangePickerHeadCell,
  Mv as DateRangePickerHeader,
  Vv as DateRangePickerHeading,
  Gv as DateRangePickerInput,
  zv as DateRangePickerNext,
  Kv as DateRangePickerPrev,
  qv as DateRangePickerRoot,
  em as DateRangePickerTrigger,
  gl as DialogClose,
  Mi as DialogContent,
  Ni as DialogDescription,
  Fi as DialogOverlay,
  xp as DialogPortal,
  pi as DialogRoot,
  Li as DialogTitle,
  vi as DialogTrigger,
  sm as DropdownMenuArrow,
  dm as DropdownMenuCheckboxItem,
  lm as DropdownMenuContent,
  im as DropdownMenuGroup,
  rm as DropdownMenuItem,
  cm as DropdownMenuItemIndicator,
  fm as DropdownMenuLabel,
  om as DropdownMenuPortal,
  pm as DropdownMenuRadioGroup,
  vm as DropdownMenuRadioItem,
  am as DropdownMenuRoot,
  um as DropdownMenuSeparator,
  mm as DropdownMenuSub,
  hm as DropdownMenuSubContent,
  ym as DropdownMenuSubTrigger,
  nm as DropdownMenuTrigger,
  _m as HoverCardArrow,
  wm as HoverCardContent,
  Cm as HoverCardPortal,
  gm as HoverCardRoot,
  bm as HoverCardTrigger,
  xm as Label,
  Pm as ListboxContent,
  Em as ListboxFilter,
  Tm as ListboxGroup,
  Im as ListboxGroupLabel,
  Dm as ListboxItem,
  $m as ListboxItemIndicator,
  Sm as ListboxRoot,
  Bm as ListboxVirtualizer,
  Vm as MenubarArrow,
  zm as MenubarCheckboxItem,
  Mm as MenubarContent,
  Lm as MenubarGroup,
  Fm as MenubarItem,
  Km as MenubarItemIndicator,
  Hm as MenubarLabel,
  Am as MenubarMenu,
  km as MenubarPortal,
  Wm as MenubarRadioGroup,
  jm as MenubarRadioItem,
  Rm as MenubarRoot,
  Nm as MenubarSeparator,
  Um as MenubarSub,
  Gm as MenubarSubContent,
  qm as MenubarSubTrigger,
  Om as MenubarTrigger,
  Zm as NavigationMenuContent,
  Jm as NavigationMenuIndicator,
  Xm as NavigationMenuItem,
  Qm as NavigationMenuLink,
  eh as NavigationMenuList,
  Ym as NavigationMenuRoot,
  th as NavigationMenuSub,
  ah as NavigationMenuTrigger,
  nh as NavigationMenuViewport,
  lh as PaginationEllipsis,
  sh as PaginationFirst,
  rh as PaginationLast,
  ih as PaginationList,
  uh as PaginationListItem,
  dh as PaginationNext,
  ch as PaginationPrev,
  oh as PaginationRoot,
  ph as PinInputInput,
  fh as PinInputRoot,
  Yl as PopoverAnchor,
  Gl as PopoverArrow,
  ql as PopoverClose,
  Ul as PopoverContent,
  Wl as PopoverPortal,
  Kl as PopoverRoot,
  Hl as PopoverTrigger,
  A as Primitive,
  mh as ProgressIndicator,
  vh as ProgressRoot,
  gh as RadioGroupIndicator,
  yh as RadioGroupItem,
  hh as RadioGroupRoot,
  bc as RangeCalendarCell,
  Ec as RangeCalendarCellTrigger,
  gc as RangeCalendarGrid,
  Sc as RangeCalendarGridBody,
  xc as RangeCalendarGridHead,
  Pc as RangeCalendarGridRow,
  Cc as RangeCalendarHeadCell,
  hc as RangeCalendarHeader,
  yc as RangeCalendarHeading,
  wc as RangeCalendarNext,
  _c as RangeCalendarPrev,
  mc as RangeCalendarRoot,
  xh as ScrollAreaCorner,
  bh as ScrollAreaRoot,
  wh as ScrollAreaScrollbar,
  _h as ScrollAreaThumb,
  Ch as ScrollAreaViewport,
  $h as SelectArrow,
  Dh as SelectContent,
  Rh as SelectGroup,
  Lh as SelectIcon,
  Th as SelectItem,
  Ih as SelectItemIndicator,
  Oh as SelectItemText,
  Ah as SelectLabel,
  Eh as SelectPortal,
  Sh as SelectRoot,
  Vh as SelectScrollDownButton,
  Mh as SelectScrollUpButton,
  Bh as SelectSeparator,
  Ph as SelectTrigger,
  Fh as SelectValue,
  kh as SelectViewport,
  Nh as Separator,
  Wh as SliderRange,
  zh as SliderRoot,
  Kh as SliderThumb,
  Hh as SliderTrack,
  Mn as Slot,
  jh as SplitterGroup,
  Uh as SplitterPanel,
  Gh as SplitterResizeHandle,
  qh as SwitchRoot,
  Yh as SwitchThumb,
  Jh as TabsContent,
  ey as TabsIndicator,
  Zh as TabsList,
  Xh as TabsRoot,
  Qh as TabsTrigger,
  sy as TagsInputClear,
  ay as TagsInputInput,
  ny as TagsInputItem,
  ly as TagsInputItemDelete,
  oy as TagsInputItemText,
  ty as TagsInputRoot,
  uy as ToastAction,
  tp as ToastClose,
  fy as ToastDescription,
  ry as ToastProvider,
  iy as ToastRoot,
  cy as ToastTitle,
  dy as ToastViewport,
  ap as Toggle,
  sp as ToggleGroupItem,
  lp as ToggleGroupRoot,
  ip as ToolbarButton,
  vy as ToolbarLink,
  py as ToolbarRoot,
  yy as ToolbarSeparator,
  my as ToolbarToggleGroup,
  hy as ToolbarToggleItem,
  _y as TooltipArrow,
  wy as TooltipContent,
  xy as TooltipPortal,
  gy as TooltipProvider,
  by as TooltipRoot,
  Cy as TooltipTrigger,
  Sy as Viewport,
  Nt as VisuallyHidden,
  Q as createContext,
  sa as useBodyScrollLock,
  An as useDateFormatter,
  Ie as useEmitAsProps,
  I as useForwardExpose,
  _t as useForwardProps,
  _e as useForwardPropsEmits,
  me as useId,
  dl as useStateMachine,
  yp as withDefault
};
